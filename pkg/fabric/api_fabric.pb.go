// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api_fabric.proto

package fabric

import (
	fmt "fmt"
	inventory "github.com/Vitality-South/magnolia-fabrics-api/pkg/inventory"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Fabric struct {
	// @gotags: dynamo:"FabricSKU"
	Sku string `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	// @gotags: dynamo:"FabricProductCode"
	ProductCode string `protobuf:"bytes,2,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	// @gotags: dynamo:"FabricPattern"
	Pattern string `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// @gotags: dynamo:"FabricPrimaryColor"
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// @gotags: dynamo:"FabricPatternColorCombo"
	PatternColorCombo string `protobuf:"bytes,5,opt,name=pattern_color_combo,json=patternColorCombo,proto3" json:"pattern_color_combo,omitempty"`
	// @gotags: dynamo:"FabricStatus"
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	// @gotags: dynamo:"FabricIntroDate"
	IntroDate string `protobuf:"bytes,7,opt,name=intro_date,json=introDate,proto3" json:"intro_date,omitempty"`
	// @gotags: dynamo:"FabricContents"
	Contents string `protobuf:"bytes,8,opt,name=contents,proto3" json:"contents,omitempty"`
	// @gotags: dynamo:"FabricWidth"
	Width string `protobuf:"bytes,9,opt,name=width,proto3" json:"width,omitempty"`
	// @gotags: dynamo:"FabricDirection"
	Direction string `protobuf:"bytes,10,opt,name=direction,proto3" json:"direction,omitempty"`
	// @gotags: dynamo:"FabricHRepeat"
	HRepeat string `protobuf:"bytes,11,opt,name=h_repeat,json=hRepeat,proto3" json:"h_repeat,omitempty"`
	// @gotags: dynamo:"FabricVRepeat"
	VRepeat string `protobuf:"bytes,12,opt,name=v_repeat,json=vRepeat,proto3" json:"v_repeat,omitempty"`
	// @gotags: dynamo:"FabricCleaningCode"
	CleaningCode string `protobuf:"bytes,13,opt,name=cleaning_code,json=cleaningCode,proto3" json:"cleaning_code,omitempty"`
	// @gotags: dynamo:"FabricDoubleRubs"
	DoubleRubs string `protobuf:"bytes,14,opt,name=double_rubs,json=doubleRubs,proto3" json:"double_rubs,omitempty"`
	// @gotags: dynamo:"FabricMisc"
	Misc string `protobuf:"bytes,15,opt,name=misc,proto3" json:"misc,omitempty"`
	// @gotags: dynamo:"FabricDisclaimer"
	Disclaimer string `protobuf:"bytes,16,opt,name=disclaimer,proto3" json:"disclaimer,omitempty"`
	// @gotags: dynamo:"FabricUses"
	Uses []string `protobuf:"bytes,17,rep,name=uses,proto3" json:"uses,omitempty"`
	// @gotags: dynamo:"FabricDesigns"
	Designs []string `protobuf:"bytes,18,rep,name=designs,proto3" json:"designs,omitempty"`
	// @gotags: dynamo:"FabricColors"
	Colors []string `protobuf:"bytes,19,rep,name=colors,proto3" json:"colors,omitempty"`
	// @gotags: dynamo:"FabricOrigin"
	Origin string `protobuf:"bytes,20,opt,name=origin,proto3" json:"origin,omitempty"`
	// @gotags: dynamo:"FabricPillingGrade"
	PillingGrade string `protobuf:"bytes,21,opt,name=pilling_grade,json=pillingGrade,proto3" json:"pilling_grade,omitempty"`
	// @gotags: dynamo:"FabricFireCode"
	FireCode string `protobuf:"bytes,22,opt,name=fire_code,json=fireCode,proto3" json:"fire_code,omitempty"`
	// @gotags: dynamo:"FabricCategories"
	Categories []string `protobuf:"bytes,23,rep,name=categories,proto3" json:"categories,omitempty"`
	// @gotags: dynamo:"FabricBrand"
	Brand string `protobuf:"bytes,24,opt,name=brand,proto3" json:"brand,omitempty"`
	// @gotags: dynamo:"FabricIsDropShipped"
	IsDropShipped bool `protobuf:"varint,25,opt,name=is_drop_shipped,json=isDropShipped,proto3" json:"is_drop_shipped,omitempty"`
	// @gotags: dynamo:"FabricMainImage"
	Image string `protobuf:"bytes,26,opt,name=image,proto3" json:"image,omitempty"`
	// @gotags: dynamo:"FabricAPIDisplayPrice"
	DisplayPrice string `protobuf:"bytes,27,opt,name=display_price,json=displayPrice,proto3" json:"display_price,omitempty"`
	// @gotags: dynamo:"FabricAPIPrice"
	Price int32 `protobuf:"varint,28,opt,name=price,proto3" json:"price,omitempty"`
	// @gotags: dynamo:"FabricOtherImages"
	SupplementalImages []string `protobuf:"bytes,29,rep,name=supplemental_images,json=supplementalImages,proto3" json:"supplemental_images,omitempty"`
	// @gotags: dynamo:"FabricFullWidthImages"
	FullWidthImages []string `protobuf:"bytes,30,rep,name=full_width_images,json=fullWidthImages,proto3" json:"full_width_images,omitempty"`
	// @gotags: dynamo:"-"
	Inventory            *inventory.Inventory `protobuf:"bytes,31,opt,name=inventory,proto3" json:"inventory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Fabric) Reset()         { *m = Fabric{} }
func (m *Fabric) String() string { return proto.CompactTextString(m) }
func (*Fabric) ProtoMessage()    {}
func (*Fabric) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3904a29c9a10eea, []int{0}
}

func (m *Fabric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fabric.Unmarshal(m, b)
}
func (m *Fabric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fabric.Marshal(b, m, deterministic)
}
func (m *Fabric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fabric.Merge(m, src)
}
func (m *Fabric) XXX_Size() int {
	return xxx_messageInfo_Fabric.Size(m)
}
func (m *Fabric) XXX_DiscardUnknown() {
	xxx_messageInfo_Fabric.DiscardUnknown(m)
}

var xxx_messageInfo_Fabric proto.InternalMessageInfo

func (m *Fabric) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *Fabric) GetProductCode() string {
	if m != nil {
		return m.ProductCode
	}
	return ""
}

func (m *Fabric) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *Fabric) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Fabric) GetPatternColorCombo() string {
	if m != nil {
		return m.PatternColorCombo
	}
	return ""
}

func (m *Fabric) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Fabric) GetIntroDate() string {
	if m != nil {
		return m.IntroDate
	}
	return ""
}

func (m *Fabric) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *Fabric) GetWidth() string {
	if m != nil {
		return m.Width
	}
	return ""
}

func (m *Fabric) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

func (m *Fabric) GetHRepeat() string {
	if m != nil {
		return m.HRepeat
	}
	return ""
}

func (m *Fabric) GetVRepeat() string {
	if m != nil {
		return m.VRepeat
	}
	return ""
}

func (m *Fabric) GetCleaningCode() string {
	if m != nil {
		return m.CleaningCode
	}
	return ""
}

func (m *Fabric) GetDoubleRubs() string {
	if m != nil {
		return m.DoubleRubs
	}
	return ""
}

func (m *Fabric) GetMisc() string {
	if m != nil {
		return m.Misc
	}
	return ""
}

func (m *Fabric) GetDisclaimer() string {
	if m != nil {
		return m.Disclaimer
	}
	return ""
}

func (m *Fabric) GetUses() []string {
	if m != nil {
		return m.Uses
	}
	return nil
}

func (m *Fabric) GetDesigns() []string {
	if m != nil {
		return m.Designs
	}
	return nil
}

func (m *Fabric) GetColors() []string {
	if m != nil {
		return m.Colors
	}
	return nil
}

func (m *Fabric) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Fabric) GetPillingGrade() string {
	if m != nil {
		return m.PillingGrade
	}
	return ""
}

func (m *Fabric) GetFireCode() string {
	if m != nil {
		return m.FireCode
	}
	return ""
}

func (m *Fabric) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Fabric) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Fabric) GetIsDropShipped() bool {
	if m != nil {
		return m.IsDropShipped
	}
	return false
}

func (m *Fabric) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Fabric) GetDisplayPrice() string {
	if m != nil {
		return m.DisplayPrice
	}
	return ""
}

func (m *Fabric) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Fabric) GetSupplementalImages() []string {
	if m != nil {
		return m.SupplementalImages
	}
	return nil
}

func (m *Fabric) GetFullWidthImages() []string {
	if m != nil {
		return m.FullWidthImages
	}
	return nil
}

func (m *Fabric) GetInventory() *inventory.Inventory {
	if m != nil {
		return m.Inventory
	}
	return nil
}

func init() {
	proto.RegisterType((*Fabric)(nil), "magnoliafabrics.Fabric")
}

func init() {
	proto.RegisterFile("api_fabric.proto", fileDescriptor_a3904a29c9a10eea)
}

var fileDescriptor_a3904a29c9a10eea = []byte{
	// 612 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x94, 0x5f, 0x4f, 0x1b, 0x3b,
	0x10, 0xc5, 0x95, 0x0b, 0x84, 0xc4, 0x81, 0x1b, 0x70, 0xb8, 0xdc, 0x21, 0xfc, 0x4b, 0x5b, 0xa9,
	0x8a, 0x2a, 0x91, 0x48, 0xed, 0x4b, 0xab, 0xbe, 0x15, 0xd4, 0x8a, 0xb7, 0x2a, 0x48, 0xad, 0xd4,
	0x97, 0x95, 0x77, 0x6d, 0x36, 0x23, 0x76, 0x6d, 0xcb, 0xf6, 0x52, 0xf1, 0xd5, 0xfa, 0xe9, 0x2a,
	0x8f, 0x77, 0x53, 0xd4, 0x37, 0x9f, 0xdf, 0x39, 0x63, 0x66, 0x3c, 0x6c, 0xd8, 0x81, 0xb0, 0x98,
	0xdd, 0x8b, 0xdc, 0x61, 0xb1, 0xb0, 0xce, 0x04, 0xc3, 0xc7, 0xb5, 0x28, 0xb5, 0xa9, 0x50, 0x24,
	0xea, 0xa7, 0x93, 0x18, 0x41, 0xfd, 0xa8, 0x74, 0x30, 0xee, 0x29, 0xa5, 0x5e, 0xfe, 0xda, 0x65,
	0xfd, 0xcf, 0x14, 0xe0, 0x07, 0x6c, 0xcb, 0x3f, 0x34, 0xd0, 0x9b, 0xf5, 0xe6, 0xc3, 0x55, 0x3c,
	0xf2, 0x17, 0x6c, 0xcf, 0x3a, 0x23, 0x9b, 0x22, 0x64, 0x85, 0x91, 0x0a, 0xfe, 0x21, 0x6b, 0xd4,
	0xb2, 0x6b, 0x23, 0x15, 0x07, 0xb6, 0x6b, 0x45, 0x08, 0xca, 0x69, 0xd8, 0x22, 0xb7, 0x93, 0xfc,
	0x88, 0xed, 0x14, 0xa6, 0x32, 0x0e, 0xb6, 0x89, 0x27, 0xc1, 0x17, 0x6c, 0xd2, 0x06, 0x32, 0x02,
	0x59, 0x61, 0xea, 0xdc, 0xc0, 0x0e, 0x65, 0x0e, 0x5b, 0xeb, 0x3a, 0x3a, 0xd7, 0xd1, 0xe0, 0xc7,
	0xac, 0xef, 0x83, 0x08, 0x8d, 0x87, 0x3e, 0x45, 0x5a, 0xc5, 0xcf, 0x19, 0x43, 0x1d, 0x9c, 0xc9,
	0xa4, 0x08, 0x0a, 0x76, 0xc9, 0x1b, 0x12, 0xb9, 0x11, 0x41, 0xf1, 0x29, 0x1b, 0x14, 0x46, 0x07,
	0xa5, 0x83, 0x87, 0x01, 0x99, 0x1b, 0x1d, 0x1b, 0xfb, 0x89, 0x32, 0xac, 0x61, 0x98, 0x1a, 0x23,
	0xc1, 0xcf, 0xd8, 0x50, 0xa2, 0x53, 0x45, 0x40, 0xa3, 0x81, 0xa5, 0xfb, 0x36, 0x80, 0x9f, 0xb0,
	0xc1, 0x3a, 0x73, 0xca, 0x2a, 0x11, 0x60, 0x94, 0xe6, 0x5c, 0xaf, 0x48, 0x46, 0xeb, 0xb1, 0xb3,
	0xf6, 0x92, 0xf5, 0xd8, 0x5a, 0xaf, 0xd8, 0x7e, 0x51, 0x29, 0xa1, 0x51, 0x97, 0xe9, 0x01, 0xf7,
	0xc9, 0xdf, 0xeb, 0x20, 0xbd, 0xe0, 0x25, 0x1b, 0x49, 0xd3, 0xe4, 0x95, 0xca, 0x5c, 0x93, 0x7b,
	0xf8, 0x97, 0x22, 0x2c, 0xa1, 0x55, 0x93, 0x7b, 0xce, 0xd9, 0x76, 0x8d, 0xbe, 0x80, 0x31, 0x39,
	0x74, 0xe6, 0x17, 0x8c, 0x49, 0xf4, 0x45, 0x25, 0xb0, 0x56, 0x0e, 0x0e, 0xda, 0x9a, 0x0d, 0x89,
	0x35, 0x8d, 0x57, 0x1e, 0x0e, 0x67, 0x5b, 0xb1, 0x26, 0x9e, 0xe3, 0xaa, 0xa4, 0xf2, 0x58, 0x6a,
	0x0f, 0x9c, 0x70, 0x27, 0xe3, 0x23, 0xd3, 0x32, 0x3c, 0x4c, 0xc8, 0x68, 0x55, 0xe4, 0xc6, 0x61,
	0x89, 0x1a, 0x8e, 0xd2, 0xe3, 0x27, 0x15, 0xe7, 0xb2, 0x58, 0x55, 0x71, 0xac, 0xd2, 0x09, 0xa9,
	0xe0, 0xbf, 0x34, 0x57, 0x0b, 0xbf, 0x44, 0xc6, 0x4f, 0xd9, 0xf0, 0x1e, 0x9d, 0x4a, 0x83, 0x1f,
	0xa7, 0x1d, 0x44, 0x40, 0x43, 0x5f, 0x30, 0x56, 0x88, 0xa0, 0x4a, 0xe3, 0x50, 0x79, 0xf8, 0x9f,
	0xfe, 0xea, 0x33, 0x12, 0x77, 0x94, 0x3b, 0xa1, 0x25, 0x40, 0xda, 0x11, 0x09, 0xfe, 0x9a, 0x8d,
	0xd1, 0x67, 0xd2, 0x19, 0x9b, 0xf9, 0x35, 0x5a, 0xab, 0x24, 0x9c, 0xcc, 0x7a, 0xf3, 0xc1, 0x6a,
	0x1f, 0xfd, 0x8d, 0x33, 0xf6, 0x2e, 0xc1, 0x58, 0x8d, 0xb5, 0x28, 0x15, 0x4c, 0x53, 0x35, 0x89,
	0xd8, 0xb5, 0x44, 0x6f, 0x2b, 0xf1, 0x94, 0x59, 0x87, 0x85, 0x82, 0xd3, 0xd4, 0x75, 0x0b, 0xbf,
	0x46, 0x16, 0x4b, 0x93, 0x79, 0x36, 0xeb, 0xcd, 0x77, 0x56, 0x49, 0xf0, 0x25, 0x9b, 0xf8, 0xc6,
	0xda, 0x4a, 0xd5, 0x4a, 0x07, 0x51, 0x65, 0x74, 0xa1, 0x87, 0x73, 0xea, 0x9b, 0x3f, 0xb7, 0x6e,
	0xc9, 0xe1, 0x6f, 0xd8, 0xe1, 0x7d, 0x53, 0x55, 0x19, 0xfd, 0x6f, 0x75, 0xf1, 0x0b, 0x8a, 0x8f,
	0xa3, 0xf1, 0x3d, 0xf2, 0x36, 0xfb, 0x9e, 0x0d, 0x37, 0x5f, 0x25, 0x5c, 0xce, 0x7a, 0xf3, 0xd1,
	0xdb, 0xe9, 0xe2, 0xaf, 0x8f, 0x77, 0x71, 0xdb, 0x25, 0x56, 0x7f, 0xc2, 0x9f, 0x3e, 0xfe, 0xf8,
	0x50, 0x62, 0x58, 0x37, 0xf9, 0xa2, 0x30, 0xf5, 0xf2, 0x1b, 0x06, 0x51, 0x61, 0x78, 0xba, 0xba,
	0x33, 0x4d, 0x58, 0x2f, 0xbb, 0x1b, 0xae, 0xda, 0x2b, 0xae, 0x84, 0xc5, 0xa5, 0x7d, 0x28, 0x97,
	0x49, 0xe7, 0x7d, 0xfa, 0x01, 0x78, 0xf7, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xd9, 0x19, 0x86,
	0x3a, 0x04, 0x00, 0x00,
}
