// Copyright (c) 2022 Vitality South, LLC <chris@vitalitysouth.com>
// All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: api_fabric.proto

package fabric

import (
	inventory "github.com/Vitality-South/magfabrics-api/pkg/inventory"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Fabric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: dynamo:"FabricSKU"
	Sku string `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty" dynamo:"FabricSKU"`
	// @gotags: dynamo:"FabricProductCode"
	ProductCode string `protobuf:"bytes,2,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty" dynamo:"FabricProductCode"`
	// @gotags: dynamo:"FabricPattern"
	Pattern string `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty" dynamo:"FabricPattern"`
	// @gotags: dynamo:"FabricPrimaryColor"
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty" dynamo:"FabricPrimaryColor"`
	// @gotags: dynamo:"FabricPatternColorCombo"
	PatternColorCombo string `protobuf:"bytes,5,opt,name=pattern_color_combo,json=patternColorCombo,proto3" json:"pattern_color_combo,omitempty" dynamo:"FabricPatternColorCombo"`
	// @gotags: dynamo:"FabricStatus"
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty" dynamo:"FabricStatus"`
	// @gotags: dynamo:"FabricIntroDate"
	IntroDate string `protobuf:"bytes,7,opt,name=intro_date,json=introDate,proto3" json:"intro_date,omitempty" dynamo:"FabricIntroDate"`
	// @gotags: dynamo:"FabricContents"
	Contents string `protobuf:"bytes,8,opt,name=contents,proto3" json:"contents,omitempty" dynamo:"FabricContents"`
	// @gotags: dynamo:"FabricWidth"
	Width string `protobuf:"bytes,9,opt,name=width,proto3" json:"width,omitempty" dynamo:"FabricWidth"`
	// @gotags: dynamo:"FabricDirection"
	Direction string `protobuf:"bytes,10,opt,name=direction,proto3" json:"direction,omitempty" dynamo:"FabricDirection"`
	// @gotags: dynamo:"FabricHRepeat"
	HRepeat string `protobuf:"bytes,11,opt,name=h_repeat,json=hRepeat,proto3" json:"h_repeat,omitempty" dynamo:"FabricHRepeat"`
	// @gotags: dynamo:"FabricVRepeat"
	VRepeat string `protobuf:"bytes,12,opt,name=v_repeat,json=vRepeat,proto3" json:"v_repeat,omitempty" dynamo:"FabricVRepeat"`
	// @gotags: dynamo:"FabricCleaningCode"
	CleaningCode string `protobuf:"bytes,13,opt,name=cleaning_code,json=cleaningCode,proto3" json:"cleaning_code,omitempty" dynamo:"FabricCleaningCode"`
	// @gotags: dynamo:"FabricDoubleRubs"
	DoubleRubs string `protobuf:"bytes,14,opt,name=double_rubs,json=doubleRubs,proto3" json:"double_rubs,omitempty" dynamo:"FabricDoubleRubs"`
	// @gotags: dynamo:"FabricMisc"
	Misc string `protobuf:"bytes,15,opt,name=misc,proto3" json:"misc,omitempty" dynamo:"FabricMisc"`
	// @gotags: dynamo:"FabricDisclaimer"
	Disclaimer string `protobuf:"bytes,16,opt,name=disclaimer,proto3" json:"disclaimer,omitempty" dynamo:"FabricDisclaimer"`
	// @gotags: dynamo:"FabricUses"
	Uses []string `protobuf:"bytes,17,rep,name=uses,proto3" json:"uses,omitempty" dynamo:"FabricUses"`
	// @gotags: dynamo:"FabricDesigns"
	Designs []string `protobuf:"bytes,18,rep,name=designs,proto3" json:"designs,omitempty" dynamo:"FabricDesigns"`
	// @gotags: dynamo:"FabricColors"
	Colors []string `protobuf:"bytes,19,rep,name=colors,proto3" json:"colors,omitempty" dynamo:"FabricColors"`
	// @gotags: dynamo:"FabricOrigin"
	Origin string `protobuf:"bytes,20,opt,name=origin,proto3" json:"origin,omitempty" dynamo:"FabricOrigin"`
	// @gotags: dynamo:"FabricPillingGrade"
	PillingGrade string `protobuf:"bytes,21,opt,name=pilling_grade,json=pillingGrade,proto3" json:"pilling_grade,omitempty" dynamo:"FabricPillingGrade"`
	// @gotags: dynamo:"FabricFireCode"
	FireCode string `protobuf:"bytes,22,opt,name=fire_code,json=fireCode,proto3" json:"fire_code,omitempty" dynamo:"FabricFireCode"`
	// @gotags: dynamo:"FabricCategories"
	Categories []string `protobuf:"bytes,23,rep,name=categories,proto3" json:"categories,omitempty" dynamo:"FabricCategories"`
	// @gotags: dynamo:"FabricBrand"
	Brand string `protobuf:"bytes,24,opt,name=brand,proto3" json:"brand,omitempty" dynamo:"FabricBrand"`
	// @gotags: dynamo:"FabricIsDropShipped"
	IsDropShipped bool `protobuf:"varint,25,opt,name=is_drop_shipped,json=isDropShipped,proto3" json:"is_drop_shipped,omitempty" dynamo:"FabricIsDropShipped"`
	// @gotags: dynamo:"FabricMainImage"
	Image string `protobuf:"bytes,26,opt,name=image,proto3" json:"image,omitempty" dynamo:"FabricMainImage"`
	// @gotags: dynamo:"FabricAPIDisplayPrice"
	DisplayPrice string `protobuf:"bytes,27,opt,name=display_price,json=displayPrice,proto3" json:"display_price,omitempty" dynamo:"FabricAPIDisplayPrice"`
	// @gotags: dynamo:"FabricAPIPrice"
	Price int32 `protobuf:"varint,28,opt,name=price,proto3" json:"price,omitempty" dynamo:"FabricAPIPrice"`
	// @gotags: dynamo:"FabricOtherImages"
	SupplementalImages []string `protobuf:"bytes,29,rep,name=supplemental_images,json=supplementalImages,proto3" json:"supplemental_images,omitempty" dynamo:"FabricOtherImages"`
	// @gotags: dynamo:"FabricFullWidthImages"
	FullWidthImages []string `protobuf:"bytes,30,rep,name=full_width_images,json=fullWidthImages,proto3" json:"full_width_images,omitempty" dynamo:"FabricFullWidthImages"`
	// @gotags: dynamo:"-"
	Inventory     *inventory.Inventory `protobuf:"bytes,31,opt,name=inventory,proto3" json:"inventory,omitempty" dynamo:"-"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fabric) Reset() {
	*x = Fabric{}
	mi := &file_api_fabric_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fabric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fabric) ProtoMessage() {}

func (x *Fabric) ProtoReflect() protoreflect.Message {
	mi := &file_api_fabric_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fabric.ProtoReflect.Descriptor instead.
func (*Fabric) Descriptor() ([]byte, []int) {
	return file_api_fabric_proto_rawDescGZIP(), []int{0}
}

func (x *Fabric) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *Fabric) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *Fabric) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *Fabric) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Fabric) GetPatternColorCombo() string {
	if x != nil {
		return x.PatternColorCombo
	}
	return ""
}

func (x *Fabric) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Fabric) GetIntroDate() string {
	if x != nil {
		return x.IntroDate
	}
	return ""
}

func (x *Fabric) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *Fabric) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *Fabric) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *Fabric) GetHRepeat() string {
	if x != nil {
		return x.HRepeat
	}
	return ""
}

func (x *Fabric) GetVRepeat() string {
	if x != nil {
		return x.VRepeat
	}
	return ""
}

func (x *Fabric) GetCleaningCode() string {
	if x != nil {
		return x.CleaningCode
	}
	return ""
}

func (x *Fabric) GetDoubleRubs() string {
	if x != nil {
		return x.DoubleRubs
	}
	return ""
}

func (x *Fabric) GetMisc() string {
	if x != nil {
		return x.Misc
	}
	return ""
}

func (x *Fabric) GetDisclaimer() string {
	if x != nil {
		return x.Disclaimer
	}
	return ""
}

func (x *Fabric) GetUses() []string {
	if x != nil {
		return x.Uses
	}
	return nil
}

func (x *Fabric) GetDesigns() []string {
	if x != nil {
		return x.Designs
	}
	return nil
}

func (x *Fabric) GetColors() []string {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *Fabric) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *Fabric) GetPillingGrade() string {
	if x != nil {
		return x.PillingGrade
	}
	return ""
}

func (x *Fabric) GetFireCode() string {
	if x != nil {
		return x.FireCode
	}
	return ""
}

func (x *Fabric) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Fabric) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Fabric) GetIsDropShipped() bool {
	if x != nil {
		return x.IsDropShipped
	}
	return false
}

func (x *Fabric) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Fabric) GetDisplayPrice() string {
	if x != nil {
		return x.DisplayPrice
	}
	return ""
}

func (x *Fabric) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Fabric) GetSupplementalImages() []string {
	if x != nil {
		return x.SupplementalImages
	}
	return nil
}

func (x *Fabric) GetFullWidthImages() []string {
	if x != nil {
		return x.FullWidthImages
	}
	return nil
}

func (x *Fabric) GetInventory() *inventory.Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

var File_api_fabric_proto protoreflect.FileDescriptor

const file_api_fabric_proto_rawDesc = "" +
	"\n" +
	"\x10api_fabric.proto\x12\x0fmagnoliafabrics\x1a\x13api_inventory.proto\"\xba\a\n" +
	"\x06Fabric\x12\x10\n" +
	"\x03sku\x18\x01 \x01(\tR\x03sku\x12!\n" +
	"\fproduct_code\x18\x02 \x01(\tR\vproductCode\x12\x18\n" +
	"\apattern\x18\x03 \x01(\tR\apattern\x12\x14\n" +
	"\x05color\x18\x04 \x01(\tR\x05color\x12.\n" +
	"\x13pattern_color_combo\x18\x05 \x01(\tR\x11patternColorCombo\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"intro_date\x18\a \x01(\tR\tintroDate\x12\x1a\n" +
	"\bcontents\x18\b \x01(\tR\bcontents\x12\x14\n" +
	"\x05width\x18\t \x01(\tR\x05width\x12\x1c\n" +
	"\tdirection\x18\n" +
	" \x01(\tR\tdirection\x12\x19\n" +
	"\bh_repeat\x18\v \x01(\tR\ahRepeat\x12\x19\n" +
	"\bv_repeat\x18\f \x01(\tR\avRepeat\x12#\n" +
	"\rcleaning_code\x18\r \x01(\tR\fcleaningCode\x12\x1f\n" +
	"\vdouble_rubs\x18\x0e \x01(\tR\n" +
	"doubleRubs\x12\x12\n" +
	"\x04misc\x18\x0f \x01(\tR\x04misc\x12\x1e\n" +
	"\n" +
	"disclaimer\x18\x10 \x01(\tR\n" +
	"disclaimer\x12\x12\n" +
	"\x04uses\x18\x11 \x03(\tR\x04uses\x12\x18\n" +
	"\adesigns\x18\x12 \x03(\tR\adesigns\x12\x16\n" +
	"\x06colors\x18\x13 \x03(\tR\x06colors\x12\x16\n" +
	"\x06origin\x18\x14 \x01(\tR\x06origin\x12#\n" +
	"\rpilling_grade\x18\x15 \x01(\tR\fpillingGrade\x12\x1b\n" +
	"\tfire_code\x18\x16 \x01(\tR\bfireCode\x12\x1e\n" +
	"\n" +
	"categories\x18\x17 \x03(\tR\n" +
	"categories\x12\x14\n" +
	"\x05brand\x18\x18 \x01(\tR\x05brand\x12&\n" +
	"\x0fis_drop_shipped\x18\x19 \x01(\bR\risDropShipped\x12\x14\n" +
	"\x05image\x18\x1a \x01(\tR\x05image\x12#\n" +
	"\rdisplay_price\x18\x1b \x01(\tR\fdisplayPrice\x12\x14\n" +
	"\x05price\x18\x1c \x01(\x05R\x05price\x12/\n" +
	"\x13supplemental_images\x18\x1d \x03(\tR\x12supplementalImages\x12*\n" +
	"\x11full_width_images\x18\x1e \x03(\tR\x0ffullWidthImages\x128\n" +
	"\tinventory\x18\x1f \x01(\v2\x1a.magnoliafabrics.InventoryR\tinventoryB5Z3github.com/Vitality-South/magfabrics-api/pkg/fabricb\x06proto3"

var (
	file_api_fabric_proto_rawDescOnce sync.Once
	file_api_fabric_proto_rawDescData []byte
)

func file_api_fabric_proto_rawDescGZIP() []byte {
	file_api_fabric_proto_rawDescOnce.Do(func() {
		file_api_fabric_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_fabric_proto_rawDesc), len(file_api_fabric_proto_rawDesc)))
	})
	return file_api_fabric_proto_rawDescData
}

var file_api_fabric_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_fabric_proto_goTypes = []any{
	(*Fabric)(nil),              // 0: magnoliafabrics.Fabric
	(*inventory.Inventory)(nil), // 1: magnoliafabrics.Inventory
}
var file_api_fabric_proto_depIdxs = []int32{
	1, // 0: magnoliafabrics.Fabric.inventory:type_name -> magnoliafabrics.Inventory
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_fabric_proto_init() }
func file_api_fabric_proto_init() {
	if File_api_fabric_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_fabric_proto_rawDesc), len(file_api_fabric_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_fabric_proto_goTypes,
		DependencyIndexes: file_api_fabric_proto_depIdxs,
		MessageInfos:      file_api_fabric_proto_msgTypes,
	}.Build()
	File_api_fabric_proto = out.File
	file_api_fabric_proto_goTypes = nil
	file_api_fabric_proto_depIdxs = nil
}
