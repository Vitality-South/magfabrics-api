// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"cyBk0":[function(require,module,exports) {
"use strict";
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "916932b22e4085ab";
module.bundle.HMR_BUNDLE_ID = "6635fc47c3f09954";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? "wss" : "ws";
    var ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/"); // Web extension context
    var extCtx = typeof chrome === "undefined" ? typeof browser === "undefined" ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    } // $FlowFixMe
    ws.onmessage = async function(event) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        acceptedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH); // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] ✨ Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          🚨 ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>📝 <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", link.getAttribute("href").split("?")[0] + "?" + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension bugfix for Chromium
                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {
                        if (typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                            extCtx.runtime.reload();
                            return;
                        }
                        asset.url = extCtx.runtime.getURL("/__parcel_hmr_proxy__?url=" + encodeURIComponent(asset.url + "?t=" + Date.now()));
                        return hmrDownload(asset);
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
             // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id]; // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
     // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) return true;
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"aGFbi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _createReturnObjJs = require("./createReturnObj.js");
var _createReturnObjJsDefault = parcelHelpers.interopDefault(_createReturnObjJs);
var _magnoliaServiceGrpcWebPbJs = require("./grpc/magnolia_service_grpc_web_pb.js");
"use strict";
///////////////////////////////////////
// The object that will be exposed to
// consumers of this library as the
// Magnolia API interface.
///////////////////////////////////////
const magnolia = {
    client: null,
    metadata: null
};
///////////////////////////////////////
// Creates the gRPC Web Client
///////////////////////////////////////
magnolia.initialize = (apiKey)=>{
    if (!apiKey || typeof apiKey !== "string") throw "Argument must be of type string. Please supply an API key for authentication.";
    magnolia.metadata = {
        "x-api-key": apiKey
    };
    try {
        magnolia.client = new (0, _magnoliaServiceGrpcWebPbJs.MagnoliaFabricsServicePromiseClient)("https://api.magnoliaco.com");
    } catch (err) {
        return (0, _createReturnObjJsDefault.default)(null, `Failed to initialize grpc client for Magnolia Fabrics API.\n ${err}`);
    }
    return (0, _createReturnObjJsDefault.default)(magnolia.client, null);
};
///////////////////////////////////////
// Returns the full catalog of fabrics
///////////////////////////////////////
magnolia.getAllFabrics = async ()=>{
    let fabrics;
    try {
        const request = new (0, _magnoliaServiceGrpcWebPbJs.GetAllFabricsRequest)();
        fabrics = await magnolia.client.getAllFabrics(request, magnolia.metadata);
    } catch (err) {
        return (0, _createReturnObjJsDefault.default)(null, `Failed to request full catalog\n ${err}`);
    }
    return (0, _createReturnObjJsDefault.default)(fabrics.toObject(), null);
};
///////////////////////////////////////
// Returns the full catalog of fabrics
// without inventory data included.
///////////////////////////////////////
magnolia.getAllFabricsWithoutInventory = async ()=>{
    let fabrics;
    try {
        const request = new (0, _magnoliaServiceGrpcWebPbJs.GetAllFabricsWithoutInventoryRequest)();
        fabrics = await magnolia.client.getAllFabricsWithoutInventory(request, magnolia.metadata);
        console.log(`Fabrics: `, fabrics);
    } catch (err) {
        return (0, _createReturnObjJsDefault.default)(null, `Failed to request full catalog without inventory\n ${err}`);
    }
    return (0, _createReturnObjJsDefault.default)(fabrics.toObject(), null);
};
///////////////////////////////////////
// Returns taxonomies for the full
// catalog of fabrics
///////////////////////////////////////
magnolia.getAllFabricTaxonomies = async ()=>{
    let taxonomies;
    try {
        const request = new (0, _magnoliaServiceGrpcWebPbJs.GetAllFabricTaxonomiesRequest)();
        taxonomies = await magnolia.client.getAllFabricTaxonomies(request, magnolia.metadata);
    } catch (err) {
        return (0, _createReturnObjJsDefault.default)(null, `Failed to request fabric taxonomies\n ${err}`);
    }
    return (0, _createReturnObjJsDefault.default)(taxonomies.toObject(), null);
};
///////////////////////////////////////
// Returns the inventory data for the
// full catalog of fabrics.
///////////////////////////////////////
magnolia.getAllInventory = async ()=>{
    let inventory;
    try {
        const request = new (0, _magnoliaServiceGrpcWebPbJs.GetAllInventoryRequest)();
        inventory = await magnolia.client.getAllInventory(request, magnolia.metadata);
    } catch (err) {
        return (0, _createReturnObjJsDefault.default)(null, `Failed to request all Inventory\n ${err}`);
    }
    return (0, _createReturnObjJsDefault.default)(inventory.toObject(), null);
};
///////////////////////////////////////
// Returns the cleaning codes used
// by Magnolia Fabrics.
///////////////////////////////////////
magnolia.getCleaningCodes = async ()=>{
    let cleaningCodes;
    try {
        const request = new (0, _magnoliaServiceGrpcWebPbJs.GetCleaningCodesRequest)();
        cleaningCodes = await magnolia.client.getCleaningCodes(request, magnolia.metadata);
        console.log(`Cleaning Codes: ${cleaningCodes}`);
    } catch (err) {
        return (0, _createReturnObjJsDefault.default)(null, `Failed to request cleaning codes\n ${err}`);
    }
    return (0, _createReturnObjJsDefault.default)(cleaningCodes.toObject(), null);
};
///////////////////////////////////////
// Returns a fabric if one exists with
// the specified id.
///////////////////////////////////////
magnolia.getFabricById = async (id)=>{
    let fabric;
    try {
        const request = new (0, _magnoliaServiceGrpcWebPbJs.GetFabricByIDRequest)();
        request.setFabricId(id);
        fabric = await magnolia.client.getFabricByID(request, magnolia.metadata);
    } catch (err) {
        return (0, _createReturnObjJsDefault.default)(null, `Failed to request fabric by id\n ${err}`);
    }
    return (0, _createReturnObjJsDefault.default)(fabric.toObject(), null);
};
///////////////////////////////////////
// Returns fabrics if any exists with
// the specified name.
///////////////////////////////////////
magnolia.getFabricByName = async (name)=>{
    let fabric;
    try {
        const request = new (0, _magnoliaServiceGrpcWebPbJs.GetFabricByNameRequest)();
        request.setFabricName(name);
        fabric = await magnolia.client.getFabricByName(request, magnolia.metadata);
    } catch (err) {
        return (0, _createReturnObjJsDefault.default)(null, `Failed to request fabric by name\n ${err}`);
    }
    return (0, _createReturnObjJsDefault.default)(fabric.toObject(), null);
};
window.magnolia = magnolia;

},{"./createReturnObj.js":"8fS4W","./grpc/magnolia_service_grpc_web_pb.js":"luUnW","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8fS4W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
const createReturnObj = (value = null, error = null)=>{
    return {
        value,
        error
    };
};
exports.default = createReturnObj;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5oERU":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"luUnW":[function(require,module,exports) {
/**
 * @fileoverview gRPC-Web generated client stub for magnoliafabrics
 * @enhanceable
 * @public
 */ // GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */ // @ts-nocheck
const grpc = {};
grpc.web = require("grpc-web");
var inventory_pb = require("./inventory_pb.js");
var fabric_pb = require("./fabric_pb.js");
var taxonomy_pb = require("./taxonomy_pb.js");
var cleaning_code_pb = require("./cleaning_code_pb.js");
const proto = {};
proto.magnoliafabrics = require("./magnolia_service_pb.js");
/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */ proto.magnoliafabrics.MagnoliaFabricsServiceClient = function(hostname, credentials, options) {
    if (!options) options = {};
    options.format = "text";
    /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */ this.client_ = new grpc.web.GrpcWebClientBase(options);
    /**
   * @private @const {string} The hostname
   */ this.hostname_ = hostname;
};
/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */ proto.magnoliafabrics.MagnoliaFabricsServicePromiseClient = function(hostname, credentials, options) {
    if (!options) options = {};
    options.format = "text";
    /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */ this.client_ = new grpc.web.GrpcWebClientBase(options);
    /**
   * @private @const {string} The hostname
   */ this.hostname_ = hostname;
};
/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.magnoliafabrics.GetAllFabricsRequest,
 *   !proto.magnoliafabrics.GetAllFabricsResponse>}
 */ const methodDescriptor_MagnoliaFabricsService_GetAllFabrics = new grpc.web.MethodDescriptor("/magnoliafabrics.MagnoliaFabricsService/GetAllFabrics", grpc.web.MethodType.UNARY, proto.magnoliafabrics.GetAllFabricsRequest, proto.magnoliafabrics.GetAllFabricsResponse, /**
   * @param {!proto.magnoliafabrics.GetAllFabricsRequest} request
   * @return {!Uint8Array}
   */ function(request) {
    return request.serializeBinary();
}, proto.magnoliafabrics.GetAllFabricsResponse.deserializeBinary);
/**
 * @param {!proto.magnoliafabrics.GetAllFabricsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.magnoliafabrics.GetAllFabricsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.magnoliafabrics.GetAllFabricsResponse>|undefined}
 *     The XHR Node Readable Stream
 */ proto.magnoliafabrics.MagnoliaFabricsServiceClient.prototype.getAllFabrics = function(request, metadata, callback) {
    return this.client_.rpcCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetAllFabrics", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetAllFabrics, callback);
};
/**
 * @param {!proto.magnoliafabrics.GetAllFabricsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.magnoliafabrics.GetAllFabricsResponse>}
 *     Promise that resolves to the response
 */ proto.magnoliafabrics.MagnoliaFabricsServicePromiseClient.prototype.getAllFabrics = function(request, metadata) {
    return this.client_.unaryCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetAllFabrics", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetAllFabrics);
};
/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest,
 *   !proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse>}
 */ const methodDescriptor_MagnoliaFabricsService_GetAllFabricsWithoutInventory = new grpc.web.MethodDescriptor("/magnoliafabrics.MagnoliaFabricsService/GetAllFabricsWithoutInventory", grpc.web.MethodType.UNARY, proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest, proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse, /**
   * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest} request
   * @return {!Uint8Array}
   */ function(request) {
    return request.serializeBinary();
}, proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.deserializeBinary);
/**
 * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */ proto.magnoliafabrics.MagnoliaFabricsServiceClient.prototype.getAllFabricsWithoutInventory = function(request, metadata, callback) {
    return this.client_.rpcCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetAllFabricsWithoutInventory", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetAllFabricsWithoutInventory, callback);
};
/**
 * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse>}
 *     Promise that resolves to the response
 */ proto.magnoliafabrics.MagnoliaFabricsServicePromiseClient.prototype.getAllFabricsWithoutInventory = function(request, metadata) {
    return this.client_.unaryCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetAllFabricsWithoutInventory", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetAllFabricsWithoutInventory);
};
/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.magnoliafabrics.GetAllInventoryRequest,
 *   !proto.magnoliafabrics.GetAllInventoryResponse>}
 */ const methodDescriptor_MagnoliaFabricsService_GetAllInventory = new grpc.web.MethodDescriptor("/magnoliafabrics.MagnoliaFabricsService/GetAllInventory", grpc.web.MethodType.UNARY, proto.magnoliafabrics.GetAllInventoryRequest, proto.magnoliafabrics.GetAllInventoryResponse, /**
   * @param {!proto.magnoliafabrics.GetAllInventoryRequest} request
   * @return {!Uint8Array}
   */ function(request) {
    return request.serializeBinary();
}, proto.magnoliafabrics.GetAllInventoryResponse.deserializeBinary);
/**
 * @param {!proto.magnoliafabrics.GetAllInventoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.magnoliafabrics.GetAllInventoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.magnoliafabrics.GetAllInventoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */ proto.magnoliafabrics.MagnoliaFabricsServiceClient.prototype.getAllInventory = function(request, metadata, callback) {
    return this.client_.rpcCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetAllInventory", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetAllInventory, callback);
};
/**
 * @param {!proto.magnoliafabrics.GetAllInventoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.magnoliafabrics.GetAllInventoryResponse>}
 *     Promise that resolves to the response
 */ proto.magnoliafabrics.MagnoliaFabricsServicePromiseClient.prototype.getAllInventory = function(request, metadata) {
    return this.client_.unaryCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetAllInventory", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetAllInventory);
};
/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.magnoliafabrics.GetFabricByIDRequest,
 *   !proto.magnoliafabrics.GetFabricByIDResponse>}
 */ const methodDescriptor_MagnoliaFabricsService_GetFabricByID = new grpc.web.MethodDescriptor("/magnoliafabrics.MagnoliaFabricsService/GetFabricByID", grpc.web.MethodType.UNARY, proto.magnoliafabrics.GetFabricByIDRequest, proto.magnoliafabrics.GetFabricByIDResponse, /**
   * @param {!proto.magnoliafabrics.GetFabricByIDRequest} request
   * @return {!Uint8Array}
   */ function(request) {
    return request.serializeBinary();
}, proto.magnoliafabrics.GetFabricByIDResponse.deserializeBinary);
/**
 * @param {!proto.magnoliafabrics.GetFabricByIDRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.magnoliafabrics.GetFabricByIDResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.magnoliafabrics.GetFabricByIDResponse>|undefined}
 *     The XHR Node Readable Stream
 */ proto.magnoliafabrics.MagnoliaFabricsServiceClient.prototype.getFabricByID = function(request, metadata, callback) {
    return this.client_.rpcCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetFabricByID", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetFabricByID, callback);
};
/**
 * @param {!proto.magnoliafabrics.GetFabricByIDRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.magnoliafabrics.GetFabricByIDResponse>}
 *     Promise that resolves to the response
 */ proto.magnoliafabrics.MagnoliaFabricsServicePromiseClient.prototype.getFabricByID = function(request, metadata) {
    return this.client_.unaryCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetFabricByID", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetFabricByID);
};
/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.magnoliafabrics.GetFabricByNameRequest,
 *   !proto.magnoliafabrics.GetFabricByNameResponse>}
 */ const methodDescriptor_MagnoliaFabricsService_GetFabricByName = new grpc.web.MethodDescriptor("/magnoliafabrics.MagnoliaFabricsService/GetFabricByName", grpc.web.MethodType.UNARY, proto.magnoliafabrics.GetFabricByNameRequest, proto.magnoliafabrics.GetFabricByNameResponse, /**
   * @param {!proto.magnoliafabrics.GetFabricByNameRequest} request
   * @return {!Uint8Array}
   */ function(request) {
    return request.serializeBinary();
}, proto.magnoliafabrics.GetFabricByNameResponse.deserializeBinary);
/**
 * @param {!proto.magnoliafabrics.GetFabricByNameRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.magnoliafabrics.GetFabricByNameResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.magnoliafabrics.GetFabricByNameResponse>|undefined}
 *     The XHR Node Readable Stream
 */ proto.magnoliafabrics.MagnoliaFabricsServiceClient.prototype.getFabricByName = function(request, metadata, callback) {
    return this.client_.rpcCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetFabricByName", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetFabricByName, callback);
};
/**
 * @param {!proto.magnoliafabrics.GetFabricByNameRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.magnoliafabrics.GetFabricByNameResponse>}
 *     Promise that resolves to the response
 */ proto.magnoliafabrics.MagnoliaFabricsServicePromiseClient.prototype.getFabricByName = function(request, metadata) {
    return this.client_.unaryCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetFabricByName", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetFabricByName);
};
/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.magnoliafabrics.GetAllFabricTaxonomyRequest,
 *   !proto.magnoliafabrics.GetAllFabricTaxonomyResponse>}
 */ const methodDescriptor_MagnoliaFabricsService_GetAllFabricTaxonomy = new grpc.web.MethodDescriptor("/magnoliafabrics.MagnoliaFabricsService/GetAllFabricTaxonomy", grpc.web.MethodType.UNARY, proto.magnoliafabrics.GetAllFabricTaxonomyRequest, proto.magnoliafabrics.GetAllFabricTaxonomyResponse, /**
   * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyRequest} request
   * @return {!Uint8Array}
   */ function(request) {
    return request.serializeBinary();
}, proto.magnoliafabrics.GetAllFabricTaxonomyResponse.deserializeBinary);
/**
 * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.magnoliafabrics.GetAllFabricTaxonomyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.magnoliafabrics.GetAllFabricTaxonomyResponse>|undefined}
 *     The XHR Node Readable Stream
 */ proto.magnoliafabrics.MagnoliaFabricsServiceClient.prototype.getAllFabricTaxonomy = function(request, metadata, callback) {
    return this.client_.rpcCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetAllFabricTaxonomy", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetAllFabricTaxonomy, callback);
};
/**
 * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.magnoliafabrics.GetAllFabricTaxonomyResponse>}
 *     Promise that resolves to the response
 */ proto.magnoliafabrics.MagnoliaFabricsServicePromiseClient.prototype.getAllFabricTaxonomy = function(request, metadata) {
    return this.client_.unaryCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetAllFabricTaxonomy", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetAllFabricTaxonomy);
};
/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.magnoliafabrics.GetCleaningCodesRequest,
 *   !proto.magnoliafabrics.GetCleaningCodesResponse>}
 */ const methodDescriptor_MagnoliaFabricsService_GetCleaningCodes = new grpc.web.MethodDescriptor("/magnoliafabrics.MagnoliaFabricsService/GetCleaningCodes", grpc.web.MethodType.UNARY, proto.magnoliafabrics.GetCleaningCodesRequest, proto.magnoliafabrics.GetCleaningCodesResponse, /**
   * @param {!proto.magnoliafabrics.GetCleaningCodesRequest} request
   * @return {!Uint8Array}
   */ function(request) {
    return request.serializeBinary();
}, proto.magnoliafabrics.GetCleaningCodesResponse.deserializeBinary);
/**
 * @param {!proto.magnoliafabrics.GetCleaningCodesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.magnoliafabrics.GetCleaningCodesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.magnoliafabrics.GetCleaningCodesResponse>|undefined}
 *     The XHR Node Readable Stream
 */ proto.magnoliafabrics.MagnoliaFabricsServiceClient.prototype.getCleaningCodes = function(request, metadata, callback) {
    return this.client_.rpcCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetCleaningCodes", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetCleaningCodes, callback);
};
/**
 * @param {!proto.magnoliafabrics.GetCleaningCodesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.magnoliafabrics.GetCleaningCodesResponse>}
 *     Promise that resolves to the response
 */ proto.magnoliafabrics.MagnoliaFabricsServicePromiseClient.prototype.getCleaningCodes = function(request, metadata) {
    return this.client_.unaryCall(this.hostname_ + "/magnoliafabrics.MagnoliaFabricsService/GetCleaningCodes", request, metadata || {}, methodDescriptor_MagnoliaFabricsService_GetCleaningCodes);
};
module.exports = proto.magnoliafabrics;

},{"grpc-web":"bGZWC","./inventory_pb.js":"e5iO3","./fabric_pb.js":"f6clr","./taxonomy_pb.js":"eZ5Hx","./cleaning_code_pb.js":"exhZu","./magnolia_service_pb.js":"dkY5H"}],"bGZWC":[function(require,module,exports) {
var global = arguments[3];
/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/ var n;
function aa(a) {
    var b = 0;
    return function() {
        return b < a.length ? {
            done: !1,
            value: a[b++]
        } : {
            done: !0
        };
    };
}
var ba = "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, c) {
    a != Array.prototype && a != Object.prototype && (a[b] = c.value);
};
function ca(a) {
    a = [
        "object" == typeof window && window,
        "object" == typeof self && self,
        "object" == typeof global && global,
        a
    ];
    for(var b = 0; b < a.length; ++b){
        var c = a[b];
        if (c && c.Math == Math) return c;
    }
    throw Error("Cannot find global object");
}
var r = ca(this);
function t() {
    t = function() {};
    r.Symbol || (r.Symbol = da);
}
function ea(a, b) {
    this.a = a;
    ba(this, "description", {
        configurable: !0,
        writable: !0,
        value: b
    });
}
ea.prototype.toString = function() {
    return this.a;
};
var da = function() {
    function a(c) {
        if (this instanceof a) throw new TypeError("Symbol is not a constructor");
        return new ea("jscomp_symbol_" + (c || "") + "_" + b++, c);
    }
    var b = 0;
    return a;
}();
function u() {
    t();
    var a = r.Symbol.iterator;
    a || (a = r.Symbol.iterator = r.Symbol("Symbol.iterator"));
    "function" != typeof Array.prototype[a] && ba(Array.prototype, a, {
        configurable: !0,
        writable: !0,
        value: function() {
            return fa(aa(this));
        }
    });
    u = function() {};
}
function fa(a) {
    u();
    a = {
        next: a
    };
    a[r.Symbol.iterator] = function() {
        return this;
    };
    return a;
}
function ha(a) {
    var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];
    return b ? b.call(a) : {
        next: aa(a)
    };
}
var ia = "function" == typeof Object.create ? Object.create : function(a) {
    function b() {}
    b.prototype = a;
    return new b;
}, ja;
if ("function" == typeof Object.setPrototypeOf) ja = Object.setPrototypeOf;
else {
    var ka;
    a: {
        var la = {
            V: !0
        }, ma = {};
        try {
            ma.__proto__ = la;
            ka = ma.V;
            break a;
        } catch (a) {}
        ka = !1;
    }
    ja = ka ? function(a, b) {
        a.__proto__ = b;
        if (a.__proto__ !== b) throw new TypeError(a + " is not extensible");
        return a;
    } : null;
}
var na = ja;
function oa(a, b) {
    a.prototype = ia(b.prototype);
    a.prototype.constructor = a;
    if (na) na(a, b);
    else for(var c in b)if ("prototype" != c) {
        if (Object.defineProperties) {
            var d = Object.getOwnPropertyDescriptor(b, c);
            d && Object.defineProperty(a, c, d);
        } else a[c] = b[c];
    }
    a.O = b.prototype;
}
function pa(a, b) {
    u();
    a instanceof String && (a += "");
    var c = 0, d = {
        next: function() {
            if (c < a.length) {
                var f = c++;
                return {
                    value: b(f, a[f]),
                    done: !1
                };
            }
            d.next = function() {
                return {
                    done: !0,
                    value: void 0
                };
            };
            return d.next();
        }
    };
    d[Symbol.iterator] = function() {
        return d;
    };
    return d;
}
function v(a, b) {
    if (b) {
        var c = r;
        a = a.split(".");
        for(var d = 0; d < a.length - 1; d++){
            var f = a[d];
            f in c || (c[f] = {});
            c = c[f];
        }
        a = a[a.length - 1];
        d = c[a];
        b = b(d);
        b != d && null != b && ba(c, a, {
            configurable: !0,
            writable: !0,
            value: b
        });
    }
}
v("Array.prototype.keys", function(a) {
    return a ? a : function() {
        return pa(this, function(b) {
            return b;
        });
    };
});
v("Array.prototype.find", function(a) {
    return a ? a : function(b, c) {
        a: {
            var d = this;
            d instanceof String && (d = String(d));
            for(var f = d.length, g = 0; g < f; g++){
                var e = d[g];
                if (b.call(c, e, g, d)) {
                    b = e;
                    break a;
                }
            }
            b = void 0;
        }
        return b;
    };
});
v("Object.is", function(a) {
    return a ? a : function(b, c) {
        return b === c ? 0 !== b || 1 / b === 1 / c : b !== b && c !== c;
    };
});
v("Array.prototype.includes", function(a) {
    return a ? a : function(b, c) {
        var d = this;
        d instanceof String && (d = String(d));
        var f = d.length;
        c = c || 0;
        for(0 > c && (c = Math.max(c + f, 0)); c < f; c++){
            var g = d[c];
            if (g === b || Object.is(g, b)) return !0;
        }
        return !1;
    };
});
v("Promise", function(a) {
    function b(e) {
        this.b = 0;
        this.c = void 0;
        this.a = [];
        var h = this.f();
        try {
            e(h.resolve, h.reject);
        } catch (k) {
            h.reject(k);
        }
    }
    function c() {
        this.a = null;
    }
    function d(e) {
        return e instanceof b ? e : new b(function(h) {
            h(e);
        });
    }
    if (a) return a;
    c.prototype.b = function(e) {
        if (null == this.a) {
            this.a = [];
            var h = this;
            this.c(function() {
                h.g();
            });
        }
        this.a.push(e);
    };
    var f = r.setTimeout;
    c.prototype.c = function(e) {
        f(e, 0);
    };
    c.prototype.g = function() {
        for(; this.a && this.a.length;){
            var e = this.a;
            this.a = [];
            for(var h = 0; h < e.length; ++h){
                var k = e[h];
                e[h] = null;
                try {
                    k();
                } catch (l) {
                    this.f(l);
                }
            }
        }
        this.a = null;
    };
    c.prototype.f = function(e) {
        this.c(function() {
            throw e;
        });
    };
    b.prototype.f = function() {
        function e(l) {
            return function(m) {
                k || (k = !0, l.call(h, m));
            };
        }
        var h = this, k = !1;
        return {
            resolve: e(this.s),
            reject: e(this.g)
        };
    };
    b.prototype.s = function(e) {
        if (e === this) this.g(new TypeError("A Promise cannot resolve to itself"));
        else if (e instanceof b) this.v(e);
        else {
            a: switch(typeof e){
                case "object":
                    var h = null != e;
                    break a;
                case "function":
                    h = !0;
                    break a;
                default:
                    h = !1;
            }
            h ? this.m(e) : this.h(e);
        }
    };
    b.prototype.m = function(e) {
        var h = void 0;
        try {
            h = e.then;
        } catch (k) {
            this.g(k);
            return;
        }
        "function" == typeof h ? this.w(h, e) : this.h(e);
    };
    b.prototype.g = function(e) {
        this.i(2, e);
    };
    b.prototype.h = function(e) {
        this.i(1, e);
    };
    b.prototype.i = function(e, h) {
        if (0 != this.b) throw Error("Cannot settle(" + e + ", " + h + "): Promise already settled in state" + this.b);
        this.b = e;
        this.c = h;
        this.l();
    };
    b.prototype.l = function() {
        if (null != this.a) {
            for(var e = 0; e < this.a.length; ++e)g.b(this.a[e]);
            this.a = null;
        }
    };
    var g = new c;
    b.prototype.v = function(e) {
        var h = this.f();
        e.F(h.resolve, h.reject);
    };
    b.prototype.w = function(e, h) {
        var k = this.f();
        try {
            e.call(h, k.resolve, k.reject);
        } catch (l) {
            k.reject(l);
        }
    };
    b.prototype.then = function(e, h) {
        function k(q, w) {
            return "function" == typeof q ? function(y) {
                try {
                    l(q(y));
                } catch (M) {
                    m(M);
                }
            } : w;
        }
        var l, m, p = new b(function(q, w) {
            l = q;
            m = w;
        });
        this.F(k(e, l), k(h, m));
        return p;
    };
    b.prototype.catch = function(e) {
        return this.then(void 0, e);
    };
    b.prototype.F = function(e, h) {
        function k() {
            switch(l.b){
                case 1:
                    e(l.c);
                    break;
                case 2:
                    h(l.c);
                    break;
                default:
                    throw Error("Unexpected state: " + l.b);
            }
        }
        var l = this;
        null == this.a ? g.b(k) : this.a.push(k);
    };
    b.resolve = d;
    b.reject = function(e) {
        return new b(function(h, k) {
            k(e);
        });
    };
    b.race = function(e) {
        return new b(function(h, k) {
            for(var l = ha(e), m = l.next(); !m.done; m = l.next())d(m.value).F(h, k);
        });
    };
    b.all = function(e) {
        var h = ha(e), k = h.next();
        return k.done ? d([]) : new b(function(l, m) {
            function p(y) {
                return function(M) {
                    q[y] = M;
                    w--;
                    0 == w && l(q);
                };
            }
            var q = [], w = 0;
            do q.push(void 0), w++, d(k.value).F(p(q.length - 1), m), k = h.next();
            while (!k.done);
        });
    };
    return b;
});
var qa = qa || {}, x = this || self;
function z(a, b) {
    a = a.split(".");
    b = b || x;
    for(var c = 0; c < a.length; c++)if (b = b[a[c]], null == b) return null;
    return b;
}
function ra() {}
function sa(a) {
    var b = typeof a;
    return "object" == b && null != a || "function" == b;
}
var ta = "closure_uid_" + (1E9 * Math.random() >>> 0), ua = 0;
function va(a, b, c) {
    return a.call.apply(a.bind, arguments);
}
function wa(a, b, c) {
    if (!a) throw Error();
    if (2 < arguments.length) {
        var d = Array.prototype.slice.call(arguments, 2);
        return function() {
            var f = Array.prototype.slice.call(arguments);
            Array.prototype.unshift.apply(f, d);
            return a.apply(b, f);
        };
    }
    return function() {
        return a.apply(b, arguments);
    };
}
function A(a, b, c) {
    Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? A = va : A = wa;
    return A.apply(null, arguments);
}
function B(a, b) {
    function c() {}
    c.prototype = b.prototype;
    a.O = b.prototype;
    a.prototype = new c;
    a.prototype.constructor = a;
}
function xa(a) {
    this.a = a || {};
}
xa.prototype.get = function(a) {
    return this.a[a];
};
xa.prototype.G = function() {
    return Object.keys(this.a);
};
function C(a, b, c, d) {
    this.f = a;
    this.c = b;
    this.b = c;
    this.a = d;
}
C.prototype.getRequestMessage = function() {
    return this.f;
};
C.prototype.getMethodDescriptor = function() {
    return this.c;
};
C.prototype.getMetadata = function() {
    return this.b;
};
C.prototype.getCallOptions = function() {
    return this.a;
};
function D(a, b, c, d) {
    c = void 0 === c ? {} : c;
    this.c = a;
    this.a = c;
    this.b = b;
    this.f = void 0 === d ? null : d;
}
D.prototype.getResponseMessage = function() {
    return this.c;
};
D.prototype.getMetadata = function() {
    return this.a;
};
D.prototype.getMethodDescriptor = function() {
    return this.b;
};
D.prototype.getStatus = function() {
    return this.f;
};
function ya(a, b, c) {
    c = void 0 === c ? {} : c;
    var d = void 0 === d ? new xa : d;
    return new C(b, a, c, d);
}
function za(a) {
    switch(a){
        case 200:
            return 0;
        case 400:
            return 3;
        case 401:
            return 16;
        case 403:
            return 7;
        case 404:
            return 5;
        case 409:
            return 10;
        case 412:
            return 9;
        case 429:
            return 8;
        case 499:
            return 1;
        case 500:
            return 2;
        case 501:
            return 12;
        case 503:
            return 14;
        case 504:
            return 4;
        default:
            return 2;
    }
}
function E(a, b, c) {
    c = void 0 === c ? {} : c;
    b = Error.call(this, b);
    this.message = b.message;
    "stack" in b && (this.stack = b.stack);
    this.code = a;
    this.metadata = c;
}
oa(E, Error);
E.prototype.name = "RpcError";
function Aa(a) {
    this.a = a;
}
Aa.prototype.on = function(a, b) {
    return "data" == a || "error" == a ? this : this.a.on(a, b);
};
Aa.prototype.removeListener = function(a, b) {
    return this.a.removeListener(a, b);
};
Aa.prototype.cancel = function() {
    this.a.cancel();
};
function Ba(a) {
    switch(a){
        case 0:
            return "No Error";
        case 1:
            return "Access denied to content document";
        case 2:
            return "File not found";
        case 3:
            return "Firefox silently errored";
        case 4:
            return "Application custom error";
        case 5:
            return "An exception occurred";
        case 6:
            return "Http response at 400 or 500 level";
        case 7:
            return "Request was aborted";
        case 8:
            return "Request timed out";
        case 9:
            return "The resource is not available offline";
        default:
            return "Unrecognized error code";
    }
}
function F(a) {
    if (Error.captureStackTrace) Error.captureStackTrace(this, F);
    else {
        var b = Error().stack;
        b && (this.stack = b);
    }
    a && (this.message = String(a));
}
B(F, Error);
F.prototype.name = "CustomError";
function Ca(a, b) {
    a = a.split("%s");
    for(var c = "", d = a.length - 1, f = 0; f < d; f++)c += a[f] + (f < b.length ? b[f] : "%s");
    F.call(this, c + a[d]);
}
B(Ca, F);
Ca.prototype.name = "AssertionError";
function Da(a, b) {
    throw new Ca("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1));
}
function Ea() {
    this.l = null;
    this.i = [];
    this.m = 0;
    this.b = Fa;
    this.f = this.a = this.h = 0;
    this.c = null;
    this.g = 0;
}
function Ga(a, b) {
    function c(l) {
        l == Ha ? e.h = l : l == G ? e.h = l : Ia(e, h, k, "invalid frame byte");
        e.b = Ja;
        e.a = 0;
        e.f = 0;
    }
    function d(l) {
        e.f++;
        e.a = (e.a << 8) + l;
        4 == e.f && (e.b = Ka, e.g = 0, "undefined" !== typeof Uint8Array ? e.c = new Uint8Array(e.a) : e.c = Array(e.a), 0 == e.a && g());
    }
    function f(l) {
        e.c[e.g++] = l;
        e.g == e.a && g();
    }
    function g() {
        var l = {};
        l[e.h] = e.c;
        e.i.push(l);
        e.b = Fa;
    }
    var e = a, h, k = 0;
    for(b instanceof Uint8Array || b instanceof Array ? h = b : h = new Uint8Array(b); k < h.length;){
        switch(e.b){
            case La:
                Ia(e, h, k, "stream already broken");
                break;
            case Fa:
                c(h[k]);
                break;
            case Ja:
                d(h[k]);
                break;
            case Ka:
                f(h[k]);
                break;
            default:
                throw Error("unexpected parser state: " + e.b);
        }
        e.m++;
        k++;
    }
    a = e.i;
    e.i = [];
    return 0 < a.length ? a : null;
}
var Fa = 0, Ja = 1, Ka = 2, La = 3, Ha = 0, G = 128;
function Ia(a, b, c, d) {
    a.b = La;
    a.l = "The stream is broken @" + a.m + "/" + c + ". Error: " + d + ". With input:\n" + b;
    throw Error(a.l);
}
var Ma = Array.prototype.indexOf ? function(a, b) {
    return Array.prototype.indexOf.call(a, b, void 0);
} : function(a, b) {
    if ("string" === typeof a) return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);
    for(var c = 0; c < a.length; c++)if (c in a && a[c] === b) return c;
    return -1;
};
var Na = String.prototype.trim ? function(a) {
    return a.trim();
} : function(a) {
    return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
};
function H(a, b) {
    return -1 != a.indexOf(b);
}
function Oa(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
}
var I;
a: {
    var Pa = x.navigator;
    if (Pa) {
        var Qa = Pa.userAgent;
        if (Qa) {
            I = Qa;
            break a;
        }
    }
    I = "";
}
function Ra(a, b) {
    for(var c in a)b.call(void 0, a[c], c, a);
}
function Sa(a, b) {
    var c = {}, d;
    for(d in a)c[d] = b.call(void 0, a[d], d, a);
    return c;
}
var Ta = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function Ua(a, b) {
    for(var c, d, f = 1; f < arguments.length; f++){
        d = arguments[f];
        for(c in d)a[c] = d[c];
        for(var g = 0; g < Ta.length; g++)c = Ta[g], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
}
function Va(a) {
    var b = 1;
    a = a.split(":");
    for(var c = []; 0 < b && a.length;)c.push(a.shift()), b--;
    a.length && c.push(a.join(":"));
    return c;
}
function Wa(a) {
    Wa[" "](a);
    return a;
}
Wa[" "] = ra;
function Xa(a) {
    var b = Ya;
    return Object.prototype.hasOwnProperty.call(b, 9) ? b[9] : b[9] = a(9);
}
var Za = H(I, "Opera"), $a = H(I, "Trident") || H(I, "MSIE"), ab = H(I, "Edge"), bb = H(I, "Gecko") && !(H(I.toLowerCase(), "webkit") && !H(I, "Edge")) && !(H(I, "Trident") || H(I, "MSIE")) && !H(I, "Edge"), cb = H(I.toLowerCase(), "webkit") && !H(I, "Edge"), db;
a: {
    var eb = "", fb = function() {
        var a = I;
        if (bb) return /rv:([^\);]+)(\)|;)/.exec(a);
        if (ab) return /Edge\/([\d\.]+)/.exec(a);
        if ($a) return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
        if (cb) return /WebKit\/(\S+)/.exec(a);
        if (Za) return /(?:Version)[ \/]?(\S+)/.exec(a);
    }();
    fb && (eb = fb ? fb[1] : "");
    if ($a) {
        var gb, hb = x.document;
        gb = hb ? hb.documentMode : void 0;
        if (null != gb && gb > parseFloat(eb)) {
            db = String(gb);
            break a;
        }
    }
    db = eb;
}
var Ya = {};
function ib() {
    return Xa(function() {
        for(var a = 0, b = Na(String(db)).split("."), c = Na("9").split("."), d = Math.max(b.length, c.length), f = 0; 0 == a && f < d; f++){
            var g = b[f] || "", e = c[f] || "";
            do {
                g = /(\d*)(\D*)(.*)/.exec(g) || [
                    "",
                    "",
                    "",
                    ""
                ];
                e = /(\d*)(\D*)(.*)/.exec(e) || [
                    "",
                    "",
                    "",
                    ""
                ];
                if (0 == g[0].length && 0 == e[0].length) break;
                a = Oa(0 == g[1].length ? 0 : parseInt(g[1], 10), 0 == e[1].length ? 0 : parseInt(e[1], 10)) || Oa(0 == g[2].length, 0 == e[2].length) || Oa(g[2], e[2]);
                g = g[3];
                e = e[3];
            }while (0 == a);
        }
        return 0 <= a;
    });
}
function jb() {
    0 != kb && (Object.prototype.hasOwnProperty.call(this, ta) && this[ta] || (this[ta] = ++ua));
    this.K = this.K;
}
var kb = 0;
jb.prototype.K = !1;
var lb = Object.freeze || function(a) {
    return a;
};
function J(a, b) {
    this.type = a;
    this.a = this.target = b;
    this.defaultPrevented = !1;
}
J.prototype.b = function() {
    this.defaultPrevented = !0;
};
var mb = function() {
    if (!x.addEventListener || !Object.defineProperty) return !1;
    var a = !1, b = Object.defineProperty({}, "passive", {
        get: function() {
            a = !0;
        }
    });
    try {
        x.addEventListener("test", ra, b), x.removeEventListener("test", ra, b);
    } catch (c) {}
    return a;
}();
function K(a, b) {
    J.call(this, a ? a.type : "");
    this.relatedTarget = this.a = this.target = null;
    this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;
    this.key = "";
    this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
    this.pointerId = 0;
    this.pointerType = "";
    this.c = null;
    if (a) {
        var c = this.type = a.type, d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;
        this.target = a.target || a.srcElement;
        this.a = b;
        if (b = a.relatedTarget) {
            if (bb) {
                a: {
                    try {
                        Wa(b.nodeName);
                        var f = !0;
                        break a;
                    } catch (g) {}
                    f = !1;
                }
                f || (b = null);
            }
        } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);
        this.relatedTarget = b;
        d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);
        this.button = a.button;
        this.key = a.key || "";
        this.ctrlKey = a.ctrlKey;
        this.altKey = a.altKey;
        this.shiftKey = a.shiftKey;
        this.metaKey = a.metaKey;
        this.pointerId = a.pointerId || 0;
        this.pointerType = "string" === typeof a.pointerType ? a.pointerType : nb[a.pointerType] || "";
        this.c = a;
        a.defaultPrevented && K.O.b.call(this);
    }
}
B(K, J);
var nb = lb({
    2: "touch",
    3: "pen",
    4: "mouse"
});
K.prototype.b = function() {
    K.O.b.call(this);
    var a = this.c;
    a.preventDefault ? a.preventDefault() : a.returnValue = !1;
};
var L = "closure_listenable_" + (1E6 * Math.random() | 0);
var ob = 0;
function pb(a, b, c, d, f) {
    this.listener = a;
    this.proxy = null;
    this.src = b;
    this.type = c;
    this.capture = !!d;
    this.H = f;
    this.key = ++ob;
    this.A = this.D = !1;
}
function qb(a) {
    a.A = !0;
    a.listener = null;
    a.proxy = null;
    a.src = null;
    a.H = null;
}
function rb(a) {
    this.src = a;
    this.a = {};
    this.b = 0;
}
rb.prototype.add = function(a, b, c, d, f) {
    var g = a.toString();
    a = this.a[g];
    a || (a = this.a[g] = [], this.b++);
    var e = sb(a, b, d, f);
    -1 < e ? (b = a[e], c || (b.D = !1)) : (b = new pb(b, this.src, g, !!d, f), b.D = c, a.push(b));
    return b;
};
rb.prototype.remove = function(a, b, c, d) {
    a = a.toString();
    if (!(a in this.a)) return !1;
    var f = this.a[a];
    b = sb(f, b, c, d);
    return -1 < b ? (qb(f[b]), Array.prototype.splice.call(f, b, 1), 0 == f.length && (delete this.a[a], this.b--), !0) : !1;
};
function tb(a, b) {
    var c = b.type;
    if (c in a.a) {
        var d = a.a[c], f = Ma(d, b), g;
        (g = 0 <= f) && Array.prototype.splice.call(d, f, 1);
        g && (qb(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
    }
}
function sb(a, b, c, d) {
    for(var f = 0; f < a.length; ++f){
        var g = a[f];
        if (!g.A && g.listener == b && g.capture == !!c && g.H == d) return f;
    }
    return -1;
}
var ub = "closure_lm_" + (1E6 * Math.random() | 0), vb = {}, wb = 0;
function xb(a, b, c, d, f) {
    if (d && d.once) yb(a, b, c, d, f);
    else if (Array.isArray(b)) for(var g = 0; g < b.length; g++)xb(a, b[g], c, d, f);
    else c = zb(c), a && a[L] ? a.f.add(String(b), c, !1, sa(d) ? !!d.capture : !!d, f) : Ab(a, b, c, !1, d, f);
}
function Ab(a, b, c, d, f, g) {
    if (!b) throw Error("Invalid event type");
    var e = sa(f) ? !!f.capture : !!f, h = Bb(a);
    h || (a[ub] = h = new rb(a));
    c = h.add(b, c, d, e, g);
    if (!c.proxy) {
        d = Cb();
        c.proxy = d;
        d.src = a;
        d.listener = c;
        if (a.addEventListener) mb || (f = e), void 0 === f && (f = !1), a.addEventListener(b.toString(), d, f);
        else if (a.attachEvent) a.attachEvent(Db(b.toString()), d);
        else if (a.addListener && a.removeListener) a.addListener(d);
        else throw Error("addEventListener and attachEvent are unavailable.");
        wb++;
    }
}
function Cb() {
    function a(c) {
        return b.call(a.src, a.listener, c);
    }
    var b = Eb;
    return a;
}
function yb(a, b, c, d, f) {
    if (Array.isArray(b)) for(var g = 0; g < b.length; g++)yb(a, b[g], c, d, f);
    else c = zb(c), a && a[L] ? a.f.add(String(b), c, !0, sa(d) ? !!d.capture : !!d, f) : Ab(a, b, c, !0, d, f);
}
function Fb(a, b, c, d, f) {
    if (Array.isArray(b)) for(var g = 0; g < b.length; g++)Fb(a, b[g], c, d, f);
    else (d = sa(d) ? !!d.capture : !!d, c = zb(c), a && a[L]) ? a.f.remove(String(b), c, d, f) : a && (a = Bb(a)) && (b = a.a[b.toString()], a = -1, b && (a = sb(b, c, d, f)), (c = -1 < a ? b[a] : null) && Gb(c));
}
function Gb(a) {
    if ("number" !== typeof a && a && !a.A) {
        var b = a.src;
        if (b && b[L]) tb(b.f, a);
        else {
            var c = a.type, d = a.proxy;
            b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(Db(c), d) : b.addListener && b.removeListener && b.removeListener(d);
            wb--;
            (c = Bb(b)) ? (tb(c, a), 0 == c.b && (c.src = null, b[ub] = null)) : qb(a);
        }
    }
}
function Db(a) {
    return a in vb ? vb[a] : vb[a] = "on" + a;
}
function Eb(a, b) {
    if (a.A) a = !0;
    else {
        b = new K(b, this);
        var c = a.listener, d = a.H || a.src;
        a.D && Gb(a);
        a = c.call(d, b);
    }
    return a;
}
function Bb(a) {
    a = a[ub];
    return a instanceof rb ? a : null;
}
var Hb = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);
function zb(a) {
    if ("function" === typeof a) return a;
    a[Hb] || (a[Hb] = function(b) {
        return a.handleEvent(b);
    });
    return a[Hb];
}
function N() {
    jb.call(this);
    this.f = new rb(this);
    this.U = this;
}
B(N, jb);
N.prototype[L] = !0;
N.prototype.addEventListener = function(a, b, c, d) {
    xb(this, a, b, c, d);
};
N.prototype.removeEventListener = function(a, b, c, d) {
    Fb(this, a, b, c, d);
};
function O(a, b) {
    a = a.U;
    var c = b.type || b;
    if ("string" === typeof b) b = new J(b, a);
    else if (b instanceof J) b.target = b.target || a;
    else {
        var d = b;
        b = new J(c, a);
        Ua(b, d);
    }
    a = b.a = a;
    Ib(a, c, !0, b);
    Ib(a, c, !1, b);
}
function Ib(a, b, c, d) {
    if (b = a.f.a[String(b)]) {
        b = b.concat();
        for(var f = !0, g = 0; g < b.length; ++g){
            var e = b[g];
            if (e && !e.A && e.capture == c) {
                var h = e.listener, k = e.H || e.src;
                e.D && tb(a.f, e);
                f = !1 !== h.call(k, d) && f;
            }
        }
    }
}
var Jb = x;
function Kb(a, b, c) {
    if ("function" === typeof a) c && (a = A(a, c));
    else if (a && "function" == typeof a.handleEvent) a = A(a.handleEvent, a);
    else throw Error("Invalid listener argument");
    return 2147483647 < Number(b) ? -1 : Jb.setTimeout(a, b || 0);
}
function Lb(a, b) {
    this.name = a;
    this.value = b;
}
Lb.prototype.toString = function() {
    return this.name;
};
var Mb = new Lb("OFF", Infinity), Nb = new Lb("SEVERE", 1E3), Ob = new Lb("CONFIG", 700), Pb = new Lb("FINE", 500);
function Qb() {
    this.clear();
}
var Rb;
Qb.prototype.clear = function() {};
function Tb(a, b, c) {
    this.reset(a || Mb, b, c, void 0, void 0);
}
Tb.prototype.reset = function() {};
function Ub(a, b) {
    this.a = null;
    this.f = [];
    this.b = (void 0 === b ? null : b) || null;
    this.c = [];
    this.g = {
        a: function() {
            return a;
        }
    };
}
function Vb(a) {
    if (a.a) return a.a;
    if (a.b) return Vb(a.b);
    Da("Root logger has no level set.");
    return Mb;
}
function Wb(a, b) {
    for(; a;)a.f.forEach(function(c) {
        c(b);
    }), a = a.b;
}
function Xb() {
    this.entries = {};
    var a = new Ub("");
    a.a = Ob;
    this.entries[""] = a;
}
var Yb;
function Zb(a, b, c) {
    var d = a.entries[b];
    if (d) return void 0 !== c && (d.a = c), d;
    d = Zb(a, b.substr(0, b.lastIndexOf(".")));
    var f = new Ub(b, d);
    a.entries[b] = f;
    d.c.push(f);
    void 0 !== c && (f.a = c);
    return f;
}
function $b() {
    Yb || (Yb = new Xb);
    return Yb;
}
function ac(a, b, c) {
    var d;
    if (d = a) {
        if (d = a && b) {
            d = b.value;
            var f = a ? Vb(Zb($b(), a.a())) : Mb;
            d = d >= f.value;
        }
    }
    d && (b = b || Mb, d = Zb($b(), a.a()), "function" === typeof c && (c = c()), Rb || (Rb = new Qb), a = new Tb(b, c, a.a()), Wb(d, a));
}
function P(a, b) {
    a && ac(a, Pb, b);
}
function bc() {}
bc.prototype.a = null;
function cc(a) {
    var b;
    (b = a.a) || (b = {}, dc(a) && (b[0] = !0, b[1] = !0), b = a.a = b);
    return b;
}
var ec;
function fc() {}
B(fc, bc);
function gc(a) {
    return (a = dc(a)) ? new ActiveXObject(a) : new XMLHttpRequest;
}
function dc(a) {
    if (!a.b && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
        for(var b = [
            "MSXML2.XMLHTTP.6.0",
            "MSXML2.XMLHTTP.3.0",
            "MSXML2.XMLHTTP",
            "Microsoft.XMLHTTP"
        ], c = 0; c < b.length; c++){
            var d = b[c];
            try {
                return new ActiveXObject(d), a.b = d;
            } catch (f) {}
        }
        throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
    }
    return a.b;
}
ec = new fc;
t();
u();
function hc(a, b) {
    this.b = a[x.Symbol.iterator]();
    this.c = b;
    this.f = 0;
}
hc.prototype[Symbol.iterator] = function() {
    return this;
};
hc.prototype.next = function() {
    var a = this.b.next();
    return {
        value: a.done ? void 0 : this.c.call(void 0, a.value, this.f++),
        done: a.done
    };
};
function ic(a, b) {
    return new hc(a, b);
}
t();
u();
t();
u();
var jc = "StopIteration" in x ? x.StopIteration : {
    message: "StopIteration",
    stack: ""
};
function Q() {}
Q.prototype.next = function() {
    return Q.prototype.a.call(this);
};
Q.prototype.a = function() {
    throw jc;
};
Q.prototype.u = function() {
    return this;
};
function kc(a) {
    if (a instanceof R || a instanceof S || a instanceof T) return a;
    if ("function" == typeof a.next) return new R(function() {
        return lc(a);
    });
    t();
    u();
    if ("function" == typeof a[Symbol.iterator]) return t(), u(), new R(function() {
        return a[Symbol.iterator]();
    });
    if ("function" == typeof a.u) return new R(function() {
        return lc(a.u());
    });
    throw Error("Not an iterator or iterable.");
}
function lc(a) {
    if (!(a instanceof Q)) return a;
    var b = !1;
    return {
        next: function() {
            for(var c; !b;)try {
                c = a.a();
                break;
            } catch (d) {
                if (d !== jc) throw d;
                b = !0;
            }
            return {
                value: c,
                done: b
            };
        }
    };
}
t();
u();
function R(a) {
    this.b = a;
}
R.prototype.u = function() {
    return new S(this.b());
};
R.prototype[Symbol.iterator] = function() {
    return new T(this.b());
};
R.prototype.c = function() {
    return new T(this.b());
};
t();
u();
function S(a) {
    this.b = a;
}
oa(S, Q);
S.prototype.a = function() {
    var a = this.b.next();
    if (a.done) throw jc;
    return a.value;
};
S.prototype.next = function() {
    return S.prototype.a.call(this);
};
S.prototype[Symbol.iterator] = function() {
    return new T(this.b);
};
S.prototype.c = function() {
    return new T(this.b);
};
function T(a) {
    R.call(this, function() {
        return a;
    });
    this.f = a;
}
oa(T, R);
T.prototype.next = function() {
    return this.f.next();
};
function mc(a, b) {
    this.o = {};
    this.j = [];
    this.B = this.size = 0;
    var c = arguments.length;
    if (1 < c) {
        if (c % 2) throw Error("Uneven number of arguments");
        for(var d = 0; d < c; d += 2)this.set(arguments[d], arguments[d + 1]);
    } else a && this.addAll(a);
}
n = mc.prototype;
n.G = function() {
    nc(this);
    return this.j.concat();
};
n.has = function(a) {
    return U(this.o, a);
};
n.clear = function() {
    this.o = {};
    this.B = this.size = this.j.length = 0;
};
n.remove = function(a) {
    return this.delete(a);
};
n.delete = function(a) {
    return U(this.o, a) ? (delete this.o[a], --this.size, this.B++, this.j.length > 2 * this.size && nc(this), !0) : !1;
};
function nc(a) {
    if (a.size != a.j.length) {
        for(var b = 0, c = 0; b < a.j.length;){
            var d = a.j[b];
            U(a.o, d) && (a.j[c++] = d);
            b++;
        }
        a.j.length = c;
    }
    if (a.size != a.j.length) {
        var f = {};
        for(c = b = 0; b < a.j.length;)d = a.j[b], U(f, d) || (a.j[c++] = d, f[d] = 1), b++;
        a.j.length = c;
    }
}
n.get = function(a, b) {
    return U(this.o, a) ? this.o[a] : b;
};
n.set = function(a, b) {
    U(this.o, a) || (this.size += 1, this.j.push(a), this.B++);
    this.o[a] = b;
};
n.addAll = function(a) {
    if (a instanceof mc) for(var b = a.G(), c = 0; c < b.length; c++)this.set(b[c], a.get(b[c]));
    else for(b in a)this.set(b, a[b]);
};
n.forEach = function(a, b) {
    for(var c = this.G(), d = 0; d < c.length; d++){
        var f = c[d], g = this.get(f);
        a.call(b, g, f, this);
    }
};
n.clone = function() {
    return new mc(this);
};
n.keys = function() {
    return kc(this.u(!0)).c();
};
n.values = function() {
    return kc(this.u(!1)).c();
};
n.entries = function() {
    var a = this;
    return ic(this.keys(), function(b) {
        return [
            b,
            a.get(b)
        ];
    });
};
n.u = function(a) {
    nc(this);
    var b = 0, c = this.B, d = this, f = new Q;
    f.a = function() {
        if (c != d.B) throw Error("The map has changed since the iterator was created");
        if (b >= d.j.length) throw jc;
        var g = d.j[b++];
        return a ? g : d.o[g];
    };
    f.next = f.a.bind(f);
    return f;
};
function U(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
}
var oc = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
function pc(a) {
    N.call(this);
    this.headers = new mc;
    this.C = a || null;
    this.c = !1;
    this.J = this.a = null;
    this.P = this.v = "";
    this.g = 0;
    this.l = "";
    this.i = this.N = this.s = this.L = !1;
    this.h = 0;
    this.w = null;
    this.m = qc;
    this.I = this.M = !1;
}
B(pc, N);
var qc = "";
pc.prototype.b = Zb($b(), "goog.net.XhrIo", void 0).g;
var rc = /^https?$/i, sc = [
    "POST",
    "PUT"
];
function tc(a, b, c) {
    if (a.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + a.v + "; newUri=" + b);
    a.v = b;
    a.l = "";
    a.g = 0;
    a.P = "POST";
    a.L = !1;
    a.c = !0;
    a.a = a.C ? gc(a.C) : gc(ec);
    a.J = a.C ? cc(a.C) : cc(ec);
    a.a.onreadystatechange = A(a.R, a);
    try {
        P(a.b, V(a, "Opening Xhr")), a.N = !0, a.a.open("POST", String(b), !0), a.N = !1;
    } catch (g) {
        P(a.b, V(a, "Error opening Xhr: " + g.message));
        uc(a, g);
        return;
    }
    b = c || "";
    c = a.headers.clone();
    var d = c.G().find(function(g) {
        return "content-type" == g.toLowerCase();
    }), f = x.FormData && b instanceof x.FormData;
    !(0 <= Ma(sc, "POST")) || d || f || c.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
    c.forEach(function(g, e) {
        this.a.setRequestHeader(e, g);
    }, a);
    a.m && (a.a.responseType = a.m);
    "withCredentials" in a.a && a.a.withCredentials !== a.M && (a.a.withCredentials = a.M);
    try {
        vc(a), 0 < a.h && (a.I = wc(a.a), P(a.b, V(a, "Will abort after " + a.h + "ms if incomplete, xhr2 " + a.I)), a.I ? (a.a.timeout = a.h, a.a.ontimeout = A(a.T, a)) : a.w = Kb(a.T, a.h, a)), P(a.b, V(a, "Sending request")), a.s = !0, a.a.send(b), a.s = !1;
    } catch (g1) {
        P(a.b, V(a, "Send error: " + g1.message)), uc(a, g1);
    }
}
function wc(a) {
    return $a && ib() && "number" === typeof a.timeout && void 0 !== a.ontimeout;
}
n = pc.prototype;
n.T = function() {
    "undefined" != typeof qa && this.a && (this.l = "Timed out after " + this.h + "ms, aborting", this.g = 8, P(this.b, V(this, this.l)), O(this, "timeout"), this.abort(8));
};
function uc(a, b) {
    a.c = !1;
    a.a && (a.i = !0, a.a.abort(), a.i = !1);
    a.l = b;
    a.g = 5;
    xc(a);
    yc(a);
}
function xc(a) {
    a.L || (a.L = !0, O(a, "complete"), O(a, "error"));
}
n.abort = function(a) {
    this.a && this.c && (P(this.b, V(this, "Aborting")), this.c = !1, this.i = !0, this.a.abort(), this.i = !1, this.g = a || 7, O(this, "complete"), O(this, "abort"), yc(this));
};
n.R = function() {
    this.K || (this.N || this.s || this.i ? zc(this) : this.W());
};
n.W = function() {
    zc(this);
};
function zc(a) {
    if (a.c && "undefined" != typeof qa) {
        if (a.J[1] && 4 == W(a) && 2 == a.getStatus()) P(a.b, V(a, "Local request error detected and ignored"));
        else if (a.s && 4 == W(a)) Kb(a.R, 0, a);
        else if (O(a, "readystatechange"), 4 == W(a)) {
            P(a.b, V(a, "Request complete"));
            a.c = !1;
            try {
                var b = a.getStatus();
                a: switch(b){
                    case 200:
                    case 201:
                    case 202:
                    case 204:
                    case 206:
                    case 304:
                    case 1223:
                        var c = !0;
                        break a;
                    default:
                        c = !1;
                }
                var d;
                if (!(d = c)) {
                    var f;
                    if (f = 0 === b) {
                        var g = String(a.v).match(oc)[1] || null;
                        if (!g && x.self && x.self.location) {
                            var e = x.self.location.protocol;
                            g = e.substr(0, e.length - 1);
                        }
                        f = !rc.test(g ? g.toLowerCase() : "");
                    }
                    d = f;
                }
                if (d) O(a, "complete"), O(a, "success");
                else {
                    a.g = 6;
                    try {
                        var h = 2 < W(a) ? a.a.statusText : "";
                    } catch (k) {
                        P(a.b, "Can not get status: " + k.message), h = "";
                    }
                    a.l = h + " [" + a.getStatus() + "]";
                    xc(a);
                }
            } finally{
                yc(a);
            }
        }
    }
}
function yc(a) {
    if (a.a) {
        vc(a);
        var b = a.a, c = a.J[0] ? ra : null;
        a.a = null;
        a.J = null;
        O(a, "ready");
        try {
            b.onreadystatechange = c;
        } catch (d) {
            (a = a.b) && ac(a, Nb, "Problem encountered resetting onreadystatechange: " + d.message);
        }
    }
}
function vc(a) {
    a.a && a.I && (a.a.ontimeout = null);
    a.w && (Jb.clearTimeout(a.w), a.w = null);
}
function W(a) {
    return a.a ? a.a.readyState : 0;
}
n.getStatus = function() {
    try {
        return 2 < W(this) ? this.a.status : -1;
    } catch (a) {
        return -1;
    }
};
function Ac(a) {
    try {
        if (!a.a) return null;
        if ("response" in a.a) return a.a.response;
        switch(a.m){
            case qc:
            case "text":
                return a.a.responseText;
            case "arraybuffer":
                if ("mozResponseArrayBuffer" in a.a) return a.a.mozResponseArrayBuffer;
        }
        var b = a.b;
        b && ac(b, Nb, "Response type " + a.m + " is not supported on this browser");
        return null;
    } catch (c) {
        return P(a.b, "Can not get response: " + c.message), null;
    }
}
function Bc(a, b) {
    if (a.a && 4 == W(a)) return a = a.a.getResponseHeader(b), null === a ? void 0 : a;
}
function Cc(a) {
    var b = {};
    a = (a.a && 4 == W(a) ? a.a.getAllResponseHeaders() || "" : "").split("\r\n");
    for(var c = 0; c < a.length; c++)if (!/^[\s\xa0]*$/.test(a[c])) {
        var d = Va(a[c]), f = d[0];
        d = d[1];
        if ("string" === typeof d) {
            d = d.trim();
            var g = b[f] || [];
            b[f] = g;
            g.push(d);
        }
    }
    return Sa(b, function(e) {
        return e.join(", ");
    });
}
function V(a, b) {
    return b + " [" + a.P + " " + a.v + " " + a.getStatus() + "]";
}
var Dc = {}, Ec = null;
function Fc(a) {
    var b = a.length, c = 3 * b / 4;
    c % 3 ? c = Math.floor(c) : H("=.", a[b - 1]) && (c = H("=.", a[b - 2]) ? c - 2 : c - 1);
    var d = new Uint8Array(c), f = 0;
    Gc(a, function(g) {
        d[f++] = g;
    });
    return d.subarray(0, f);
}
function Gc(a, b) {
    function c(k) {
        for(; d < a.length;){
            var l = a.charAt(d++), m = Ec[l];
            if (null != m) return m;
            if (!/^[\s\xa0]*$/.test(l)) throw Error("Unknown base64 encoding at char: " + l);
        }
        return k;
    }
    Hc();
    for(var d = 0;;){
        var f = c(-1), g = c(0), e = c(64), h = c(64);
        if (64 === h && -1 === f) break;
        b(f << 2 | g >> 4);
        64 != e && (b(g << 4 & 240 | e >> 2), 64 != h && b(e << 6 & 192 | h));
    }
}
function Hc() {
    if (!Ec) {
        Ec = {};
        for(var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), b = [
            "+/=",
            "+/",
            "-_=",
            "-_.",
            "-_"
        ], c = 0; 5 > c; c++){
            var d = a.concat(b[c].split(""));
            Dc[c] = d;
            for(var f = 0; f < d.length; f++){
                var g = d[f];
                void 0 === Ec[g] && (Ec[g] = f);
            }
        }
    }
}
var Ic = [
    "content-type",
    "grpc-status",
    "grpc-message"
];
function X(a) {
    this.a = a.Z;
    this.m = null;
    this.b = [];
    this.h = [];
    this.g = [];
    this.f = [];
    this.c = [];
    this.l = !1;
    this.i = 0;
    this.s = new Ea;
    var b = this;
    xb(this.a, "readystatechange", function() {
        var c = b.a;
        if (c = c.a ? c.a.getResponseHeader("Content-Type") : null) {
            c = c.toLowerCase();
            if (0 == c.lastIndexOf("application/grpc-web-text", 0)) {
                c = b.a;
                try {
                    var d = c.a ? c.a.responseText : "";
                } catch (k) {
                    P(c.b, "Can not get responseText: " + k.message), d = "";
                }
                c = d || "";
                d = c.length - c.length % 4;
                c = c.substr(b.i, d - b.i);
                if (0 == c.length) return;
                b.i = d;
                c = Fc(c);
            } else if (0 == c.lastIndexOf("application/grpc", 0)) c = new Uint8Array(Ac(b.a));
            else {
                Y(b, new E(2, "Unknown Content-type received."));
                return;
            }
            d = null;
            try {
                d = Ga(b.s, c);
            } catch (k1) {
                Y(b, new E(2, "Error in parsing response body"));
            }
            if (d) for(c = 0; c < d.length; c++){
                if (Ha in d[c]) {
                    var f = d[c][Ha];
                    if (f) {
                        var g = void 0;
                        try {
                            g = b.m(f);
                        } catch (k2) {
                            Y(b, new E(13, "Error when deserializing response data; error: " + k2 + (", response: " + g)));
                        }
                        if (g) for(f = g, g = 0; g < b.b.length; g++)b.b[g](f);
                    }
                }
                if (G in d[c] && 0 < d[c][G].length) {
                    f = "";
                    for(g = 0; g < d[c][G].length; g++)f += String.fromCharCode(d[c][G][g]);
                    f = f.trim().split("\r\n");
                    g = {};
                    for(var e = 0; e < f.length; e++){
                        var h = f[e].indexOf(":");
                        g[f[e].substring(0, h).trim()] = f[e].substring(h + 1).trim();
                    }
                    f = g;
                    g = 0;
                    e = "";
                    "grpc-status" in f && (g = Number(f["grpc-status"]), delete f["grpc-status"]);
                    "grpc-message" in f && (e = f["grpc-message"], delete f["grpc-message"]);
                    Y(b, new E(g, e, f));
                }
            }
        }
    });
    xb(this.a, "complete", function() {
        var c = b.a.g, d = 2, f = "", g = {}, e = Cc(b.a);
        Object.keys(e).forEach(function(k) {
            Ic.includes(k) || (g[k] = e[k]);
        });
        Jc(b, g);
        var h = -1;
        if (0 != c) {
            switch(c){
                case 7:
                    d = 10;
                    break;
                case 8:
                    d = 4;
                    break;
                case 6:
                    h = b.a.getStatus();
                    d = za(h);
                    break;
                default:
                    d = 14;
            }
            10 == d && b.l || (f = Ba(c), -1 != h && (f += ", http status code: " + h), Y(b, new E(d, f)));
        } else h = !1, "grpc-status" in e && (d = Number(Bc(b.a, "grpc-status")), "grpc-message" in e && (f = Bc(b.a, "grpc-message")), 0 != d && (Y(b, new E(d, f || "", e)), h = !0)), h || Kc(b);
    });
}
X.prototype.on = function(a, b) {
    "data" == a ? this.b.push(b) : "status" == a ? this.h.push(b) : "metadata" == a ? this.g.push(b) : "end" == a ? this.c.push(b) : "error" == a && this.f.push(b);
    return this;
};
function Lc(a, b) {
    b = a.indexOf(b);
    -1 < b && a.splice(b, 1);
}
X.prototype.removeListener = function(a, b) {
    "data" == a ? Lc(this.b, b) : "status" == a ? Lc(this.h, b) : "metadata" == a ? Lc(this.g, b) : "end" == a ? Lc(this.c, b) : "error" == a && Lc(this.f, b);
    return this;
};
X.prototype.cancel = function() {
    this.l = !0;
    this.a.abort();
};
function Y(a, b) {
    if (0 != b.code) for(var c = new E(b.code, decodeURIComponent(b.message || ""), b.metadata), d = 0; d < a.f.length; d++)a.f[d](c);
    b = {
        code: b.code,
        details: decodeURIComponent(b.message || ""),
        metadata: b.metadata
    };
    for(c = 0; c < a.h.length; c++)a.h[c](b);
}
function Jc(a, b) {
    for(var c = 0; c < a.g.length; c++)a.g[c](b);
}
function Kc(a) {
    for(var b = 0; b < a.c.length; b++)a.c[b]();
}
X.prototype.cancel = X.prototype.cancel;
X.prototype.removeListener = X.prototype.removeListener;
X.prototype.on = X.prototype.on;
function Mc(a) {
    var b = "";
    Ra(a, function(c, d) {
        b += d;
        b += ":";
        b += c;
        b += "\r\n";
    });
    return b;
}
function Z(a, b) {
    a = void 0 === a ? {} : a;
    this.a = a.format || z("format", a) || "text";
    this.g = a.aa || z("suppressCorsPreflight", a) || !1;
    this.f = a.withCredentials || z("withCredentials", a) || !1;
    this.b = a.$ || z("streamInterceptors", a) || [];
    this.h = a.ba || z("unaryInterceptors", a) || [];
    this.c = b || null;
}
Z.prototype.X = function(a, b, c, d, f) {
    var g = this, e = a.substr(0, a.length - d.name.length);
    a = Nc(function(h) {
        return Oc(g, h, e);
    }, this.b).call(this, ya(d, b, c));
    Pc(a, f, !1);
    return new Aa(a);
};
Z.prototype.S = function(a, b, c, d) {
    var f = this, g = a.substr(0, a.length - d.name.length);
    return Nc(function(e) {
        return new Promise(function(h, k) {
            var l = Oc(f, e, g), m, p, q;
            Pc(l, function(w, y, M, Sb) {
                w ? k(w) : y ? q = y : M ? p = M : Sb ? m = Sb : (w = e.getMethodDescriptor(), y = m, y = void 0 === y ? {} : y, h(new D(q, w, y, void 0 === p ? null : p)));
            }, !0);
        });
    }, this.h).call(this, ya(d, b, c)).then(function(e) {
        return e.getResponseMessage();
    });
};
Z.prototype.unaryCall = function(a, b, c, d) {
    return this.S(a, b, c, d);
};
Z.prototype.Y = function(a, b, c, d) {
    var f = this, g = a.substr(0, a.length - d.name.length);
    return Nc(function(e) {
        return Oc(f, e, g);
    }, this.b).call(this, ya(d, b, c));
};
function Oc(a, b, c) {
    var d = b.getMethodDescriptor(), f = c + d.name;
    c = a.c ? a.c : new pc;
    c.M = a.f;
    var g = new X({
        Z: c
    });
    g.m = d.b;
    var e = b.getMetadata();
    for(h in e)c.headers.set(h, e[h]);
    "text" == a.a ? (c.headers.set("Content-Type", "application/grpc-web-text"), c.headers.set("Accept", "application/grpc-web-text")) : c.headers.set("Content-Type", "application/grpc-web+proto");
    c.headers.set("X-User-Agent", "grpc-web-javascript/0.1");
    c.headers.set("X-Grpc-Web", "1");
    if (c.headers.has("deadline")) {
        var h = Number(c.headers.get("deadline"));
        h = Math.ceil(h - (new Date).getTime());
        c.headers.delete("deadline");
        Infinity === h && (h = 0);
        0 < h && (c.headers.set("grpc-timeout", h + "m"), c.h = Math.max(0, Math.max(1E3, Math.ceil(1.1 * h))));
    }
    if (a.g) {
        e = c.headers;
        h = {};
        for(var k = ha(e.keys()), l = k.next(); !l.done; l = k.next())l = l.value, h[l] = e.get(l);
        c.headers.clear();
        b: {
            for(m in h){
                var m = !1;
                break b;
            }
            m = !0;
        }
        if (!m) {
            if (h = Mc(h), "string" === typeof f) {
                if (m = encodeURIComponent("$httpHeaders"), h = null != h ? "=" + encodeURIComponent(String(h)) : "", m += h) h = f.indexOf("#"), 0 > h && (h = f.length), e = f.indexOf("?"), 0 > e || e > h ? (e = h, k = "") : k = f.substring(e + 1, h), f = [
                    f.substr(0, e),
                    k,
                    f.substr(h)
                ], h = f[1], f[1] = m ? h ? h + "&" + m : m : h, f = f[0] + (f[1] ? "?" + f[1] : "") + f[2];
            } else f.a("$httpHeaders", h);
        }
    }
    b = (0, d.a)(b.getRequestMessage());
    d = b.length;
    m = [
        0,
        0,
        0,
        0
    ];
    h = new Uint8Array(5 + d);
    for(e = 3; 0 <= e; e--)m[e] = d % 256, d >>>= 8;
    h.set(new Uint8Array(m), 1);
    h.set(b, 5);
    b = h;
    if ("text" == a.a) {
        a = b;
        var p;
        void 0 === p && (p = 0);
        Hc();
        p = Dc[p];
        b = Array(Math.floor(a.length / 3));
        d = p[64] || "";
        for(m = h = 0; h < a.length - 2; h += 3){
            l = a[h];
            var q = a[h + 1];
            k = a[h + 2];
            e = p[l >> 2];
            l = p[(l & 3) << 4 | q >> 4];
            q = p[(q & 15) << 2 | k >> 6];
            k = p[k & 63];
            b[m++] = e + l + q + k;
        }
        e = 0;
        k = d;
        switch(a.length - h){
            case 2:
                e = a[h + 1], k = p[(e & 15) << 2] || d;
            case 1:
                a = a[h], b[m] = p[a >> 2] + p[(a & 3) << 4 | e >> 4] + k + d;
        }
        b = b.join("");
    } else "binary" == a.a && (c.m = "arraybuffer");
    tc(c, f, b);
    return g;
}
function Pc(a, b, c) {
    var d = !1, f = null, g = !1;
    a.on("data", function(e) {
        d = !0;
        f = e;
    });
    a.on("error", function(e) {
        0 == e.code || g || (g = !0, b(e, null));
    });
    a.on("status", function(e) {
        0 == e.code || g ? c && b(null, null, e) : (g = !0, b({
            code: e.code,
            message: e.details,
            metadata: e.metadata
        }, null));
    });
    if (c) a.on("metadata", function(e) {
        b(null, null, null, e);
    });
    a.on("end", function() {
        g || (d ? b(null, f) : b({
            code: 2,
            message: "Incomplete response"
        }));
        c && b(null, null);
    });
}
function Nc(a, b) {
    var c = a;
    b.forEach(function(d) {
        var f = c;
        c = function(g) {
            return d.intercept(g, f);
        };
    });
    return c;
}
Z.prototype.serverStreaming = Z.prototype.Y;
Z.prototype.unaryCall = Z.prototype.unaryCall;
Z.prototype.thenableCall = Z.prototype.S;
Z.prototype.rpcCall = Z.prototype.X;
module.exports.CallOptions = xa;
module.exports.MethodDescriptor = function(a, b, c, d, f, g) {
    this.name = a;
    this.a = f;
    this.b = g;
};
module.exports.GrpcWebClientBase = Z;
module.exports.RpcError = E;
module.exports.StatusCode = {
    OK: 0,
    CANCELLED: 1,
    UNKNOWN: 2,
    INVALID_ARGUMENT: 3,
    DEADLINE_EXCEEDED: 4,
    NOT_FOUND: 5,
    ALREADY_EXISTS: 6,
    PERMISSION_DENIED: 7,
    UNAUTHENTICATED: 16,
    RESOURCE_EXHAUSTED: 8,
    FAILED_PRECONDITION: 9,
    ABORTED: 10,
    OUT_OF_RANGE: 11,
    UNIMPLEMENTED: 12,
    INTERNAL: 13,
    UNAVAILABLE: 14,
    DATA_LOSS: 15
};
module.exports.MethodType = {
    UNARY: "unary",
    SERVER_STREAMING: "server_streaming",
    BIDI_STREAMING: "bidi_streaming"
};
Jb = "undefined" !== typeof globalThis && globalThis || self;

},{}],"e5iO3":[function(require,module,exports) {
// source: inventory.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */ // GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */ // @ts-nocheck
var jspb = require("google-protobuf");
var goog = jspb;
var global = typeof globalThis !== "undefined" && globalThis || typeof window !== "undefined" && window || typeof global !== "undefined" && global || typeof self !== "undefined" && self || (function() {
    return this;
}).call(null) || Function("return this")();
goog.exportSymbol("proto.magnoliafabrics.Inventory", null, global);
goog.exportSymbol("proto.magnoliafabrics.Inventory.PO", null, global);
goog.exportSymbol("proto.magnoliafabrics.Inventory.Roll", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.Inventory = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.magnoliafabrics.Inventory.repeatedFields_, null);
};
goog.inherits(proto.magnoliafabrics.Inventory, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.Inventory.displayName = "proto.magnoliafabrics.Inventory";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.Inventory.Roll = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.Inventory.Roll, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.Inventory.Roll.displayName = "proto.magnoliafabrics.Inventory.Roll";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.Inventory.PO = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.Inventory.PO, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.Inventory.PO.displayName = "proto.magnoliafabrics.Inventory.PO";
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */ proto.magnoliafabrics.Inventory.repeatedFields_ = [
    2,
    4
];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.Inventory.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.Inventory.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.Inventory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Inventory.toObject = function(includeInstance, msg) {
        var f, obj = {
            productcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
            rollsList: jspb.Message.toObjectList(msg.getRollsList(), proto.magnoliafabrics.Inventory.Roll.toObject, includeInstance),
            total: jspb.Message.getFieldWithDefault(msg, 3, ""),
            purchaseordersList: jspb.Message.toObjectList(msg.getPurchaseordersList(), proto.magnoliafabrics.Inventory.PO.toObject, includeInstance),
            totalonpo: jspb.Message.getFieldWithDefault(msg, 5, ""),
            onbackorder: jspb.Message.getFieldWithDefault(msg, 6, "")
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.Inventory}
 */ proto.magnoliafabrics.Inventory.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.Inventory;
    return proto.magnoliafabrics.Inventory.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.Inventory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.Inventory}
 */ proto.magnoliafabrics.Inventory.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.setProductcode(value);
                break;
            case 2:
                var value = new proto.magnoliafabrics.Inventory.Roll;
                reader.readMessage(value, proto.magnoliafabrics.Inventory.Roll.deserializeBinaryFromReader);
                msg.addRolls(value);
                break;
            case 3:
                var value = /** @type {string} */ reader.readString();
                msg.setTotal(value);
                break;
            case 4:
                var value = new proto.magnoliafabrics.Inventory.PO;
                reader.readMessage(value, proto.magnoliafabrics.Inventory.PO.deserializeBinaryFromReader);
                msg.addPurchaseorders(value);
                break;
            case 5:
                var value = /** @type {string} */ reader.readString();
                msg.setTotalonpo(value);
                break;
            case 6:
                var value = /** @type {string} */ reader.readString();
                msg.setOnbackorder(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.Inventory.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.Inventory.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.Inventory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Inventory.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getProductcode();
    if (f.length > 0) writer.writeString(1, f);
    f = message.getRollsList();
    if (f.length > 0) writer.writeRepeatedMessage(2, f, proto.magnoliafabrics.Inventory.Roll.serializeBinaryToWriter);
    f = message.getTotal();
    if (f.length > 0) writer.writeString(3, f);
    f = message.getPurchaseordersList();
    if (f.length > 0) writer.writeRepeatedMessage(4, f, proto.magnoliafabrics.Inventory.PO.serializeBinaryToWriter);
    f = message.getTotalonpo();
    if (f.length > 0) writer.writeString(5, f);
    f = message.getOnbackorder();
    if (f.length > 0) writer.writeString(6, f);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.Inventory.Roll.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.Inventory.Roll.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.Inventory.Roll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Inventory.Roll.toObject = function(includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, ""),
            quantity: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.Inventory.Roll}
 */ proto.magnoliafabrics.Inventory.Roll.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.Inventory.Roll;
    return proto.magnoliafabrics.Inventory.Roll.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.Inventory.Roll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.Inventory.Roll}
 */ proto.magnoliafabrics.Inventory.Roll.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {string} */ reader.readString();
                msg.setQuantity(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.Inventory.Roll.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.Inventory.Roll.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.Inventory.Roll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Inventory.Roll.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getId();
    if (f.length > 0) writer.writeString(1, f);
    f = message.getQuantity();
    if (f.length > 0) writer.writeString(2, f);
};
/**
 * optional string ID = 1;
 * @return {string}
 */ proto.magnoliafabrics.Inventory.Roll.prototype.getId = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Inventory.Roll} returns this
 */ proto.magnoliafabrics.Inventory.Roll.prototype.setId = function(value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string Quantity = 2;
 * @return {string}
 */ proto.magnoliafabrics.Inventory.Roll.prototype.getQuantity = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 2, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Inventory.Roll} returns this
 */ proto.magnoliafabrics.Inventory.Roll.prototype.setQuantity = function(value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.Inventory.PO.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.Inventory.PO.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.Inventory.PO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Inventory.PO.toObject = function(includeInstance, msg) {
        var f, obj = {
            eta: jspb.Message.getFieldWithDefault(msg, 1, ""),
            amount: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.Inventory.PO}
 */ proto.magnoliafabrics.Inventory.PO.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.Inventory.PO;
    return proto.magnoliafabrics.Inventory.PO.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.Inventory.PO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.Inventory.PO}
 */ proto.magnoliafabrics.Inventory.PO.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.setEta(value);
                break;
            case 2:
                var value = /** @type {string} */ reader.readString();
                msg.setAmount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.Inventory.PO.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.Inventory.PO.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.Inventory.PO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Inventory.PO.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getEta();
    if (f.length > 0) writer.writeString(1, f);
    f = message.getAmount();
    if (f.length > 0) writer.writeString(2, f);
};
/**
 * optional string ETA = 1;
 * @return {string}
 */ proto.magnoliafabrics.Inventory.PO.prototype.getEta = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Inventory.PO} returns this
 */ proto.magnoliafabrics.Inventory.PO.prototype.setEta = function(value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string Amount = 2;
 * @return {string}
 */ proto.magnoliafabrics.Inventory.PO.prototype.getAmount = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 2, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Inventory.PO} returns this
 */ proto.magnoliafabrics.Inventory.PO.prototype.setAmount = function(value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string ProductCode = 1;
 * @return {string}
 */ proto.magnoliafabrics.Inventory.prototype.getProductcode = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Inventory} returns this
 */ proto.magnoliafabrics.Inventory.prototype.setProductcode = function(value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * repeated Roll Rolls = 2;
 * @return {!Array<!proto.magnoliafabrics.Inventory.Roll>}
 */ proto.magnoliafabrics.Inventory.prototype.getRollsList = function() {
    return /** @type{!Array<!proto.magnoliafabrics.Inventory.Roll>} */ jspb.Message.getRepeatedWrapperField(this, proto.magnoliafabrics.Inventory.Roll, 2);
};
/**
 * @param {!Array<!proto.magnoliafabrics.Inventory.Roll>} value
 * @return {!proto.magnoliafabrics.Inventory} returns this
*/ proto.magnoliafabrics.Inventory.prototype.setRollsList = function(value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.magnoliafabrics.Inventory.Roll=} opt_value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Inventory.Roll}
 */ proto.magnoliafabrics.Inventory.prototype.addRolls = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.magnoliafabrics.Inventory.Roll, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Inventory} returns this
 */ proto.magnoliafabrics.Inventory.prototype.clearRollsList = function() {
    return this.setRollsList([]);
};
/**
 * optional string Total = 3;
 * @return {string}
 */ proto.magnoliafabrics.Inventory.prototype.getTotal = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 3, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Inventory} returns this
 */ proto.magnoliafabrics.Inventory.prototype.setTotal = function(value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * repeated PO PurchaseOrders = 4;
 * @return {!Array<!proto.magnoliafabrics.Inventory.PO>}
 */ proto.magnoliafabrics.Inventory.prototype.getPurchaseordersList = function() {
    return /** @type{!Array<!proto.magnoliafabrics.Inventory.PO>} */ jspb.Message.getRepeatedWrapperField(this, proto.magnoliafabrics.Inventory.PO, 4);
};
/**
 * @param {!Array<!proto.magnoliafabrics.Inventory.PO>} value
 * @return {!proto.magnoliafabrics.Inventory} returns this
*/ proto.magnoliafabrics.Inventory.prototype.setPurchaseordersList = function(value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.magnoliafabrics.Inventory.PO=} opt_value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Inventory.PO}
 */ proto.magnoliafabrics.Inventory.prototype.addPurchaseorders = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.magnoliafabrics.Inventory.PO, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Inventory} returns this
 */ proto.magnoliafabrics.Inventory.prototype.clearPurchaseordersList = function() {
    return this.setPurchaseordersList([]);
};
/**
 * optional string TotalOnPO = 5;
 * @return {string}
 */ proto.magnoliafabrics.Inventory.prototype.getTotalonpo = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 5, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Inventory} returns this
 */ proto.magnoliafabrics.Inventory.prototype.setTotalonpo = function(value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * optional string OnBackorder = 6;
 * @return {string}
 */ proto.magnoliafabrics.Inventory.prototype.getOnbackorder = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 6, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Inventory} returns this
 */ proto.magnoliafabrics.Inventory.prototype.setOnbackorder = function(value) {
    return jspb.Message.setProto3StringField(this, 6, value);
};
goog.object.extend(exports, proto.magnoliafabrics);

},{"google-protobuf":"1iFch"}],"1iFch":[function(require,module,exports) {
/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/ var f, aa = this || self;
function h(a, b, c) {
    a = a.split(".");
    c = c || aa;
    a[0] in c || "undefined" == typeof c.execScript || c.execScript("var " + a[0]);
    for(var d; a.length && (d = a.shift());)a.length || void 0 === b ? c[d] && c[d] !== Object.prototype[d] ? c = c[d] : c = c[d] = {} : c[d] = b;
}
function k(a) {
    var b = typeof a;
    if ("object" == b) {
        if (a) {
            if (a instanceof Array) return "array";
            if (a instanceof Object) return b;
            var c = Object.prototype.toString.call(a);
            if ("[object Window]" == c) return "object";
            if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array";
            if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) return "function";
        } else return "null";
    } else if ("function" == b && "undefined" == typeof a.call) return "object";
    return b;
}
function ba(a) {
    var b = typeof a;
    return "object" == b && null != a || "function" == b;
}
function ca(a, b, c) {
    h(a, b, c);
}
function da(a, b) {
    function c() {}
    c.prototype = b.prototype;
    a.prototype = new c;
    a.prototype.constructor = a;
}
var ea = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function fa(a, b) {
    for(var c, d, e = 1; e < arguments.length; e++){
        d = arguments[e];
        for(c in d)a[c] = d[c];
        for(var g = 0; g < ea.length; g++)c = ea[g], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
}
function l(a, b, c, d) {
    var e = "Assertion failed";
    if (c) {
        e += ": " + c;
        var g = d;
    } else a && (e += ": " + a, g = b);
    throw Error(e, g || []);
}
function n(a, b, c) {
    for(var d = [], e = 2; e < arguments.length; ++e)d[e - 2] = arguments[e];
    a || l("", null, b, d);
    return a;
}
function ha(a, b, c) {
    for(var d = [], e = 2; e < arguments.length; ++e)d[e - 2] = arguments[e];
    "string" !== typeof a && l("Expected string but got %s: %s.", [
        k(a),
        a
    ], b, d);
}
function q(a, b) {
    for(var c = [], d = 1; d < arguments.length; ++d)c[d - 1] = arguments[d];
    throw Error("Failure" + (a ? ": " + a : ""), c);
}
function r(a, b, c, d) {
    for(var e = [], g = 3; g < arguments.length; ++g)e[g - 3] = arguments[g];
    a instanceof b || l("Expected instanceof %s but got %s.", [
        ia(b),
        ia(a)
    ], c, e);
}
function ia(a) {
    return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a;
}
var ja = Array.prototype.forEach ? function(a, b) {
    Array.prototype.forEach.call(a, b, void 0);
} : function(a, b) {
    for(var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++)e in d && b.call(void 0, d[e], e, a);
}, t = Array.prototype.map ? function(a, b) {
    return Array.prototype.map.call(a, b, void 0);
} : function(a, b) {
    for(var c = a.length, d = Array(c), e = "string" === typeof a ? a.split("") : a, g = 0; g < c; g++)g in e && (d[g] = b.call(void 0, e[g], g, a));
    return d;
};
function ka(a, b, c) {
    return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);
}
var la = {}, u = null;
function ma(a) {
    var b = a.length, c = 3 * b / 4;
    c % 3 ? c = Math.floor(c) : -1 != "=.".indexOf(a[b - 1]) && (c = -1 != "=.".indexOf(a[b - 2]) ? c - 2 : c - 1);
    var d = new Uint8Array(c), e = 0;
    na(a, function(g) {
        d[e++] = g;
    });
    return d.subarray(0, e);
}
function na(a, b) {
    function c(z) {
        for(; d < a.length;){
            var M = a.charAt(d++), ra = u[M];
            if (null != ra) return ra;
            if (!/^[\s\xa0]*$/.test(M)) throw Error("Unknown base64 encoding at char: " + M);
        }
        return z;
    }
    oa();
    for(var d = 0;;){
        var e = c(-1), g = c(0), m = c(64), p = c(64);
        if (64 === p && -1 === e) break;
        b(e << 2 | g >> 4);
        64 != m && (b(g << 4 & 240 | m >> 2), 64 != p && b(m << 6 & 192 | p));
    }
}
function oa() {
    if (!u) {
        u = {};
        for(var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), b = [
            "+/=",
            "+/",
            "-_=",
            "-_.",
            "-_"
        ], c = 0; 5 > c; c++){
            var d = a.concat(b[c].split(""));
            la[c] = d;
            for(var e = 0; e < d.length; e++){
                var g = d[e];
                void 0 === u[g] && (u[g] = e);
            }
        }
    }
}
var v = 0, w = 0;
function pa(a) {
    var b = a >>> 0;
    a = Math.floor((a - b) / 4294967296) >>> 0;
    v = b;
    w = a;
}
function x(a) {
    var b = 0 > a;
    a = Math.abs(a);
    var c = a >>> 0;
    a = Math.floor((a - c) / 4294967296);
    a >>>= 0;
    b && (a = ~a >>> 0, c = (~c >>> 0) + 1, 4294967295 < c && (c = 0, a++, 4294967295 < a && (a = 0)));
    v = c;
    w = a;
}
function y(a, b) {
    return 4294967296 * b + (a >>> 0);
}
function A(a, b) {
    var c = b & 2147483648;
    c && (a = ~a + 1 >>> 0, b = ~b >>> 0, 0 == a && (b = b + 1 >>> 0));
    a = y(a, b);
    return c ? -a : a;
}
function qa(a, b) {
    var c = -(a & 1);
    return A((a >>> 1 | b << 31) ^ c, b >>> 1 ^ c);
}
function sa(a) {
    if (a.constructor === Uint8Array) return a;
    if (a.constructor === ArrayBuffer) return new Uint8Array(a);
    if (a.constructor === Array) return new Uint8Array(a);
    if (a.constructor === String) return ma(a);
    if (a instanceof Uint8Array) return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);
    q("Type not convertible to Uint8Array.");
    return new Uint8Array(0);
}
function ta(a, b, c) {
    this.b = null;
    this.a = this.f = this.i = 0;
    this.u = !1;
    a && ua(this, a, b, c);
}
var va = [];
function wa(a, b, c) {
    if (va.length) {
        var d = va.pop();
        a && ua(d, a, b, c);
        return d;
    }
    return new ta(a, b, c);
}
f = ta.prototype;
f.clone = function() {
    return wa(this.b, this.i, this.f - this.i);
};
f.clear = function() {
    this.b = null;
    this.a = this.f = this.i = 0;
    this.u = !1;
};
function ua(a, b, c, d) {
    a.b = sa(b);
    a.i = void 0 !== c ? c : 0;
    a.f = void 0 !== d ? a.i + d : a.b.length;
    a.a = a.i;
}
function xa(a, b) {
    a.a += b;
    n(a.a <= a.f);
}
function ya(a, b) {
    for(var c = 128, d = 0, e = 0, g = 0; 4 > g && 128 <= c; g++)c = a.b[a.a++], d |= (c & 127) << 7 * g;
    128 <= c && (c = a.b[a.a++], d |= (c & 127) << 28, e |= (c & 127) >> 4);
    if (128 <= c) for(g = 0; 5 > g && 128 <= c; g++)c = a.b[a.a++], e |= (c & 127) << 7 * g + 3;
    if (128 > c) return b(d >>> 0, e >>> 0);
    q("Failed to read varint, encoding is invalid.");
    a.u = !0;
}
f.m = function() {
    var a = this.b;
    var b = a[this.a];
    var c = b & 127;
    if (128 > b) return this.a += 1, n(this.a <= this.f), c;
    b = a[this.a + 1];
    c |= (b & 127) << 7;
    if (128 > b) return this.a += 2, n(this.a <= this.f), c;
    b = a[this.a + 2];
    c |= (b & 127) << 14;
    if (128 > b) return this.a += 3, n(this.a <= this.f), c;
    b = a[this.a + 3];
    c |= (b & 127) << 21;
    if (128 > b) return this.a += 4, n(this.a <= this.f), c;
    b = a[this.a + 4];
    c |= (b & 15) << 28;
    if (128 > b) return this.a += 5, n(this.a <= this.f), c >>> 0;
    this.a += 5;
    128 <= a[this.a++] && 128 <= a[this.a++] && 128 <= a[this.a++] && 128 <= a[this.a++] && 128 <= a[this.a++] && n(!1);
    n(this.a <= this.f);
    return c;
};
f.Y = function() {
    return ~~this.m();
};
f.ha = function() {
    var a = this.m();
    return a >>> 1 ^ -(a & 1);
};
f.ga = function() {
    return ya(this, y);
};
f.Z = function() {
    return ya(this, A);
};
f.ia = function() {
    return ya(this, qa);
};
f.l = function() {
    var a = this.b[this.a], b = this.b[this.a + 1], c = this.b[this.a + 2], d = this.b[this.a + 3];
    this.a += 4;
    n(this.a <= this.f);
    return (a << 0 | b << 8 | c << 16 | d << 24) >>> 0;
};
f.L = function() {
    var a = this.l(), b = this.l();
    return y(a, b);
};
f.J = function() {
    var a = this.b[this.a], b = this.b[this.a + 1], c = this.b[this.a + 2], d = this.b[this.a + 3];
    this.a += 4;
    n(this.a <= this.f);
    return a << 0 | b << 8 | c << 16 | d << 24;
};
f.K = function() {
    var a = this.l(), b = this.l();
    return A(a, b);
};
f.I = function() {
    var a = this.l(), b = 2 * (a >> 31) + 1, c = a >>> 23 & 255;
    a &= 8388607;
    return 255 == c ? a ? NaN : Infinity * b : 0 == c ? b * Math.pow(2, -149) * a : b * Math.pow(2, c - 150) * (a + Math.pow(2, 23));
};
f.H = function() {
    var a = this.l(), b = this.l(), c = 2 * (b >> 31) + 1, d = b >>> 20 & 2047;
    a = 4294967296 * (b & 1048575) + a;
    return 2047 == d ? a ? NaN : Infinity * c : 0 == d ? c * Math.pow(2, -1074) * a : c * Math.pow(2, d - 1075) * (a + 4503599627370496);
};
f.V = function() {
    return !!this.b[this.a++];
};
f.X = function() {
    return this.Y();
};
f.$ = function(a) {
    var b = this.b, c = this.a, d = c + a, e = [];
    for(a = ""; c < d;){
        var g = b[c++];
        if (128 > g) e.push(g);
        else if (192 > g) continue;
        else if (224 > g) {
            var m = b[c++];
            e.push((g & 31) << 6 | m & 63);
        } else if (240 > g) {
            m = b[c++];
            var p = b[c++];
            e.push((g & 15) << 12 | (m & 63) << 6 | p & 63);
        } else if (248 > g) {
            m = b[c++];
            p = b[c++];
            var z = b[c++];
            g = (g & 7) << 18 | (m & 63) << 12 | (p & 63) << 6 | z & 63;
            g -= 65536;
            e.push((g >> 10 & 1023) + 55296, (g & 1023) + 56320);
        }
        8192 <= e.length && (a += String.fromCharCode.apply(null, e), e.length = 0);
    }
    if (8192 >= e.length) e = String.fromCharCode.apply(null, e);
    else {
        b = "";
        for(d = 0; d < e.length; d += 8192)b += String.fromCharCode.apply(null, ka(e, d, d + 8192));
        e = b;
    }
    this.a = c;
    return a + e;
};
f.W = function(a) {
    if (0 > a || this.a + a > this.b.length) return this.u = !0, q("Invalid byte length!"), new Uint8Array(0);
    var b = this.b.subarray(this.a, this.a + a);
    this.a += a;
    n(this.a <= this.f);
    return b;
};
function B(a, b, c) {
    this.a = wa(a, b, c);
    this.u = this.a.a;
    this.b = this.f = -1;
    this.i = !1;
}
B.prototype.ra = function() {
    return this.f;
};
B.prototype.getFieldNumber = B.prototype.ra;
B.prototype.va = function() {
    return 2 == this.b;
};
B.prototype.isDelimited = B.prototype.va;
B.prototype.fa = function() {
    return 4 == this.b;
};
B.prototype.isEndGroup = B.prototype.fa;
B.prototype.U = function() {
    var a = this.a;
    if (a.a == a.f) return !1;
    (a = this.i) || (a = this.a, a = a.u || 0 > a.a || a.a > a.f);
    if (a) return q("Decoder hit an error"), !1;
    this.u = this.a.a;
    var b = this.a.m();
    a = b >>> 3;
    b &= 7;
    if (0 != b && 5 != b && 1 != b && 2 != b && 3 != b && 4 != b) return q("Invalid wire type: %s (at position %s)", b, this.u), this.i = !0, !1;
    this.f = a;
    this.b = b;
    return !0;
};
B.prototype.nextField = B.prototype.U;
function C(a) {
    switch(a.b){
        case 0:
            if (0 != a.b) q("Invalid wire type for skipVarintField"), C(a);
            else {
                for(a = a.a; a.b[a.a] & 128;)a.a++;
                a.a++;
            }
            break;
        case 1:
            1 != a.b ? (q("Invalid wire type for skipFixed64Field"), C(a)) : xa(a.a, 8);
            break;
        case 2:
            if (2 != a.b) q("Invalid wire type for skipDelimitedField"), C(a);
            else {
                var b = a.a.m();
                xa(a.a, b);
            }
            break;
        case 5:
            5 != a.b ? (q("Invalid wire type for skipFixed32Field"), C(a)) : xa(a.a, 4);
            break;
        case 3:
            b = a.f;
            do {
                if (!a.U()) {
                    q("Unmatched start-group tag: stream EOF");
                    a.i = !0;
                    break;
                }
                if (4 == a.b) {
                    a.f != b && (q("Unmatched end-group tag"), a.i = !0);
                    break;
                }
                C(a);
            }while (1);
            break;
        default:
            q("Invalid wire encoding for field.");
    }
}
B.prototype.Aa = function(a, b) {
    n(2 == this.b);
    var c = this.a.f, d = this.a.m();
    d = this.a.a + d;
    this.a.f = d;
    b(a, this);
    this.a.a = d;
    this.a.f = c;
};
B.prototype.readMessage = B.prototype.Aa;
B.prototype.za = function(a, b, c) {
    n(3 == this.b);
    n(this.f == a);
    c(b, this);
    this.i || 4 == this.b || (q("Group submessage did not end with an END_GROUP tag"), this.i = !0);
};
B.prototype.readGroup = B.prototype.za;
B.prototype.J = function() {
    n(0 == this.b);
    return this.a.Y();
};
B.prototype.readInt32 = B.prototype.J;
B.prototype.K = function() {
    n(0 == this.b);
    return this.a.Z();
};
B.prototype.readInt64 = B.prototype.K;
B.prototype.l = function() {
    n(0 == this.b);
    return this.a.m();
};
B.prototype.readUint32 = B.prototype.l;
B.prototype.L = function() {
    n(0 == this.b);
    return this.a.ga();
};
B.prototype.readUint64 = B.prototype.L;
B.prototype.Ra = function() {
    n(0 == this.b);
    return this.a.ha();
};
B.prototype.readSint32 = B.prototype.Ra;
B.prototype.Sa = function() {
    n(0 == this.b);
    return this.a.ia();
};
B.prototype.readSint64 = B.prototype.Sa;
B.prototype.xa = function() {
    n(5 == this.b);
    return this.a.l();
};
B.prototype.readFixed32 = B.prototype.xa;
B.prototype.ya = function() {
    n(1 == this.b);
    return this.a.L();
};
B.prototype.readFixed64 = B.prototype.ya;
B.prototype.Pa = function() {
    n(5 == this.b);
    return this.a.J();
};
B.prototype.readSfixed32 = B.prototype.Pa;
B.prototype.Qa = function() {
    n(1 == this.b);
    return this.a.K();
};
B.prototype.readSfixed64 = B.prototype.Qa;
B.prototype.I = function() {
    n(5 == this.b);
    return this.a.I();
};
B.prototype.readFloat = B.prototype.I;
B.prototype.H = function() {
    n(1 == this.b);
    return this.a.H();
};
B.prototype.readDouble = B.prototype.H;
B.prototype.V = function() {
    n(0 == this.b);
    return !!this.a.m();
};
B.prototype.readBool = B.prototype.V;
B.prototype.X = function() {
    n(0 == this.b);
    return this.a.Z();
};
B.prototype.readEnum = B.prototype.X;
B.prototype.$ = function() {
    n(2 == this.b);
    var a = this.a.m();
    return this.a.$(a);
};
B.prototype.readString = B.prototype.$;
B.prototype.W = function() {
    n(2 == this.b);
    var a = this.a.m();
    return this.a.W(a);
};
B.prototype.readBytes = B.prototype.W;
function D(a, b) {
    n(2 == a.b);
    var c = a.a.m();
    c = a.a.a + c;
    for(var d = []; a.a.a < c;)d.push(b.call(a.a));
    return d;
}
B.prototype.Ha = function() {
    return D(this, this.a.Y);
};
B.prototype.readPackedInt32 = B.prototype.Ha;
B.prototype.Ia = function() {
    return D(this, this.a.Z);
};
B.prototype.readPackedInt64 = B.prototype.Ia;
B.prototype.Na = function() {
    return D(this, this.a.m);
};
B.prototype.readPackedUint32 = B.prototype.Na;
B.prototype.Oa = function() {
    return D(this, this.a.ga);
};
B.prototype.readPackedUint64 = B.prototype.Oa;
B.prototype.La = function() {
    return D(this, this.a.ha);
};
B.prototype.readPackedSint32 = B.prototype.La;
B.prototype.Ma = function() {
    return D(this, this.a.ia);
};
B.prototype.readPackedSint64 = B.prototype.Ma;
B.prototype.Ea = function() {
    return D(this, this.a.l);
};
B.prototype.readPackedFixed32 = B.prototype.Ea;
B.prototype.Fa = function() {
    return D(this, this.a.L);
};
B.prototype.readPackedFixed64 = B.prototype.Fa;
B.prototype.Ja = function() {
    return D(this, this.a.J);
};
B.prototype.readPackedSfixed32 = B.prototype.Ja;
B.prototype.Ka = function() {
    return D(this, this.a.K);
};
B.prototype.readPackedSfixed64 = B.prototype.Ka;
B.prototype.Ga = function() {
    return D(this, this.a.I);
};
B.prototype.readPackedFloat = B.prototype.Ga;
B.prototype.Ca = function() {
    return D(this, this.a.H);
};
B.prototype.readPackedDouble = B.prototype.Ca;
B.prototype.Ba = function() {
    return D(this, this.a.V);
};
B.prototype.readPackedBool = B.prototype.Ba;
B.prototype.Da = function() {
    return D(this, this.a.X);
};
B.prototype.readPackedEnum = B.prototype.Da;
function za() {
    this.a = [];
}
f = za.prototype;
f.length = function() {
    return this.a.length;
};
function Aa(a) {
    var b = a.a;
    a.a = [];
    return b;
}
function Ba(a) {
    var b = v, c = w;
    n(b == Math.floor(b));
    n(c == Math.floor(c));
    n(0 <= b && 4294967296 > b);
    for(n(0 <= c && 4294967296 > c); 0 < c || 127 < b;)a.a.push(b & 127 | 128), b = (b >>> 7 | c << 25) >>> 0, c >>>= 7;
    a.a.push(b);
}
function Ca(a, b, c) {
    n(b == Math.floor(b));
    n(c == Math.floor(c));
    n(0 <= b && 4294967296 > b);
    n(0 <= c && 4294967296 > c);
    a.o(b);
    a.o(c);
}
function E(a, b) {
    n(b == Math.floor(b));
    for(n(0 <= b && 4294967296 > b); 127 < b;)a.a.push(b & 127 | 128), b >>>= 7;
    a.a.push(b);
}
function F(a, b) {
    n(b == Math.floor(b));
    n(-2147483648 <= b && 2147483648 > b);
    if (0 <= b) E(a, b);
    else {
        for(var c = 0; 9 > c; c++)a.a.push(b & 127 | 128), b >>= 7;
        a.a.push(1);
    }
}
function Da(a, b) {
    n(b == Math.floor(b));
    n(0 <= b && 1.8446744073709552E19 > b);
    x(b);
    Ba(a);
}
function Ea(a, b) {
    n(b == Math.floor(b));
    n(-9223372036854776000 <= b && 0x7fffffffffffffff > b);
    x(b);
    Ba(a);
}
function Fa(a, b) {
    n(b == Math.floor(b));
    n(-2147483648 <= b && 2147483648 > b);
    E(a, (b << 1 ^ b >> 31) >>> 0);
}
function Ga(a, b) {
    n(b == Math.floor(b));
    n(-9223372036854776000 <= b && 0x7fffffffffffffff > b);
    var c = b;
    b = 0 > c;
    c = 2 * Math.abs(c);
    pa(c);
    c = v;
    var d = w;
    b && (0 == c ? 0 == d ? d = c = 4294967295 : (d--, c = 4294967295) : c--);
    v = c;
    w = d;
    Ba(a);
}
f.o = function(a) {
    n(a == Math.floor(a));
    n(0 <= a && 4294967296 > a);
    this.a.push(a >>> 0 & 255);
    this.a.push(a >>> 8 & 255);
    this.a.push(a >>> 16 & 255);
    this.a.push(a >>> 24 & 255);
};
f.R = function(a) {
    n(a == Math.floor(a));
    n(0 <= a && 1.8446744073709552E19 > a);
    pa(a);
    this.o(v);
    this.o(w);
};
f.N = function(a) {
    n(a == Math.floor(a));
    n(-2147483648 <= a && 2147483648 > a);
    this.a.push(a >>> 0 & 255);
    this.a.push(a >>> 8 & 255);
    this.a.push(a >>> 16 & 255);
    this.a.push(a >>> 24 & 255);
};
f.O = function(a) {
    n(a == Math.floor(a));
    n(-9223372036854776000 <= a && 0x7fffffffffffffff > a);
    x(a);
    Ca(this, v, w);
};
f.C = function(a) {
    n(Infinity === a || -Infinity === a || isNaN(a) || -340282346638528860000000000000000000000 <= a && 3.4028234663852886E38 >= a);
    var b = a;
    b = (a = 0 > b ? 1 : 0) ? -b : b;
    if (0 === b) 0 < 1 / b ? v = w = 0 : (w = 0, v = 2147483648);
    else if (isNaN(b)) w = 0, v = 2147483647;
    else if (3.4028234663852886E38 < b) w = 0, v = (a << 31 | 2139095040) >>> 0;
    else if (1.1754943508222875E-38 > b) b = Math.round(b / Math.pow(2, -149)), w = 0, v = (a << 31 | b) >>> 0;
    else {
        var c = Math.floor(Math.log(b) / Math.LN2);
        b *= Math.pow(2, -c);
        b = Math.round(8388608 * b);
        16777216 <= b && ++c;
        w = 0;
        v = (a << 31 | c + 127 << 23 | b & 8388607) >>> 0;
    }
    this.o(v);
};
f.B = function(a) {
    n(Infinity === a || -Infinity === a || isNaN(a) || -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 <= a && 1.7976931348623157E308 >= a);
    var b = a;
    b = (a = 0 > b ? 1 : 0) ? -b : b;
    if (0 === b) w = 0 < 1 / b ? 0 : 2147483648, v = 0;
    else if (isNaN(b)) w = 2147483647, v = 4294967295;
    else if (1.7976931348623157E308 < b) w = (a << 31 | 2146435072) >>> 0, v = 0;
    else if (2.2250738585072014E-308 > b) b /= Math.pow(2, -1074), w = (a << 31 | b / 4294967296) >>> 0, v = b >>> 0;
    else {
        var c = b, d = 0;
        if (2 <= c) for(; 2 <= c && 1023 > d;)d++, c /= 2;
        else for(; 1 > c && -1022 < d;)c *= 2, d--;
        b *= Math.pow(2, -d);
        w = (a << 31 | d + 1023 << 20 | 1048576 * b & 1048575) >>> 0;
        v = 4503599627370496 * b >>> 0;
    }
    this.o(v);
    this.o(w);
};
f.A = function(a) {
    n("boolean" === typeof a || "number" === typeof a);
    this.a.push(a ? 1 : 0);
};
f.M = function(a) {
    n(a == Math.floor(a));
    n(-2147483648 <= a && 2147483648 > a);
    F(this, a);
};
f.ba = function(a) {
    this.a.push.apply(this.a, a);
};
f.P = function(a) {
    var b = this.a.length;
    ha(a);
    for(var c = 0; c < a.length; c++){
        var d = a.charCodeAt(c);
        if (128 > d) this.a.push(d);
        else if (2048 > d) this.a.push(d >> 6 | 192), this.a.push(d & 63 | 128);
        else if (65536 > d) {
            if (55296 <= d && 56319 >= d && c + 1 < a.length) {
                var e = a.charCodeAt(c + 1);
                56320 <= e && 57343 >= e && (d = 1024 * (d - 55296) + e - 56320 + 65536, this.a.push(d >> 18 | 240), this.a.push(d >> 12 & 63 | 128), this.a.push(d >> 6 & 63 | 128), this.a.push(d & 63 | 128), c++);
            } else this.a.push(d >> 12 | 224), this.a.push(d >> 6 & 63 | 128), this.a.push(d & 63 | 128);
        }
    }
    return this.a.length - b;
};
function G(a, b) {
    this.a = a;
    this.b = b;
}
function Ha(a) {
    return new G((a.a >>> 1 | (a.b & 1) << 31) >>> 0, a.b >>> 1 >>> 0);
}
function Ia(a) {
    return new G(a.a << 1 >>> 0, (a.b << 1 | a.a >>> 31) >>> 0);
}
G.prototype.add = function(a) {
    return new G((this.a + a.a & 4294967295) >>> 0 >>> 0, ((this.b + a.b & 4294967295) >>> 0) + (4294967296 <= this.a + a.a ? 1 : 0) >>> 0);
};
G.prototype.sub = function(a) {
    return new G((this.a - a.a & 4294967295) >>> 0 >>> 0, ((this.b - a.b & 4294967295) >>> 0) - (0 > this.a - a.a ? 1 : 0) >>> 0);
};
function Ja(a) {
    var b = a & 65535, c = a >>> 16;
    a = 10 * b + 65536 * (0 * b & 65535) + 65536 * (10 * c & 65535);
    for(b = 0 * c + (0 * b >>> 16) + (10 * c >>> 16); 4294967296 <= a;)a -= 4294967296, b += 1;
    return new G(a >>> 0, b >>> 0);
}
G.prototype.toString = function() {
    for(var a = "", b = this; 0 != b.a || 0 != b.b;){
        var c = new G(0, 0);
        b = new G(b.a, b.b);
        for(var d = new G(10, 0), e = new G(1, 0); !(d.b & 2147483648);)d = Ia(d), e = Ia(e);
        for(; 0 != e.a || 0 != e.b;)0 >= (d.b < b.b || d.b == b.b && d.a < b.a ? -1 : d.b == b.b && d.a == b.a ? 0 : 1) && (c = c.add(e), b = b.sub(d)), d = Ha(d), e = Ha(e);
        c = [
            c,
            b
        ];
        b = c[0];
        a = c[1].a + a;
    }
    "" == a && (a = "0");
    return a;
};
G.prototype.clone = function() {
    return new G(this.a, this.b);
};
function H() {
    this.f = [];
    this.b = 0;
    this.a = new za;
    this.i = [];
}
function I(a, b) {
    J(a, b, 2);
    b = Aa(a.a);
    a.f.push(b);
    a.b += b.length;
    b.push(a.b);
    return b;
}
function K(a, b) {
    var c = b.pop();
    c = a.b + a.a.length() - c;
    for(n(0 <= c); 127 < c;)b.push(c & 127 | 128), c >>>= 7, a.b++;
    b.push(c);
    a.b++;
}
H.prototype.ua = function() {
    n(0 == this.i.length);
    for(var a = new Uint8Array(this.b + this.a.length()), b = this.f, c = b.length, d = 0, e = 0; e < c; e++){
        var g = b[e];
        a.set(g, d);
        d += g.length;
    }
    b = Aa(this.a);
    a.set(b, d);
    d += b.length;
    n(d == a.length);
    this.f = [
        a
    ];
    return a;
};
H.prototype.getResultBuffer = H.prototype.ua;
function J(a, b, c) {
    n(1 <= b && b == Math.floor(b));
    E(a.a, 8 * b + c);
}
H.prototype.N = function(a, b) {
    null != b && (n(-2147483648 <= b && 2147483648 > b), null != b && (J(this, a, 0), F(this.a, b)));
};
H.prototype.writeInt32 = H.prototype.N;
H.prototype.O = function(a, b) {
    null != b && (n(-9223372036854776000 <= b && 0x7fffffffffffffff > b), null != b && (J(this, a, 0), Ea(this.a, b)));
};
H.prototype.writeInt64 = H.prototype.O;
H.prototype.o = function(a, b) {
    null != b && (n(0 <= b && 4294967296 > b), null != b && (J(this, a, 0), E(this.a, b)));
};
H.prototype.writeUint32 = H.prototype.o;
H.prototype.R = function(a, b) {
    null != b && (n(0 <= b && 1.8446744073709552E19 > b), null != b && (J(this, a, 0), Da(this.a, b)));
};
H.prototype.writeUint64 = H.prototype.R;
H.prototype.Fb = function(a, b) {
    null != b && (n(-2147483648 <= b && 2147483648 > b), null != b && (J(this, a, 0), Fa(this.a, b)));
};
H.prototype.writeSint32 = H.prototype.Fb;
H.prototype.Gb = function(a, b) {
    null != b && (n(-9223372036854776000 <= b && 0x7fffffffffffffff > b), null != b && (J(this, a, 0), Ga(this.a, b)));
};
H.prototype.writeSint64 = H.prototype.Gb;
H.prototype.ja = function(a, b) {
    null != b && (n(0 <= b && 4294967296 > b), J(this, a, 5), this.a.o(b));
};
H.prototype.writeFixed32 = H.prototype.ja;
H.prototype.ka = function(a, b) {
    null != b && (n(0 <= b && 1.8446744073709552E19 > b), J(this, a, 1), this.a.R(b));
};
H.prototype.writeFixed64 = H.prototype.ka;
H.prototype.la = function(a, b) {
    null != b && (n(-2147483648 <= b && 2147483648 > b), J(this, a, 5), this.a.N(b));
};
H.prototype.writeSfixed32 = H.prototype.la;
H.prototype.ma = function(a, b) {
    null != b && (n(-9223372036854776000 <= b && 0x7fffffffffffffff > b), J(this, a, 1), this.a.O(b));
};
H.prototype.writeSfixed64 = H.prototype.ma;
H.prototype.C = function(a, b) {
    null != b && (J(this, a, 5), this.a.C(b));
};
H.prototype.writeFloat = H.prototype.C;
H.prototype.B = function(a, b) {
    null != b && (J(this, a, 1), this.a.B(b));
};
H.prototype.writeDouble = H.prototype.B;
H.prototype.A = function(a, b) {
    null != b && (n("boolean" === typeof b || "number" === typeof b), J(this, a, 0), this.a.A(b));
};
H.prototype.writeBool = H.prototype.A;
H.prototype.M = function(a, b) {
    null != b && (n(-2147483648 <= b && 2147483648 > b), J(this, a, 0), F(this.a, b));
};
H.prototype.writeEnum = H.prototype.M;
H.prototype.P = function(a, b) {
    null != b && (a = I(this, a), this.a.P(b), K(this, a));
};
H.prototype.writeString = H.prototype.P;
H.prototype.ba = function(a, b) {
    null != b && (b = sa(b), J(this, a, 2), E(this.a, b.length), a = Aa(this.a), this.f.push(a), this.f.push(b), this.b += a.length + b.length);
};
H.prototype.writeBytes = H.prototype.ba;
H.prototype.Xa = function(a, b, c) {
    null != b && (a = I(this, a), c(b, this), K(this, a));
};
H.prototype.writeMessage = H.prototype.Xa;
H.prototype.Wa = function(a, b, c) {
    null != b && (J(this, a, 3), c(b, this), J(this, a, 4));
};
H.prototype.writeGroup = H.prototype.Wa;
H.prototype.vb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++){
        var d = b[c];
        null != d && (J(this, a, 0), F(this.a, d));
    }
};
H.prototype.writeRepeatedInt32 = H.prototype.vb;
H.prototype.wb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++){
        var d = b[c];
        null != d && (J(this, a, 0), Ea(this.a, d));
    }
};
H.prototype.writeRepeatedInt64 = H.prototype.wb;
H.prototype.Db = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++){
        var d = b[c];
        null != d && (J(this, a, 0), E(this.a, d));
    }
};
H.prototype.writeRepeatedUint32 = H.prototype.Db;
H.prototype.Eb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++){
        var d = b[c];
        null != d && (J(this, a, 0), Da(this.a, d));
    }
};
H.prototype.writeRepeatedUint64 = H.prototype.Eb;
H.prototype.Ab = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++){
        var d = b[c];
        null != d && (J(this, a, 0), Fa(this.a, d));
    }
};
H.prototype.writeRepeatedSint32 = H.prototype.Ab;
H.prototype.Bb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++){
        var d = b[c];
        null != d && (J(this, a, 0), Ga(this.a, d));
    }
};
H.prototype.writeRepeatedSint64 = H.prototype.Bb;
H.prototype.qb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.ja(a, b[c]);
};
H.prototype.writeRepeatedFixed32 = H.prototype.qb;
H.prototype.rb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.ka(a, b[c]);
};
H.prototype.writeRepeatedFixed64 = H.prototype.rb;
H.prototype.sb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++){
        var d = a, e = b[c];
        if (null != e) {
            a: {
                for(var g = new G(0, 0), m = new G(0, 0), p = 0; p < e.length; p++){
                    if ("0" > e[p] || "9" < e[p]) {
                        e = null;
                        break a;
                    }
                    m.a = parseInt(e[p], 10);
                    var z = Ja(g.a);
                    g = Ja(g.b);
                    g.b = g.a;
                    g.a = 0;
                    g = z.add(g).add(m);
                }
                e = g;
            }
            J(this, d, 1);
            Ca(this.a, e.a, e.b);
        }
    }
};
H.prototype.writeRepeatedFixed64String = H.prototype.sb;
H.prototype.yb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.la(a, b[c]);
};
H.prototype.writeRepeatedSfixed32 = H.prototype.yb;
H.prototype.zb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.ma(a, b[c]);
};
H.prototype.writeRepeatedSfixed64 = H.prototype.zb;
H.prototype.tb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.C(a, b[c]);
};
H.prototype.writeRepeatedFloat = H.prototype.tb;
H.prototype.ob = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.B(a, b[c]);
};
H.prototype.writeRepeatedDouble = H.prototype.ob;
H.prototype.mb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.A(a, b[c]);
};
H.prototype.writeRepeatedBool = H.prototype.mb;
H.prototype.pb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.M(a, b[c]);
};
H.prototype.writeRepeatedEnum = H.prototype.pb;
H.prototype.Cb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.P(a, b[c]);
};
H.prototype.writeRepeatedString = H.prototype.Cb;
H.prototype.nb = function(a, b) {
    if (null != b) for(var c = 0; c < b.length; c++)this.ba(a, b[c]);
};
H.prototype.writeRepeatedBytes = H.prototype.nb;
H.prototype.xb = function(a, b, c) {
    if (null != b) for(var d = 0; d < b.length; d++){
        var e = I(this, a);
        c(b[d], this);
        K(this, e);
    }
};
H.prototype.writeRepeatedMessage = H.prototype.xb;
H.prototype.ub = function(a, b, c) {
    if (null != b) for(var d = 0; d < b.length; d++)J(this, a, 3), c(b[d], this), J(this, a, 4);
};
H.prototype.writeRepeatedGroup = H.prototype.ub;
H.prototype.eb = function(a, b) {
    if (null != b && b.length) {
        a = I(this, a);
        for(var c = 0; c < b.length; c++)F(this.a, b[c]);
        K(this, a);
    }
};
H.prototype.writePackedInt32 = H.prototype.eb;
H.prototype.fb = function(a, b) {
    if (null != b && b.length) {
        a = I(this, a);
        for(var c = 0; c < b.length; c++)Ea(this.a, b[c]);
        K(this, a);
    }
};
H.prototype.writePackedInt64 = H.prototype.fb;
H.prototype.kb = function(a, b) {
    if (null != b && b.length) {
        a = I(this, a);
        for(var c = 0; c < b.length; c++)E(this.a, b[c]);
        K(this, a);
    }
};
H.prototype.writePackedUint32 = H.prototype.kb;
H.prototype.lb = function(a, b) {
    if (null != b && b.length) {
        a = I(this, a);
        for(var c = 0; c < b.length; c++)Da(this.a, b[c]);
        K(this, a);
    }
};
H.prototype.writePackedUint64 = H.prototype.lb;
H.prototype.ib = function(a, b) {
    if (null != b && b.length) {
        a = I(this, a);
        for(var c = 0; c < b.length; c++)Fa(this.a, b[c]);
        K(this, a);
    }
};
H.prototype.writePackedSint32 = H.prototype.ib;
H.prototype.jb = function(a, b) {
    if (null != b && b.length) {
        a = I(this, a);
        for(var c = 0; c < b.length; c++)Ga(this.a, b[c]);
        K(this, a);
    }
};
H.prototype.writePackedSint64 = H.prototype.jb;
H.prototype.ab = function(a, b) {
    if (null != b && b.length) for(J(this, a, 2), E(this.a, 4 * b.length), a = 0; a < b.length; a++)this.a.o(b[a]);
};
H.prototype.writePackedFixed32 = H.prototype.ab;
H.prototype.bb = function(a, b) {
    if (null != b && b.length) for(J(this, a, 2), E(this.a, 8 * b.length), a = 0; a < b.length; a++)this.a.R(b[a]);
};
H.prototype.writePackedFixed64 = H.prototype.bb;
H.prototype.gb = function(a, b) {
    if (null != b && b.length) for(J(this, a, 2), E(this.a, 4 * b.length), a = 0; a < b.length; a++)this.a.N(b[a]);
};
H.prototype.writePackedSfixed32 = H.prototype.gb;
H.prototype.hb = function(a, b) {
    if (null != b && b.length) for(J(this, a, 2), E(this.a, 8 * b.length), a = 0; a < b.length; a++)this.a.O(b[a]);
};
H.prototype.writePackedSfixed64 = H.prototype.hb;
H.prototype.cb = function(a, b) {
    if (null != b && b.length) for(J(this, a, 2), E(this.a, 4 * b.length), a = 0; a < b.length; a++)this.a.C(b[a]);
};
H.prototype.writePackedFloat = H.prototype.cb;
H.prototype.Za = function(a, b) {
    if (null != b && b.length) for(J(this, a, 2), E(this.a, 8 * b.length), a = 0; a < b.length; a++)this.a.B(b[a]);
};
H.prototype.writePackedDouble = H.prototype.Za;
H.prototype.Ya = function(a, b) {
    if (null != b && b.length) for(J(this, a, 2), E(this.a, b.length), a = 0; a < b.length; a++)this.a.A(b[a]);
};
H.prototype.writePackedBool = H.prototype.Ya;
H.prototype.$a = function(a, b) {
    if (null != b && b.length) {
        a = I(this, a);
        for(var c = 0; c < b.length; c++)this.a.M(b[c]);
        K(this, a);
    }
};
H.prototype.writePackedEnum = H.prototype.$a;
function L(a, b) {
    this.f = a;
    this.b = b;
    this.a = {};
    this.arrClean = !0;
    if (0 < this.f.length) {
        for(a = 0; a < this.f.length; a++){
            b = this.f[a];
            var c = b[0];
            this.a[c.toString()] = new Ka(c, b[1]);
        }
        this.arrClean = !0;
    }
}
h("jspb.Map", L, void 0);
L.prototype.g = function() {
    if (this.arrClean) {
        if (this.b) {
            var a = this.a, b;
            for(b in a)if (Object.prototype.hasOwnProperty.call(a, b)) {
                var c = a[b].a;
                c && c.g();
            }
        }
    } else {
        this.f.length = 0;
        a = N(this);
        a.sort();
        for(b = 0; b < a.length; b++){
            var d = this.a[a[b]];
            (c = d.a) && c.g();
            this.f.push([
                d.key,
                d.value
            ]);
        }
        this.arrClean = !0;
    }
    return this.f;
};
L.prototype.toArray = L.prototype.g;
L.prototype.Va = function(a, b) {
    for(var c = this.g(), d = [], e = 0; e < c.length; e++){
        var g = this.a[c[e][0].toString()];
        O(this, g);
        var m = g.a;
        m ? (n(b), d.push([
            g.key,
            b(a, m)
        ])) : d.push([
            g.key,
            g.value
        ]);
    }
    return d;
};
L.prototype.toObject = L.prototype.Va;
L.fromObject = function(a, b, c) {
    b = new L([], b);
    for(var d = 0; d < a.length; d++){
        var e = a[d][0], g = c(a[d][1]);
        b.set(e, g);
    }
    return b;
};
function P(a) {
    this.a = 0;
    this.b = a;
}
P.prototype.next = function() {
    return this.a < this.b.length ? {
        done: !1,
        value: this.b[this.a++]
    } : {
        done: !0,
        value: void 0
    };
};
"undefined" != typeof Symbol && (P.prototype[Symbol.iterator] = function() {
    return this;
});
L.prototype.ta = function() {
    return N(this).length;
};
L.prototype.getLength = L.prototype.ta;
L.prototype.clear = function() {
    this.a = {};
    this.arrClean = !1;
};
L.prototype.clear = L.prototype.clear;
L.prototype.pa = function(a) {
    a = a.toString();
    var b = this.a.hasOwnProperty(a);
    delete this.a[a];
    this.arrClean = !1;
    return b;
};
L.prototype.del = L.prototype.pa;
L.prototype.qa = function() {
    var a = [], b = N(this);
    b.sort();
    for(var c = 0; c < b.length; c++){
        var d = this.a[b[c]];
        a.push([
            d.key,
            d.value
        ]);
    }
    return a;
};
L.prototype.getEntryList = L.prototype.qa;
L.prototype.entries = function() {
    var a = [], b = N(this);
    b.sort();
    for(var c = 0; c < b.length; c++){
        var d = this.a[b[c]];
        a.push([
            d.key,
            O(this, d)
        ]);
    }
    return new P(a);
};
L.prototype.entries = L.prototype.entries;
L.prototype.keys = function() {
    var a = [], b = N(this);
    b.sort();
    for(var c = 0; c < b.length; c++)a.push(this.a[b[c]].key);
    return new P(a);
};
L.prototype.keys = L.prototype.keys;
L.prototype.values = function() {
    var a = [], b = N(this);
    b.sort();
    for(var c = 0; c < b.length; c++)a.push(O(this, this.a[b[c]]));
    return new P(a);
};
L.prototype.values = L.prototype.values;
L.prototype.forEach = function(a, b) {
    var c = N(this);
    c.sort();
    for(var d = 0; d < c.length; d++){
        var e = this.a[c[d]];
        a.call(b, O(this, e), e.key, this);
    }
};
L.prototype.forEach = L.prototype.forEach;
L.prototype.set = function(a, b) {
    var c = new Ka(a);
    this.b ? (c.a = b, c.value = b.g()) : c.value = b;
    this.a[a.toString()] = c;
    this.arrClean = !1;
    return this;
};
L.prototype.set = L.prototype.set;
function O(a, b) {
    return a.b ? (b.a || (b.a = new a.b(b.value)), b.a) : b.value;
}
L.prototype.get = function(a) {
    if (a = this.a[a.toString()]) return O(this, a);
};
L.prototype.get = L.prototype.get;
L.prototype.has = function(a) {
    return a.toString() in this.a;
};
L.prototype.has = L.prototype.has;
L.prototype.Ta = function(a, b, c, d, e) {
    var g = N(this);
    g.sort();
    for(var m = 0; m < g.length; m++){
        var p = this.a[g[m]];
        b.i.push(I(b, a));
        c.call(b, 1, p.key);
        this.b ? d.call(b, 2, O(this, p), e) : d.call(b, 2, p.value);
        p = b;
        n(0 <= p.i.length);
        K(p, p.i.pop());
    }
};
L.prototype.serializeBinary = L.prototype.Ta;
L.deserializeBinary = function(a, b, c, d, e, g, m) {
    for(; b.U() && !b.fa();){
        var p = b.f;
        1 == p ? g = c.call(b) : 2 == p && (a.b ? (n(e), m || (m = new a.b), d.call(b, m, e)) : m = d.call(b));
    }
    n(void 0 != g);
    n(void 0 != m);
    a.set(g, m);
};
function N(a) {
    a = a.a;
    var b = [], c;
    for(c in a)Object.prototype.hasOwnProperty.call(a, c) && b.push(c);
    return b;
}
function Ka(a, b) {
    this.key = a;
    this.value = b;
    this.a = void 0;
}
function Q(a, b, c, d, e) {
    this.F = a;
    this.ea = b;
    this.D = c;
    this.aa = d;
    this.G = e;
}
h("jspb.ExtensionFieldInfo", Q, void 0);
function La(a, b, c, d, e, g) {
    this.da = a;
    this.S = b;
    this.T = c;
    this.ca = d;
    this.na = e;
    this.wa = g;
}
h("jspb.ExtensionFieldBinaryInfo", La, void 0);
Q.prototype.v = function() {
    return !!this.D;
};
Q.prototype.isMessageType = Q.prototype.v;
function R() {}
h("jspb.Message", R, void 0);
R.GENERATE_TO_OBJECT = !0;
R.GENERATE_FROM_OBJECT = !0;
var S = "function" == typeof Uint8Array;
R.prototype.sa = function() {
    return this.b;
};
R.prototype.getJsPbMessageId = R.prototype.sa;
R.initialize = function(a, b, c, d, e, g) {
    a.c = null;
    b || (b = c ? [
        c
    ] : []);
    a.b = c ? String(c) : void 0;
    a.s = 0 === c ? -1 : 0;
    a.j = b;
    a: {
        c = a.j.length;
        b = -1;
        if (c && (b = c - 1, c = a.j[b], !(null === c || "object" != typeof c || Array.isArray(c) || S && c instanceof Uint8Array))) {
            a.w = b - a.s;
            a.h = c;
            break a;
        }
        -1 < d ? (a.w = Math.max(d, b + 1 - a.s), a.h = null) : a.w = Number.MAX_VALUE;
    }
    a.a = {};
    if (e) for(d = 0; d < e.length; d++)b = e[d], b < a.w ? (b += a.s, a.j[b] = a.j[b] || T) : (U(a), a.h[b] = a.h[b] || T);
    if (g && g.length) for(d = 0; d < g.length; d++)Ma(a, g[d]);
};
var T = Object.freeze ? Object.freeze([]) : [];
function U(a) {
    var b = a.w + a.s;
    a.j[b] || (a.h = a.j[b] = {});
}
function Na(a, b, c) {
    for(var d = [], e = 0; e < a.length; e++)d[e] = b.call(a[e], c, a[e]);
    return d;
}
R.toObjectList = Na;
R.toObjectExtension = function(a, b, c, d, e) {
    for(var g in c){
        var m = c[g], p = d.call(a, m);
        if (null != p) {
            for(var z in m.ea)if (m.ea.hasOwnProperty(z)) break;
            b[z] = m.aa ? m.G ? Na(p, m.aa, e) : m.aa(e, p) : p;
        }
    }
};
R.serializeBinaryExtensions = function(a, b, c, d) {
    for(var e in c){
        var g = c[e], m = g.da;
        if (!g.T) throw Error("Message extension present that was generated without binary serialization support");
        var p = d.call(a, m);
        if (null != p) {
            if (m.v()) {
                if (g.ca) g.T.call(b, m.F, p, g.ca);
                else throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
            } else g.T.call(b, m.F, p);
        }
    }
};
R.readBinaryExtension = function(a, b, c, d, e) {
    var g = c[b.f];
    if (g) {
        c = g.da;
        if (!g.S) throw Error("Deserializing extension whose generated code does not support binary format");
        if (c.v()) {
            var m = new c.D;
            g.S.call(b, m, g.na);
        } else m = g.S.call(b);
        c.G && !g.wa ? (b = d.call(a, c)) ? b.push(m) : e.call(a, c, [
            m
        ]) : e.call(a, c, m);
    } else C(b);
};
function V(a, b) {
    if (b < a.w) {
        b += a.s;
        var c = a.j[b];
        return c === T ? a.j[b] = [] : c;
    }
    if (a.h) return c = a.h[b], c === T ? a.h[b] = [] : c;
}
R.getField = V;
R.getRepeatedField = function(a, b) {
    return V(a, b);
};
function Oa(a, b) {
    a = V(a, b);
    return null == a ? a : +a;
}
R.getOptionalFloatingPointField = Oa;
function Pa(a, b) {
    a = V(a, b);
    return null == a ? a : !!a;
}
R.getBooleanField = Pa;
R.getRepeatedFloatingPointField = function(a, b) {
    var c = V(a, b);
    a.a || (a.a = {});
    if (!a.a[b]) {
        for(var d = 0; d < c.length; d++)c[d] = +c[d];
        a.a[b] = !0;
    }
    return c;
};
R.getRepeatedBooleanField = function(a, b) {
    var c = V(a, b);
    a.a || (a.a = {});
    if (!a.a[b]) {
        for(var d = 0; d < c.length; d++)c[d] = !!c[d];
        a.a[b] = !0;
    }
    return c;
};
function Qa(a) {
    if (null == a || "string" === typeof a) return a;
    if (S && a instanceof Uint8Array) {
        var b;
        void 0 === b && (b = 0);
        oa();
        b = la[b];
        for(var c = [], d = 0; d < a.length; d += 3){
            var e = a[d], g = d + 1 < a.length, m = g ? a[d + 1] : 0, p = d + 2 < a.length, z = p ? a[d + 2] : 0, M = e >> 2;
            e = (e & 3) << 4 | m >> 4;
            m = (m & 15) << 2 | z >> 6;
            z &= 63;
            p || (z = 64, g || (m = 64));
            c.push(b[M], b[e], b[m] || "", b[z] || "");
        }
        return c.join("");
    }
    q("Cannot coerce to b64 string: " + k(a));
    return null;
}
R.bytesAsB64 = Qa;
function Ra(a) {
    if (null == a || a instanceof Uint8Array) return a;
    if ("string" === typeof a) return ma(a);
    q("Cannot coerce to Uint8Array: " + k(a));
    return null;
}
R.bytesAsU8 = Ra;
R.bytesListAsB64 = function(a) {
    Sa(a);
    return a.length && "string" !== typeof a[0] ? t(a, Qa) : a;
};
R.bytesListAsU8 = function(a) {
    Sa(a);
    return !a.length || a[0] instanceof Uint8Array ? a : t(a, Ra);
};
function Sa(a) {
    if (a && 1 < a.length) {
        var b = k(a[0]);
        ja(a, function(c) {
            k(c) != b && q("Inconsistent type in JSPB repeated field array. Got " + k(c) + " expected " + b);
        });
    }
}
function Ta(a, b, c) {
    a = V(a, b);
    return null == a ? c : a;
}
R.getFieldWithDefault = Ta;
R.getBooleanFieldWithDefault = function(a, b, c) {
    a = Pa(a, b);
    return null == a ? c : a;
};
R.getFloatingPointFieldWithDefault = function(a, b, c) {
    a = Oa(a, b);
    return null == a ? c : a;
};
R.getFieldProto3 = Ta;
R.getMapField = function(a, b, c, d) {
    a.c || (a.c = {});
    if (b in a.c) return a.c[b];
    var e = V(a, b);
    if (!e) {
        if (c) return;
        e = [];
        W(a, b, e);
    }
    return a.c[b] = new L(e, d);
};
function W(a, b, c) {
    r(a, R);
    b < a.w ? a.j[b + a.s] = c : (U(a), a.h[b] = c);
    return a;
}
R.setField = W;
R.setProto3IntField = function(a, b, c) {
    return X(a, b, c, 0);
};
R.setProto3FloatField = function(a, b, c) {
    return X(a, b, c, 0);
};
R.setProto3BooleanField = function(a, b, c) {
    return X(a, b, c, !1);
};
R.setProto3StringField = function(a, b, c) {
    return X(a, b, c, "");
};
R.setProto3BytesField = function(a, b, c) {
    return X(a, b, c, "");
};
R.setProto3EnumField = function(a, b, c) {
    return X(a, b, c, 0);
};
R.setProto3StringIntField = function(a, b, c) {
    return X(a, b, c, "0");
};
function X(a, b, c, d) {
    r(a, R);
    c !== d ? W(a, b, c) : b < a.w ? a.j[b + a.s] = null : (U(a), delete a.h[b]);
    return a;
}
R.addToRepeatedField = function(a, b, c, d) {
    r(a, R);
    b = V(a, b);
    void 0 != d ? b.splice(d, 0, c) : b.push(c);
    return a;
};
function Ua(a, b, c, d) {
    r(a, R);
    (c = Ma(a, c)) && c !== b && void 0 !== d && (a.c && c in a.c && (a.c[c] = void 0), W(a, c, void 0));
    return W(a, b, d);
}
R.setOneofField = Ua;
function Ma(a, b) {
    for(var c, d, e = 0; e < b.length; e++){
        var g = b[e], m = V(a, g);
        null != m && (c = g, d = m, W(a, g, void 0));
    }
    return c ? (W(a, c, d), c) : 0;
}
R.computeOneofCase = Ma;
R.getWrapperField = function(a, b, c, d) {
    a.c || (a.c = {});
    if (!a.c[c]) {
        var e = V(a, c);
        if (d || e) a.c[c] = new b(e);
    }
    return a.c[c];
};
R.getRepeatedWrapperField = function(a, b, c) {
    Va(a, b, c);
    b = a.c[c];
    b == T && (b = a.c[c] = []);
    return b;
};
function Va(a, b, c) {
    a.c || (a.c = {});
    if (!a.c[c]) {
        for(var d = V(a, c), e = [], g = 0; g < d.length; g++)e[g] = new b(d[g]);
        a.c[c] = e;
    }
}
R.setWrapperField = function(a, b, c) {
    r(a, R);
    a.c || (a.c = {});
    var d = c ? c.g() : c;
    a.c[b] = c;
    return W(a, b, d);
};
R.setOneofWrapperField = function(a, b, c, d) {
    r(a, R);
    a.c || (a.c = {});
    var e = d ? d.g() : d;
    a.c[b] = d;
    return Ua(a, b, c, e);
};
R.setRepeatedWrapperField = function(a, b, c) {
    r(a, R);
    a.c || (a.c = {});
    c = c || [];
    for(var d = [], e = 0; e < c.length; e++)d[e] = c[e].g();
    a.c[b] = c;
    return W(a, b, d);
};
R.addToRepeatedWrapperField = function(a, b, c, d, e) {
    Va(a, d, b);
    var g = a.c[b];
    g || (g = a.c[b] = []);
    c = c ? c : new d;
    a = V(a, b);
    void 0 != e ? (g.splice(e, 0, c), a.splice(e, 0, c.g())) : (g.push(c), a.push(c.g()));
    return c;
};
R.toMap = function(a, b, c, d) {
    for(var e = {}, g = 0; g < a.length; g++)e[b.call(a[g])] = c ? c.call(a[g], d, a[g]) : a[g];
    return e;
};
function Wa(a) {
    if (a.c) for(var b in a.c){
        var c = a.c[b];
        if (Array.isArray(c)) for(var d = 0; d < c.length; d++)c[d] && c[d].g();
        else c && c.g();
    }
}
R.prototype.g = function() {
    Wa(this);
    return this.j;
};
R.prototype.toArray = R.prototype.g;
R.prototype.toString = function() {
    Wa(this);
    return this.j.toString();
};
R.prototype.getExtension = function(a) {
    if (this.h) {
        this.c || (this.c = {});
        var b = a.F;
        if (a.G) {
            if (a.v()) return this.c[b] || (this.c[b] = t(this.h[b] || [], function(c) {
                return new a.D(c);
            })), this.c[b];
        } else if (a.v()) return !this.c[b] && this.h[b] && (this.c[b] = new a.D(this.h[b])), this.c[b];
        return this.h[b];
    }
};
R.prototype.getExtension = R.prototype.getExtension;
R.prototype.Ua = function(a, b) {
    this.c || (this.c = {});
    U(this);
    var c = a.F;
    a.G ? (b = b || [], a.v() ? (this.c[c] = b, this.h[c] = t(b, function(d) {
        return d.g();
    })) : this.h[c] = b) : a.v() ? (this.c[c] = b, this.h[c] = b ? b.g() : b) : this.h[c] = b;
    return this;
};
R.prototype.setExtension = R.prototype.Ua;
R.difference = function(a, b) {
    if (!(a instanceof b.constructor)) throw Error("Messages have different types.");
    var c = a.g();
    b = b.g();
    var d = [], e = 0, g = c.length > b.length ? c.length : b.length;
    a.b && (d[0] = a.b, e = 1);
    for(; e < g; e++)Y(c[e], b[e]) || (d[e] = b[e]);
    return new a.constructor(d);
};
R.equals = function(a, b) {
    return a == b || !(!a || !b) && a instanceof b.constructor && Y(a.g(), b.g());
};
function Xa(a, b) {
    a = a || {};
    b = b || {};
    var c = {}, d;
    for(d in a)c[d] = 0;
    for(d in b)c[d] = 0;
    for(d in c)if (!Y(a[d], b[d])) return !1;
    return !0;
}
R.compareExtensions = Xa;
function Y(a, b) {
    if (a == b) return !0;
    if (!ba(a) || !ba(b)) return "number" === typeof a && isNaN(a) || "number" === typeof b && isNaN(b) ? String(a) == String(b) : !1;
    if (a.constructor != b.constructor) return !1;
    if (S && a.constructor === Uint8Array) {
        if (a.length != b.length) return !1;
        for(var c = 0; c < a.length; c++)if (a[c] != b[c]) return !1;
        return !0;
    }
    if (a.constructor === Array) {
        var d = void 0, e = void 0, g = Math.max(a.length, b.length);
        for(c = 0; c < g; c++){
            var m = a[c], p = b[c];
            m && m.constructor == Object && (n(void 0 === d), n(c === a.length - 1), d = m, m = void 0);
            p && p.constructor == Object && (n(void 0 === e), n(c === b.length - 1), e = p, p = void 0);
            if (!Y(m, p)) return !1;
        }
        return d || e ? (d = d || {}, e = e || {}, Xa(d, e)) : !0;
    }
    if (a.constructor === Object) return Xa(a, b);
    throw Error("Invalid type in JSPB array");
}
R.compareFields = Y;
R.prototype.oa = function() {
    return Z(this);
};
R.prototype.cloneMessage = R.prototype.oa;
R.prototype.clone = function() {
    return Z(this);
};
R.prototype.clone = R.prototype.clone;
R.clone = function(a) {
    return Z(a);
};
function Z(a) {
    return new a.constructor(Ya(a.g()));
}
R.copyInto = function(a, b) {
    r(a, R);
    r(b, R);
    n(a.constructor == b.constructor, "Copy source and target message should have the same type.");
    a = Z(a);
    for(var c = b.g(), d = a.g(), e = c.length = 0; e < d.length; e++)c[e] = d[e];
    b.c = a.c;
    b.h = a.h;
};
function Ya(a) {
    if (Array.isArray(a)) {
        for(var b = Array(a.length), c = 0; c < a.length; c++){
            var d = a[c];
            null != d && (b[c] = "object" == typeof d ? Ya(n(d)) : d);
        }
        return b;
    }
    if (S && a instanceof Uint8Array) return new Uint8Array(a);
    b = {};
    for(c in a)d = a[c], null != d && (b[c] = "object" == typeof d ? Ya(n(d)) : d);
    return b;
}
R.registerMessageType = function(a, b) {
    b.Hb = a;
};
exports.Map = L, exports.Message = R, exports.BinaryReader = B, exports.BinaryWriter = H, exports.ExtensionFieldInfo = Q, exports.ExtensionFieldBinaryInfo = La, exports.exportSymbol = ca, exports.inherits = da, exports.object = {
    extend: fa
}, exports.typeOf = k;

},{}],"f6clr":[function(require,module,exports) {
// source: fabric.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */ // GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */ // @ts-nocheck
var jspb = require("google-protobuf");
var goog = jspb;
var global = typeof globalThis !== "undefined" && globalThis || typeof window !== "undefined" && window || typeof global !== "undefined" && global || typeof self !== "undefined" && self || (function() {
    return this;
}).call(null) || Function("return this")();
var inventory_pb = require("./inventory_pb.js");
goog.object.extend(proto, inventory_pb);
goog.exportSymbol("proto.magnoliafabrics.Fabric", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.Fabric = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.magnoliafabrics.Fabric.repeatedFields_, null);
};
goog.inherits(proto.magnoliafabrics.Fabric, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.Fabric.displayName = "proto.magnoliafabrics.Fabric";
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */ proto.magnoliafabrics.Fabric.repeatedFields_ = [
    17,
    18,
    19,
    23,
    29,
    30
];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.Fabric.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.Fabric.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.Fabric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Fabric.toObject = function(includeInstance, msg) {
        var f, obj = {
            sku: jspb.Message.getFieldWithDefault(msg, 1, ""),
            productCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
            pattern: jspb.Message.getFieldWithDefault(msg, 3, ""),
            color: jspb.Message.getFieldWithDefault(msg, 4, ""),
            patternColorCombo: jspb.Message.getFieldWithDefault(msg, 5, ""),
            status: jspb.Message.getFieldWithDefault(msg, 6, ""),
            introDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
            contents: jspb.Message.getFieldWithDefault(msg, 8, ""),
            width: jspb.Message.getFieldWithDefault(msg, 9, ""),
            direction: jspb.Message.getFieldWithDefault(msg, 10, ""),
            hRepeat: jspb.Message.getFieldWithDefault(msg, 11, ""),
            vRepeat: jspb.Message.getFieldWithDefault(msg, 12, ""),
            cleaningCode: jspb.Message.getFieldWithDefault(msg, 13, ""),
            doubleRubs: jspb.Message.getFieldWithDefault(msg, 14, ""),
            misc: jspb.Message.getFieldWithDefault(msg, 15, ""),
            disclaimer: jspb.Message.getFieldWithDefault(msg, 16, ""),
            usesList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
            designsList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
            colorsList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
            origin: jspb.Message.getFieldWithDefault(msg, 20, ""),
            pillingGrade: jspb.Message.getFieldWithDefault(msg, 21, ""),
            fireCode: jspb.Message.getFieldWithDefault(msg, 22, ""),
            categoriesList: (f = jspb.Message.getRepeatedField(msg, 23)) == null ? undefined : f,
            brand: jspb.Message.getFieldWithDefault(msg, 24, ""),
            isDropShipped: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
            image: jspb.Message.getFieldWithDefault(msg, 26, ""),
            displayPrice: jspb.Message.getFieldWithDefault(msg, 27, ""),
            price: jspb.Message.getFieldWithDefault(msg, 28, 0),
            supplementalImagesList: (f = jspb.Message.getRepeatedField(msg, 29)) == null ? undefined : f,
            fullWidthImagesList: (f = jspb.Message.getRepeatedField(msg, 30)) == null ? undefined : f,
            inventory: (f = msg.getInventory()) && inventory_pb.Inventory.toObject(includeInstance, f)
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.Fabric}
 */ proto.magnoliafabrics.Fabric.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.Fabric;
    return proto.magnoliafabrics.Fabric.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.Fabric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.Fabric}
 */ proto.magnoliafabrics.Fabric.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.setSku(value);
                break;
            case 2:
                var value = /** @type {string} */ reader.readString();
                msg.setProductCode(value);
                break;
            case 3:
                var value = /** @type {string} */ reader.readString();
                msg.setPattern(value);
                break;
            case 4:
                var value = /** @type {string} */ reader.readString();
                msg.setColor(value);
                break;
            case 5:
                var value = /** @type {string} */ reader.readString();
                msg.setPatternColorCombo(value);
                break;
            case 6:
                var value = /** @type {string} */ reader.readString();
                msg.setStatus(value);
                break;
            case 7:
                var value = /** @type {string} */ reader.readString();
                msg.setIntroDate(value);
                break;
            case 8:
                var value = /** @type {string} */ reader.readString();
                msg.setContents(value);
                break;
            case 9:
                var value = /** @type {string} */ reader.readString();
                msg.setWidth(value);
                break;
            case 10:
                var value = /** @type {string} */ reader.readString();
                msg.setDirection(value);
                break;
            case 11:
                var value = /** @type {string} */ reader.readString();
                msg.setHRepeat(value);
                break;
            case 12:
                var value = /** @type {string} */ reader.readString();
                msg.setVRepeat(value);
                break;
            case 13:
                var value = /** @type {string} */ reader.readString();
                msg.setCleaningCode(value);
                break;
            case 14:
                var value = /** @type {string} */ reader.readString();
                msg.setDoubleRubs(value);
                break;
            case 15:
                var value = /** @type {string} */ reader.readString();
                msg.setMisc(value);
                break;
            case 16:
                var value = /** @type {string} */ reader.readString();
                msg.setDisclaimer(value);
                break;
            case 17:
                var value = /** @type {string} */ reader.readString();
                msg.addUses(value);
                break;
            case 18:
                var value = /** @type {string} */ reader.readString();
                msg.addDesigns(value);
                break;
            case 19:
                var value = /** @type {string} */ reader.readString();
                msg.addColors(value);
                break;
            case 20:
                var value = /** @type {string} */ reader.readString();
                msg.setOrigin(value);
                break;
            case 21:
                var value = /** @type {string} */ reader.readString();
                msg.setPillingGrade(value);
                break;
            case 22:
                var value = /** @type {string} */ reader.readString();
                msg.setFireCode(value);
                break;
            case 23:
                var value = /** @type {string} */ reader.readString();
                msg.addCategories(value);
                break;
            case 24:
                var value = /** @type {string} */ reader.readString();
                msg.setBrand(value);
                break;
            case 25:
                var value = /** @type {boolean} */ reader.readBool();
                msg.setIsDropShipped(value);
                break;
            case 26:
                var value = /** @type {string} */ reader.readString();
                msg.setImage(value);
                break;
            case 27:
                var value = /** @type {string} */ reader.readString();
                msg.setDisplayPrice(value);
                break;
            case 28:
                var value = /** @type {number} */ reader.readInt32();
                msg.setPrice(value);
                break;
            case 29:
                var value = /** @type {string} */ reader.readString();
                msg.addSupplementalImages(value);
                break;
            case 30:
                var value = /** @type {string} */ reader.readString();
                msg.addFullWidthImages(value);
                break;
            case 31:
                var value = new inventory_pb.Inventory;
                reader.readMessage(value, inventory_pb.Inventory.deserializeBinaryFromReader);
                msg.setInventory(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.Fabric.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.Fabric.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.Fabric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Fabric.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getSku();
    if (f.length > 0) writer.writeString(1, f);
    f = message.getProductCode();
    if (f.length > 0) writer.writeString(2, f);
    f = message.getPattern();
    if (f.length > 0) writer.writeString(3, f);
    f = message.getColor();
    if (f.length > 0) writer.writeString(4, f);
    f = message.getPatternColorCombo();
    if (f.length > 0) writer.writeString(5, f);
    f = message.getStatus();
    if (f.length > 0) writer.writeString(6, f);
    f = message.getIntroDate();
    if (f.length > 0) writer.writeString(7, f);
    f = message.getContents();
    if (f.length > 0) writer.writeString(8, f);
    f = message.getWidth();
    if (f.length > 0) writer.writeString(9, f);
    f = message.getDirection();
    if (f.length > 0) writer.writeString(10, f);
    f = message.getHRepeat();
    if (f.length > 0) writer.writeString(11, f);
    f = message.getVRepeat();
    if (f.length > 0) writer.writeString(12, f);
    f = message.getCleaningCode();
    if (f.length > 0) writer.writeString(13, f);
    f = message.getDoubleRubs();
    if (f.length > 0) writer.writeString(14, f);
    f = message.getMisc();
    if (f.length > 0) writer.writeString(15, f);
    f = message.getDisclaimer();
    if (f.length > 0) writer.writeString(16, f);
    f = message.getUsesList();
    if (f.length > 0) writer.writeRepeatedString(17, f);
    f = message.getDesignsList();
    if (f.length > 0) writer.writeRepeatedString(18, f);
    f = message.getColorsList();
    if (f.length > 0) writer.writeRepeatedString(19, f);
    f = message.getOrigin();
    if (f.length > 0) writer.writeString(20, f);
    f = message.getPillingGrade();
    if (f.length > 0) writer.writeString(21, f);
    f = message.getFireCode();
    if (f.length > 0) writer.writeString(22, f);
    f = message.getCategoriesList();
    if (f.length > 0) writer.writeRepeatedString(23, f);
    f = message.getBrand();
    if (f.length > 0) writer.writeString(24, f);
    f = message.getIsDropShipped();
    if (f) writer.writeBool(25, f);
    f = message.getImage();
    if (f.length > 0) writer.writeString(26, f);
    f = message.getDisplayPrice();
    if (f.length > 0) writer.writeString(27, f);
    f = message.getPrice();
    if (f !== 0) writer.writeInt32(28, f);
    f = message.getSupplementalImagesList();
    if (f.length > 0) writer.writeRepeatedString(29, f);
    f = message.getFullWidthImagesList();
    if (f.length > 0) writer.writeRepeatedString(30, f);
    f = message.getInventory();
    if (f != null) writer.writeMessage(31, f, inventory_pb.Inventory.serializeBinaryToWriter);
};
/**
 * optional string sku = 1;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getSku = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setSku = function(value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string product_code = 2;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getProductCode = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 2, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setProductCode = function(value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string pattern = 3;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getPattern = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 3, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setPattern = function(value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string color = 4;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getColor = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 4, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setColor = function(value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional string pattern_color_combo = 5;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getPatternColorCombo = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 5, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setPatternColorCombo = function(value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * optional string status = 6;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getStatus = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 6, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setStatus = function(value) {
    return jspb.Message.setProto3StringField(this, 6, value);
};
/**
 * optional string intro_date = 7;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getIntroDate = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 7, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setIntroDate = function(value) {
    return jspb.Message.setProto3StringField(this, 7, value);
};
/**
 * optional string contents = 8;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getContents = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 8, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setContents = function(value) {
    return jspb.Message.setProto3StringField(this, 8, value);
};
/**
 * optional string width = 9;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getWidth = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 9, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setWidth = function(value) {
    return jspb.Message.setProto3StringField(this, 9, value);
};
/**
 * optional string direction = 10;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getDirection = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 10, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setDirection = function(value) {
    return jspb.Message.setProto3StringField(this, 10, value);
};
/**
 * optional string h_repeat = 11;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getHRepeat = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 11, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setHRepeat = function(value) {
    return jspb.Message.setProto3StringField(this, 11, value);
};
/**
 * optional string v_repeat = 12;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getVRepeat = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 12, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setVRepeat = function(value) {
    return jspb.Message.setProto3StringField(this, 12, value);
};
/**
 * optional string cleaning_code = 13;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getCleaningCode = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 13, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setCleaningCode = function(value) {
    return jspb.Message.setProto3StringField(this, 13, value);
};
/**
 * optional string double_rubs = 14;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getDoubleRubs = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 14, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setDoubleRubs = function(value) {
    return jspb.Message.setProto3StringField(this, 14, value);
};
/**
 * optional string misc = 15;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getMisc = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 15, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setMisc = function(value) {
    return jspb.Message.setProto3StringField(this, 15, value);
};
/**
 * optional string disclaimer = 16;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getDisclaimer = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 16, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setDisclaimer = function(value) {
    return jspb.Message.setProto3StringField(this, 16, value);
};
/**
 * repeated string uses = 17;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Fabric.prototype.getUsesList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 17);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setUsesList = function(value) {
    return jspb.Message.setField(this, 17, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.addUses = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.clearUsesList = function() {
    return this.setUsesList([]);
};
/**
 * repeated string designs = 18;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Fabric.prototype.getDesignsList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 18);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setDesignsList = function(value) {
    return jspb.Message.setField(this, 18, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.addDesigns = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.clearDesignsList = function() {
    return this.setDesignsList([]);
};
/**
 * repeated string colors = 19;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Fabric.prototype.getColorsList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 19);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setColorsList = function(value) {
    return jspb.Message.setField(this, 19, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.addColors = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.clearColorsList = function() {
    return this.setColorsList([]);
};
/**
 * optional string origin = 20;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getOrigin = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 20, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setOrigin = function(value) {
    return jspb.Message.setProto3StringField(this, 20, value);
};
/**
 * optional string pilling_grade = 21;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getPillingGrade = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 21, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setPillingGrade = function(value) {
    return jspb.Message.setProto3StringField(this, 21, value);
};
/**
 * optional string fire_code = 22;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getFireCode = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 22, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setFireCode = function(value) {
    return jspb.Message.setProto3StringField(this, 22, value);
};
/**
 * repeated string categories = 23;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Fabric.prototype.getCategoriesList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 23);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setCategoriesList = function(value) {
    return jspb.Message.setField(this, 23, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.addCategories = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.clearCategoriesList = function() {
    return this.setCategoriesList([]);
};
/**
 * optional string brand = 24;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getBrand = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 24, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setBrand = function(value) {
    return jspb.Message.setProto3StringField(this, 24, value);
};
/**
 * optional bool is_drop_shipped = 25;
 * @return {boolean}
 */ proto.magnoliafabrics.Fabric.prototype.getIsDropShipped = function() {
    return /** @type {boolean} */ jspb.Message.getBooleanFieldWithDefault(this, 25, false);
};
/**
 * @param {boolean} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setIsDropShipped = function(value) {
    return jspb.Message.setProto3BooleanField(this, 25, value);
};
/**
 * optional string image = 26;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getImage = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 26, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setImage = function(value) {
    return jspb.Message.setProto3StringField(this, 26, value);
};
/**
 * optional string display_price = 27;
 * @return {string}
 */ proto.magnoliafabrics.Fabric.prototype.getDisplayPrice = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 27, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setDisplayPrice = function(value) {
    return jspb.Message.setProto3StringField(this, 27, value);
};
/**
 * optional int32 price = 28;
 * @return {number}
 */ proto.magnoliafabrics.Fabric.prototype.getPrice = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 28, 0);
};
/**
 * @param {number} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setPrice = function(value) {
    return jspb.Message.setProto3IntField(this, 28, value);
};
/**
 * repeated string supplemental_images = 29;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Fabric.prototype.getSupplementalImagesList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 29);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setSupplementalImagesList = function(value) {
    return jspb.Message.setField(this, 29, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.addSupplementalImages = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 29, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.clearSupplementalImagesList = function() {
    return this.setSupplementalImagesList([]);
};
/**
 * repeated string full_width_images = 30;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Fabric.prototype.getFullWidthImagesList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 30);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.setFullWidthImagesList = function(value) {
    return jspb.Message.setField(this, 30, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.addFullWidthImages = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 30, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.clearFullWidthImagesList = function() {
    return this.setFullWidthImagesList([]);
};
/**
 * optional Inventory inventory = 31;
 * @return {?proto.magnoliafabrics.Inventory}
 */ proto.magnoliafabrics.Fabric.prototype.getInventory = function() {
    return /** @type{?proto.magnoliafabrics.Inventory} */ jspb.Message.getWrapperField(this, inventory_pb.Inventory, 31);
};
/**
 * @param {?proto.magnoliafabrics.Inventory|undefined} value
 * @return {!proto.magnoliafabrics.Fabric} returns this
*/ proto.magnoliafabrics.Fabric.prototype.setInventory = function(value) {
    return jspb.Message.setWrapperField(this, 31, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.magnoliafabrics.Fabric} returns this
 */ proto.magnoliafabrics.Fabric.prototype.clearInventory = function() {
    return this.setInventory(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.magnoliafabrics.Fabric.prototype.hasInventory = function() {
    return jspb.Message.getField(this, 31) != null;
};
goog.object.extend(exports, proto.magnoliafabrics);

},{"google-protobuf":"1iFch","./inventory_pb.js":"e5iO3"}],"eZ5Hx":[function(require,module,exports) {
// source: taxonomy.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */ // GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */ // @ts-nocheck
var jspb = require("google-protobuf");
var goog = jspb;
var global = typeof globalThis !== "undefined" && globalThis || typeof window !== "undefined" && window || typeof global !== "undefined" && global || typeof self !== "undefined" && self || (function() {
    return this;
}).call(null) || Function("return this")();
goog.exportSymbol("proto.magnoliafabrics.Taxonomy", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.Taxonomy = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.magnoliafabrics.Taxonomy.repeatedFields_, null);
};
goog.inherits(proto.magnoliafabrics.Taxonomy, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.Taxonomy.displayName = "proto.magnoliafabrics.Taxonomy";
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */ proto.magnoliafabrics.Taxonomy.repeatedFields_ = [
    1,
    2,
    3,
    4,
    5
];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.Taxonomy.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.Taxonomy.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.Taxonomy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Taxonomy.toObject = function(includeInstance, msg) {
        var f, obj = {
            brandsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            usesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
            colorsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
            designsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
            categoriesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.Taxonomy}
 */ proto.magnoliafabrics.Taxonomy.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.Taxonomy;
    return proto.magnoliafabrics.Taxonomy.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.Taxonomy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.Taxonomy}
 */ proto.magnoliafabrics.Taxonomy.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.addBrands(value);
                break;
            case 2:
                var value = /** @type {string} */ reader.readString();
                msg.addUses(value);
                break;
            case 3:
                var value = /** @type {string} */ reader.readString();
                msg.addColors(value);
                break;
            case 4:
                var value = /** @type {string} */ reader.readString();
                msg.addDesigns(value);
                break;
            case 5:
                var value = /** @type {string} */ reader.readString();
                msg.addCategories(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.Taxonomy.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.Taxonomy.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.Taxonomy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.Taxonomy.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getBrandsList();
    if (f.length > 0) writer.writeRepeatedString(1, f);
    f = message.getUsesList();
    if (f.length > 0) writer.writeRepeatedString(2, f);
    f = message.getColorsList();
    if (f.length > 0) writer.writeRepeatedString(3, f);
    f = message.getDesignsList();
    if (f.length > 0) writer.writeRepeatedString(4, f);
    f = message.getCategoriesList();
    if (f.length > 0) writer.writeRepeatedString(5, f);
};
/**
 * repeated string Brands = 1;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Taxonomy.prototype.getBrandsList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 1);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.setBrandsList = function(value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.addBrands = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.clearBrandsList = function() {
    return this.setBrandsList([]);
};
/**
 * repeated string Uses = 2;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Taxonomy.prototype.getUsesList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 2);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.setUsesList = function(value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.addUses = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.clearUsesList = function() {
    return this.setUsesList([]);
};
/**
 * repeated string Colors = 3;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Taxonomy.prototype.getColorsList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 3);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.setColorsList = function(value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.addColors = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.clearColorsList = function() {
    return this.setColorsList([]);
};
/**
 * repeated string Designs = 4;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Taxonomy.prototype.getDesignsList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 4);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.setDesignsList = function(value) {
    return jspb.Message.setField(this, 4, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.addDesigns = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.clearDesignsList = function() {
    return this.setDesignsList([]);
};
/**
 * repeated string Categories = 5;
 * @return {!Array<string>}
 */ proto.magnoliafabrics.Taxonomy.prototype.getCategoriesList = function() {
    return /** @type {!Array<string>} */ jspb.Message.getRepeatedField(this, 5);
};
/**
 * @param {!Array<string>} value
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.setCategoriesList = function(value) {
    return jspb.Message.setField(this, 5, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.addCategories = function(value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.Taxonomy} returns this
 */ proto.magnoliafabrics.Taxonomy.prototype.clearCategoriesList = function() {
    return this.setCategoriesList([]);
};
goog.object.extend(exports, proto.magnoliafabrics);

},{"google-protobuf":"1iFch"}],"exhZu":[function(require,module,exports) {
// source: cleaning_code.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */ // GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */ // @ts-nocheck
var jspb = require("google-protobuf");
var goog = jspb;
var global = typeof globalThis !== "undefined" && globalThis || typeof window !== "undefined" && window || typeof global !== "undefined" && global || typeof self !== "undefined" && self || (function() {
    return this;
}).call(null) || Function("return this")();
goog.exportSymbol("proto.magnoliafabrics.CleaningCode", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.CleaningCode = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.CleaningCode, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.CleaningCode.displayName = "proto.magnoliafabrics.CleaningCode";
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.CleaningCode.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.CleaningCode.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.CleaningCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.CleaningCode.toObject = function(includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, ""),
            description: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.CleaningCode}
 */ proto.magnoliafabrics.CleaningCode.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.CleaningCode;
    return proto.magnoliafabrics.CleaningCode.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.CleaningCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.CleaningCode}
 */ proto.magnoliafabrics.CleaningCode.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {string} */ reader.readString();
                msg.setDescription(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.CleaningCode.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.CleaningCode.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.CleaningCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.CleaningCode.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getId();
    if (f.length > 0) writer.writeString(1, f);
    f = message.getDescription();
    if (f.length > 0) writer.writeString(2, f);
};
/**
 * optional string id = 1;
 * @return {string}
 */ proto.magnoliafabrics.CleaningCode.prototype.getId = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.CleaningCode} returns this
 */ proto.magnoliafabrics.CleaningCode.prototype.setId = function(value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string description = 2;
 * @return {string}
 */ proto.magnoliafabrics.CleaningCode.prototype.getDescription = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 2, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.CleaningCode} returns this
 */ proto.magnoliafabrics.CleaningCode.prototype.setDescription = function(value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
goog.object.extend(exports, proto.magnoliafabrics);

},{"google-protobuf":"1iFch"}],"dkY5H":[function(require,module,exports) {
// source: magnolia_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */ // GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */ // @ts-nocheck
var jspb = require("google-protobuf");
var goog = jspb;
var global = typeof globalThis !== "undefined" && globalThis || typeof window !== "undefined" && window || typeof global !== "undefined" && global || typeof self !== "undefined" && self || (function() {
    return this;
}).call(null) || Function("return this")();
var inventory_pb = require("./inventory_pb.js");
goog.object.extend(proto, inventory_pb);
var fabric_pb = require("./fabric_pb.js");
goog.object.extend(proto, fabric_pb);
var taxonomy_pb = require("./taxonomy_pb.js");
goog.object.extend(proto, taxonomy_pb);
var cleaning_code_pb = require("./cleaning_code_pb.js");
goog.object.extend(proto, cleaning_code_pb);
goog.exportSymbol("proto.magnoliafabrics.GetAllFabricTaxonomyRequest", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetAllFabricTaxonomyResponse", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetAllFabricsRequest", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetAllFabricsResponse", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetAllInventoryRequest", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetAllInventoryResponse", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetCleaningCodesRequest", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetCleaningCodesResponse", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetFabricByIDRequest", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetFabricByIDResponse", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetFabricByNameRequest", null, global);
goog.exportSymbol("proto.magnoliafabrics.GetFabricByNameResponse", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetAllFabricsRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetAllFabricsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetAllFabricsRequest.displayName = "proto.magnoliafabrics.GetAllFabricsRequest";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetAllFabricsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.magnoliafabrics.GetAllFabricsResponse.repeatedFields_, null);
};
goog.inherits(proto.magnoliafabrics.GetAllFabricsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetAllFabricsResponse.displayName = "proto.magnoliafabrics.GetAllFabricsResponse";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.displayName = "proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.repeatedFields_, null);
};
goog.inherits(proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.displayName = "proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetAllInventoryRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetAllInventoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetAllInventoryRequest.displayName = "proto.magnoliafabrics.GetAllInventoryRequest";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetAllInventoryResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.magnoliafabrics.GetAllInventoryResponse.repeatedFields_, null);
};
goog.inherits(proto.magnoliafabrics.GetAllInventoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetAllInventoryResponse.displayName = "proto.magnoliafabrics.GetAllInventoryResponse";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetFabricByIDRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetFabricByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetFabricByIDRequest.displayName = "proto.magnoliafabrics.GetFabricByIDRequest";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetFabricByIDResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetFabricByIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetFabricByIDResponse.displayName = "proto.magnoliafabrics.GetFabricByIDResponse";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetFabricByNameRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetFabricByNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetFabricByNameRequest.displayName = "proto.magnoliafabrics.GetFabricByNameRequest";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetFabricByNameResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetFabricByNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetFabricByNameResponse.displayName = "proto.magnoliafabrics.GetFabricByNameResponse";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetAllFabricTaxonomyRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetAllFabricTaxonomyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetAllFabricTaxonomyRequest.displayName = "proto.magnoliafabrics.GetAllFabricTaxonomyRequest";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetAllFabricTaxonomyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.displayName = "proto.magnoliafabrics.GetAllFabricTaxonomyResponse";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetCleaningCodesRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetCleaningCodesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetCleaningCodesRequest.displayName = "proto.magnoliafabrics.GetCleaningCodesRequest";
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.magnoliafabrics.GetCleaningCodesResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.magnoliafabrics.GetCleaningCodesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) /**
   * @public
   * @override
   */ proto.magnoliafabrics.GetCleaningCodesResponse.displayName = "proto.magnoliafabrics.GetCleaningCodesResponse";
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetAllFabricsRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetAllFabricsRequest.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetAllFabricsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricsRequest.toObject = function(includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetAllFabricsRequest}
 */ proto.magnoliafabrics.GetAllFabricsRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetAllFabricsRequest;
    return proto.magnoliafabrics.GetAllFabricsRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetAllFabricsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetAllFabricsRequest}
 */ proto.magnoliafabrics.GetAllFabricsRequest.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        field;
        reader.skipField();
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetAllFabricsRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetAllFabricsRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetAllFabricsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricsRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */ proto.magnoliafabrics.GetAllFabricsResponse.repeatedFields_ = [
    1
];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetAllFabricsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetAllFabricsResponse.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetAllFabricsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            fabricsList: jspb.Message.toObjectList(msg.getFabricsList(), fabric_pb.Fabric.toObject, includeInstance)
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetAllFabricsResponse}
 */ proto.magnoliafabrics.GetAllFabricsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetAllFabricsResponse;
    return proto.magnoliafabrics.GetAllFabricsResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetAllFabricsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetAllFabricsResponse}
 */ proto.magnoliafabrics.GetAllFabricsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = new fabric_pb.Fabric;
                reader.readMessage(value, fabric_pb.Fabric.deserializeBinaryFromReader);
                msg.addFabrics(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetAllFabricsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetAllFabricsResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetAllFabricsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricsResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getFabricsList();
    if (f.length > 0) writer.writeRepeatedMessage(1, f, fabric_pb.Fabric.serializeBinaryToWriter);
};
/**
 * repeated Fabric fabrics = 1;
 * @return {!Array<!proto.magnoliafabrics.Fabric>}
 */ proto.magnoliafabrics.GetAllFabricsResponse.prototype.getFabricsList = function() {
    return /** @type{!Array<!proto.magnoliafabrics.Fabric>} */ jspb.Message.getRepeatedWrapperField(this, fabric_pb.Fabric, 1);
};
/**
 * @param {!Array<!proto.magnoliafabrics.Fabric>} value
 * @return {!proto.magnoliafabrics.GetAllFabricsResponse} returns this
*/ proto.magnoliafabrics.GetAllFabricsResponse.prototype.setFabricsList = function(value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.magnoliafabrics.Fabric=} opt_value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Fabric}
 */ proto.magnoliafabrics.GetAllFabricsResponse.prototype.addFabrics = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.magnoliafabrics.Fabric, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.GetAllFabricsResponse} returns this
 */ proto.magnoliafabrics.GetAllFabricsResponse.prototype.clearFabricsList = function() {
    return this.setFabricsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.toObject = function(includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest;
    return proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        field;
        reader.skipField();
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.repeatedFields_ = [
    1
];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            fabricsList: jspb.Message.toObjectList(msg.getFabricsList(), fabric_pb.Fabric.toObject, includeInstance)
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse;
    return proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = new fabric_pb.Fabric;
                reader.readMessage(value, fabric_pb.Fabric.deserializeBinaryFromReader);
                msg.addFabrics(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getFabricsList();
    if (f.length > 0) writer.writeRepeatedMessage(1, f, fabric_pb.Fabric.serializeBinaryToWriter);
};
/**
 * repeated Fabric fabrics = 1;
 * @return {!Array<!proto.magnoliafabrics.Fabric>}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.prototype.getFabricsList = function() {
    return /** @type{!Array<!proto.magnoliafabrics.Fabric>} */ jspb.Message.getRepeatedWrapperField(this, fabric_pb.Fabric, 1);
};
/**
 * @param {!Array<!proto.magnoliafabrics.Fabric>} value
 * @return {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse} returns this
*/ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.prototype.setFabricsList = function(value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.magnoliafabrics.Fabric=} opt_value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Fabric}
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.prototype.addFabrics = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.magnoliafabrics.Fabric, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse} returns this
 */ proto.magnoliafabrics.GetAllFabricsWithoutInventoryResponse.prototype.clearFabricsList = function() {
    return this.setFabricsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetAllInventoryRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetAllInventoryRequest.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetAllInventoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllInventoryRequest.toObject = function(includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetAllInventoryRequest}
 */ proto.magnoliafabrics.GetAllInventoryRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetAllInventoryRequest;
    return proto.magnoliafabrics.GetAllInventoryRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetAllInventoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetAllInventoryRequest}
 */ proto.magnoliafabrics.GetAllInventoryRequest.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        field;
        reader.skipField();
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetAllInventoryRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetAllInventoryRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetAllInventoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllInventoryRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */ proto.magnoliafabrics.GetAllInventoryResponse.repeatedFields_ = [
    1
];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetAllInventoryResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetAllInventoryResponse.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetAllInventoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllInventoryResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            inventoryList: jspb.Message.toObjectList(msg.getInventoryList(), inventory_pb.Inventory.toObject, includeInstance)
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetAllInventoryResponse}
 */ proto.magnoliafabrics.GetAllInventoryResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetAllInventoryResponse;
    return proto.magnoliafabrics.GetAllInventoryResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetAllInventoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetAllInventoryResponse}
 */ proto.magnoliafabrics.GetAllInventoryResponse.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = new inventory_pb.Inventory;
                reader.readMessage(value, inventory_pb.Inventory.deserializeBinaryFromReader);
                msg.addInventory(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetAllInventoryResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetAllInventoryResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetAllInventoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllInventoryResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getInventoryList();
    if (f.length > 0) writer.writeRepeatedMessage(1, f, inventory_pb.Inventory.serializeBinaryToWriter);
};
/**
 * repeated Inventory inventory = 1;
 * @return {!Array<!proto.magnoliafabrics.Inventory>}
 */ proto.magnoliafabrics.GetAllInventoryResponse.prototype.getInventoryList = function() {
    return /** @type{!Array<!proto.magnoliafabrics.Inventory>} */ jspb.Message.getRepeatedWrapperField(this, inventory_pb.Inventory, 1);
};
/**
 * @param {!Array<!proto.magnoliafabrics.Inventory>} value
 * @return {!proto.magnoliafabrics.GetAllInventoryResponse} returns this
*/ proto.magnoliafabrics.GetAllInventoryResponse.prototype.setInventoryList = function(value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.magnoliafabrics.Inventory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.magnoliafabrics.Inventory}
 */ proto.magnoliafabrics.GetAllInventoryResponse.prototype.addInventory = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.magnoliafabrics.Inventory, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.magnoliafabrics.GetAllInventoryResponse} returns this
 */ proto.magnoliafabrics.GetAllInventoryResponse.prototype.clearInventoryList = function() {
    return this.setInventoryList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetFabricByIDRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetFabricByIDRequest.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetFabricByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetFabricByIDRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            fabricId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetFabricByIDRequest}
 */ proto.magnoliafabrics.GetFabricByIDRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetFabricByIDRequest;
    return proto.magnoliafabrics.GetFabricByIDRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetFabricByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetFabricByIDRequest}
 */ proto.magnoliafabrics.GetFabricByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.setFabricId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetFabricByIDRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetFabricByIDRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetFabricByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetFabricByIDRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getFabricId();
    if (f.length > 0) writer.writeString(1, f);
};
/**
 * optional string fabric_id = 1;
 * @return {string}
 */ proto.magnoliafabrics.GetFabricByIDRequest.prototype.getFabricId = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.GetFabricByIDRequest} returns this
 */ proto.magnoliafabrics.GetFabricByIDRequest.prototype.setFabricId = function(value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetFabricByIDResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetFabricByIDResponse.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetFabricByIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetFabricByIDResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            fabric: (f = msg.getFabric()) && fabric_pb.Fabric.toObject(includeInstance, f)
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetFabricByIDResponse}
 */ proto.magnoliafabrics.GetFabricByIDResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetFabricByIDResponse;
    return proto.magnoliafabrics.GetFabricByIDResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetFabricByIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetFabricByIDResponse}
 */ proto.magnoliafabrics.GetFabricByIDResponse.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = new fabric_pb.Fabric;
                reader.readMessage(value, fabric_pb.Fabric.deserializeBinaryFromReader);
                msg.setFabric(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetFabricByIDResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetFabricByIDResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetFabricByIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetFabricByIDResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getFabric();
    if (f != null) writer.writeMessage(1, f, fabric_pb.Fabric.serializeBinaryToWriter);
};
/**
 * optional Fabric fabric = 1;
 * @return {?proto.magnoliafabrics.Fabric}
 */ proto.magnoliafabrics.GetFabricByIDResponse.prototype.getFabric = function() {
    return /** @type{?proto.magnoliafabrics.Fabric} */ jspb.Message.getWrapperField(this, fabric_pb.Fabric, 1);
};
/**
 * @param {?proto.magnoliafabrics.Fabric|undefined} value
 * @return {!proto.magnoliafabrics.GetFabricByIDResponse} returns this
*/ proto.magnoliafabrics.GetFabricByIDResponse.prototype.setFabric = function(value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.magnoliafabrics.GetFabricByIDResponse} returns this
 */ proto.magnoliafabrics.GetFabricByIDResponse.prototype.clearFabric = function() {
    return this.setFabric(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.magnoliafabrics.GetFabricByIDResponse.prototype.hasFabric = function() {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetFabricByNameRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetFabricByNameRequest.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetFabricByNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetFabricByNameRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            fabricName: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetFabricByNameRequest}
 */ proto.magnoliafabrics.GetFabricByNameRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetFabricByNameRequest;
    return proto.magnoliafabrics.GetFabricByNameRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetFabricByNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetFabricByNameRequest}
 */ proto.magnoliafabrics.GetFabricByNameRequest.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.setFabricName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetFabricByNameRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetFabricByNameRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetFabricByNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetFabricByNameRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getFabricName();
    if (f.length > 0) writer.writeString(1, f);
};
/**
 * optional string fabric_name = 1;
 * @return {string}
 */ proto.magnoliafabrics.GetFabricByNameRequest.prototype.getFabricName = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, "");
};
/**
 * @param {string} value
 * @return {!proto.magnoliafabrics.GetFabricByNameRequest} returns this
 */ proto.magnoliafabrics.GetFabricByNameRequest.prototype.setFabricName = function(value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetFabricByNameResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetFabricByNameResponse.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetFabricByNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetFabricByNameResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            fabric: (f = msg.getFabric()) && fabric_pb.Fabric.toObject(includeInstance, f)
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetFabricByNameResponse}
 */ proto.magnoliafabrics.GetFabricByNameResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetFabricByNameResponse;
    return proto.magnoliafabrics.GetFabricByNameResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetFabricByNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetFabricByNameResponse}
 */ proto.magnoliafabrics.GetFabricByNameResponse.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = new fabric_pb.Fabric;
                reader.readMessage(value, fabric_pb.Fabric.deserializeBinaryFromReader);
                msg.setFabric(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetFabricByNameResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetFabricByNameResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetFabricByNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetFabricByNameResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getFabric();
    if (f != null) writer.writeMessage(1, f, fabric_pb.Fabric.serializeBinaryToWriter);
};
/**
 * optional Fabric fabric = 1;
 * @return {?proto.magnoliafabrics.Fabric}
 */ proto.magnoliafabrics.GetFabricByNameResponse.prototype.getFabric = function() {
    return /** @type{?proto.magnoliafabrics.Fabric} */ jspb.Message.getWrapperField(this, fabric_pb.Fabric, 1);
};
/**
 * @param {?proto.magnoliafabrics.Fabric|undefined} value
 * @return {!proto.magnoliafabrics.GetFabricByNameResponse} returns this
*/ proto.magnoliafabrics.GetFabricByNameResponse.prototype.setFabric = function(value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.magnoliafabrics.GetFabricByNameResponse} returns this
 */ proto.magnoliafabrics.GetFabricByNameResponse.prototype.clearFabric = function() {
    return this.setFabric(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.magnoliafabrics.GetFabricByNameResponse.prototype.hasFabric = function() {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetAllFabricTaxonomyRequest.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricTaxonomyRequest.toObject = function(includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetAllFabricTaxonomyRequest}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetAllFabricTaxonomyRequest;
    return proto.magnoliafabrics.GetAllFabricTaxonomyRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetAllFabricTaxonomyRequest}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyRequest.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        field;
        reader.skipField();
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetAllFabricTaxonomyRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricTaxonomyRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetAllFabricTaxonomyResponse.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            taxonomy: (f = msg.getTaxonomy()) && taxonomy_pb.Taxonomy.toObject(includeInstance, f)
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetAllFabricTaxonomyResponse}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetAllFabricTaxonomyResponse;
    return proto.magnoliafabrics.GetAllFabricTaxonomyResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetAllFabricTaxonomyResponse}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = new taxonomy_pb.Taxonomy;
                reader.readMessage(value, taxonomy_pb.Taxonomy.deserializeBinaryFromReader);
                msg.setTaxonomy(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetAllFabricTaxonomyResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetAllFabricTaxonomyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getTaxonomy();
    if (f != null) writer.writeMessage(1, f, taxonomy_pb.Taxonomy.serializeBinaryToWriter);
};
/**
 * optional Taxonomy taxonomy = 1;
 * @return {?proto.magnoliafabrics.Taxonomy}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.prototype.getTaxonomy = function() {
    return /** @type{?proto.magnoliafabrics.Taxonomy} */ jspb.Message.getWrapperField(this, taxonomy_pb.Taxonomy, 1);
};
/**
 * @param {?proto.magnoliafabrics.Taxonomy|undefined} value
 * @return {!proto.magnoliafabrics.GetAllFabricTaxonomyResponse} returns this
*/ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.prototype.setTaxonomy = function(value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.magnoliafabrics.GetAllFabricTaxonomyResponse} returns this
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.prototype.clearTaxonomy = function() {
    return this.setTaxonomy(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.magnoliafabrics.GetAllFabricTaxonomyResponse.prototype.hasTaxonomy = function() {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetCleaningCodesRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetCleaningCodesRequest.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetCleaningCodesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetCleaningCodesRequest.toObject = function(includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetCleaningCodesRequest}
 */ proto.magnoliafabrics.GetCleaningCodesRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetCleaningCodesRequest;
    return proto.magnoliafabrics.GetCleaningCodesRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetCleaningCodesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetCleaningCodesRequest}
 */ proto.magnoliafabrics.GetCleaningCodesRequest.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        field;
        reader.skipField();
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetCleaningCodesRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetCleaningCodesRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetCleaningCodesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetCleaningCodesRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.magnoliafabrics.GetCleaningCodesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.magnoliafabrics.GetCleaningCodesResponse.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.magnoliafabrics.GetCleaningCodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetCleaningCodesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            cleaningCodesMap: (f = msg.getCleaningCodesMap()) ? f.toObject(includeInstance, proto.magnoliafabrics.CleaningCode.toObject) : []
        };
        if (includeInstance) obj.$jspbMessageInstance = msg;
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.magnoliafabrics.GetCleaningCodesResponse}
 */ proto.magnoliafabrics.GetCleaningCodesResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.magnoliafabrics.GetCleaningCodesResponse;
    return proto.magnoliafabrics.GetCleaningCodesResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.magnoliafabrics.GetCleaningCodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.magnoliafabrics.GetCleaningCodesResponse}
 */ proto.magnoliafabrics.GetCleaningCodesResponse.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) break;
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = msg.getCleaningCodesMap();
                reader.readMessage(value, function(message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.magnoliafabrics.CleaningCode.deserializeBinaryFromReader, "", new proto.magnoliafabrics.CleaningCode());
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.magnoliafabrics.GetCleaningCodesResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.magnoliafabrics.GetCleaningCodesResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.magnoliafabrics.GetCleaningCodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.magnoliafabrics.GetCleaningCodesResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getCleaningCodesMap(true);
    if (f && f.getLength() > 0) f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.magnoliafabrics.CleaningCode.serializeBinaryToWriter);
};
/**
 * map<string, CleaningCode> cleaning_codes = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.magnoliafabrics.CleaningCode>}
 */ proto.magnoliafabrics.GetCleaningCodesResponse.prototype.getCleaningCodesMap = function(opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.magnoliafabrics.CleaningCode>} */ jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.magnoliafabrics.CleaningCode);
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.magnoliafabrics.GetCleaningCodesResponse} returns this
 */ proto.magnoliafabrics.GetCleaningCodesResponse.prototype.clearCleaningCodesMap = function() {
    this.getCleaningCodesMap().clear();
    return this;
};
goog.object.extend(exports, proto.magnoliafabrics);

},{"google-protobuf":"1iFch","./inventory_pb.js":"e5iO3","./fabric_pb.js":"f6clr","./taxonomy_pb.js":"eZ5Hx","./cleaning_code_pb.js":"exhZu"}]},["cyBk0","aGFbi"], "aGFbi", "parcelRequirebf65")

//# sourceMappingURL=magnoliafabrics.min.js.map
